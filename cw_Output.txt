------+------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File            Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1         cw.s      1 | Comment     | 11 |         |    0 | 00/8000               | ************************
    2 |  1         cw.s      2 | Comment     | 11 |         |    0 | 00/8000               | *   crossword solver   * 
    3 |  1         cw.s      3 | Comment     | 11 |         |    0 | 00/8000               | ************************
    4 |  1         cw.s      4 | Comment     | 11 |         |    0 | 00/8000               | * \
    5 |  1         cw.s      5 | Comment     | 11 |         |    0 | 00/8000               | * Purpose : make fast search in a 400000++  french words list, using patterns
    6 |  1         cw.s      6 | Comment     | 11 |         |    0 | 00/8000               | * Uses special bitmap index files.
    7 |  1         cw.s      7 | Comment     | 11 |         |    0 | 00/8000               | *
    8 |  1         cw.s      8 | Comment     | 11 |         |    0 | 00/8000               | * History :
    9 |  1         cw.s      9 | Comment     | 11 |         |    0 | 00/8000               | * version 1.0 : uses tempo files 
   10 |  1         cw.s     10 | Comment     | 11 |         |    0 | 00/8000               | * version 1.1 : get rid of tempo files, works in memory mostly.
   11 |  1         cw.s     11 | Comment     | 11 |         |    0 | 00/8000               | * version 1.2 : add a progress bar
   12 |  1         cw.s     12 | Comment     | 11 |         |    0 | 00/8000               | * version 1.4 : 
   13 |  1         cw.s     13 | Comment     | 11 |         |    0 | 00/8000               | * => new word file (ods8) 402328 words <= 15 chars, + 3 words : AIRIAL, AIRIAUX, BRIC)
   14 |  1         cw.s     14 | Comment     | 11 |         |    0 | 00/8000               | * => page stop (wait a key, or esc. to abort).
   15 |  1         cw.s     15 | Comment     | 11 |         |    0 | 00/8000               | * version 2.0 : split dictionary and indexes by word length
   16 |  1         cw.s     16 | Comment     | 11 |         |    0 | 00/8000               | * => now indexes don't need to be run length encoded, nor they need to be splited in 4 parts.
   17 |  1         cw.s     17 | Empty       | 11 |         |    0 | 00/8000               |                                        
   18 |  1         cw.s     18 | Comment     | 11 |         |    0 | 00/8000               | * version 2.1 french : 
   19 |  1         cw.s     19 | Comment     | 11 |         |    0 | 00/8000               | * => now include Officiel du Scrabble 9 (2024) with new words. 
   20 |  1         cw.s     20 | Comment     | 11 |         |    0 | 00/8000               | * NB : the 64 words deleted by the Scrabble editor (present in ODS8) have been reinstated.
   21 |  1         cw.s     21 | Comment     | 11 |         |    0 | 00/8000               | * => minor optimisations
   22 |  1         cw.s     22 | Comment     | 11 |         |    0 | 00/8000               | * => debug info for Applewin debugger.
   23 |  1         cw.s     23 | Comment     | 11 |         |    0 | 00/8000               | * => better comments
   24 |  1         cw.s     24 | Comment     | 11 |         |    0 | 00/8000               | *
   25 |  1         cw.s     25 | Comment     | 11 |         |    0 | 00/8000               | * version 2.1.1 french : 
   26 |  1         cw.s     26 | Comment     | 11 |         |    0 | 00/8000               | * analysis of bytes resulting from ANDing index files 
   27 |  1         cw.s     27 | Comment     | 11 |         |    0 | 00/8000               | * is now limited to the strict number required (= length of index file). 
   28 |  1         cw.s     28 | Comment     | 11 |         |    0 | 00/8000               | * In previous versions, a memory area of 4kb was analyzed (from $2000 to $3FFF).
   29 |  1         cw.s     29 | Comment     | 11 |         |    0 | 00/8000               | *
   30 |  1         cw.s     30 | Comment     | 11 |         |    0 | 00/8000               | ********************  memory org.  ***********************
   31 |  1         cw.s     31 | Comment     | 11 |         |    0 | 00/8000               | * Dictionary : 407192 words (402328 words in ODS8)
   32 |  1         cw.s     32 | Comment     | 11 |         |    0 | 00/8000               | * ==> split in 14 parts, by number of letters (from 2 to 15)
   33 |  1         cw.s     33 | Empty       | 11 |         |    0 | 00/8000               |                                        
   34 |  1         cw.s     34 | Comment     | 11 |         |    0 | 00/8000               | * program : $1000 to $1FFF 
   35 |  1         cw.s     35 | Comment     | 11 |         |    0 | 00/8000               | * bitmap1 : $2000 -> $3FFF  
   36 |  1         cw.s     36 | Comment     | 11 |         |    0 | 00/8000               | * bitmap2 : $4000 -> $5FFF
   37 |  1         cw.s     37 | Comment     | 11 |         |    0 | 00/8000               | * WARNING: these 4 kB memory areas are suitable for a maximum number of 65536 words
   38 |  1         cw.s     38 | Comment     | 11 |         |    0 | 00/8000               | * of the same length, which is currently the case.
   39 |  1         cw.s     39 | Comment     | 11 |         |    0 | 00/8000               | * The current maximum is 63742 for 10-letter words. 
   40 |  1         cw.s     40 | Comment     | 11 |         |    0 | 00/8000               | * But this may change as more words are added in the future.
   41 |  1         cw.s     41 | Comment     | 11 |         |    0 | 00/8000               | *
   42 |  1         cw.s     42 | Comment     | 11 |         |    0 | 00/8000               | * buffers for OPEN MLI call (1024 bytes) : $8400 (index files) and $8800 (words files) 
   43 |  1         cw.s     43 | Comment     | 11 |         |    0 | 00/8000               | *
   44 |  1         cw.s     44 | Comment     | 11 |         |    0 | 00/8000               | *
   45 |  1         cw.s     45 | Comment     | 11 |         |    0 | 00/8000               | *
   46 |  1         cw.s     46 | Comment     | 11 |         |    0 | 00/8000               | ********************************************************************
   47 |  1         cw.s     47 | Comment     | 11 |         |    0 | 00/8000               | *                             P R O G R A M                        *
   48 |  1         cw.s     48 | Comment     | 11 |         |    0 | 00/8000               | ********************************************************************
   49 |  1         cw.s     49 | Directive   | 11 |         |    0 | 00/8000               |                 MX      %11            ; for Merlin : A, X, Y 8 bits
   50 |  1         cw.s     50 | Directive   | 11 |         |    0 | 00/8000               |                 put     mac.s          ; macros
   51 |  2        mac.s      1 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * *
   52 |  2        mac.s      2 | Comment     | 11 |         |    0 | 00/8000               | *     MACROS    *
   53 |  2        mac.s      3 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * *
   54 |  2        mac.s      4 | Comment     | 11 |         |    0 | 00/8000               | *
   55 |  2        mac.s      5 | Directive   | 11 |         |    0 | 00/8000               |                 DO      0              
   56 |  2        mac.s    132 | Directive   | 11 |         |    0 | 00/8000               |                 FIN                    
   57 |  1         cw.s     51 | Directive   | 11 |         |    0 | 00/8000               |                 put     equ.s          ; equates
   58 |  3        equ.s      1 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * 
   59 |  3        equ.s      2 | Comment     | 11 |         |    0 | 00/8000               | *                     EQUates             *
   60 |  3        equ.s      3 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * 
   61 |  3        equ.s      4 | Comment     | 11 |         |    0 | 00/8000               | *
   62 |  3        equ.s      5 | Comment     | 11 |         |    0 | 00/8000               | * MLI calls (ProDOS)
   63 |  3        equ.s      6 | Equivalence | 11 |         |    0 | 00/8000               | MLI             equ     $BF00          
   64 |  3        equ.s      7 | Equivalence | 11 |         |    0 | 00/8000               | create          equ     $C0            
   65 |  3        equ.s      8 | Equivalence | 11 |         |    0 | 00/8000               | destroy         equ     $C1            
   66 |  3        equ.s      9 | Equivalence | 11 |         |    0 | 00/8000               | online          equ     $C5            
   67 |  3        equ.s     10 | Equivalence | 11 |         |    0 | 00/8000               | getprefix       equ     $c7            
   68 |  3        equ.s     11 | Equivalence | 11 |         |    0 | 00/8000               | setprefix       equ     $c6            
   69 |  3        equ.s     12 | Equivalence | 11 |         |    0 | 00/8000               | open            equ     $C8            
   70 |  3        equ.s     13 | Equivalence | 11 |         |    0 | 00/8000               | close           equ     $CC            
   71 |  3        equ.s     14 | Equivalence | 11 |         |    0 | 00/8000               | read            equ     $CA            
   72 |  3        equ.s     15 | Equivalence | 11 |         |    0 | 00/8000               | write           equ     $CB            
   73 |  3        equ.s     16 | Equivalence | 11 |         |    0 | 00/8000               | setmark         equ     $ce            
   74 |  3        equ.s     17 | Equivalence | 11 |         |    0 | 00/8000               | geteof          equ     $d1            
   75 |  3        equ.s     18 | Equivalence | 11 |         |    0 | 00/8000               | quit            equ     $65            
   76 |  3        equ.s     19 | Comment     | 11 |         |    0 | 00/8000               | *
   77 |  3        equ.s     20 | Comment     | 11 |         |    0 | 00/8000               | * ProDOS
   78 |  3        equ.s     21 | Equivalence | 11 |         |    0 | 00/8000               | GETBUFR         equ     $bef5          
   79 |  3        equ.s     22 | Equivalence | 11 |         |    0 | 00/8000               | FREEBUFR        equ     $BEF8          
   80 |  3        equ.s     23 | Equivalence | 11 |         |    0 | 00/8000               | devnum          equ     $BF30          ; last used device here, format : DSSS0000
   81 |  3        equ.s     24 | Equivalence | 11 |         |    0 | 00/8000               | RSHIMEM         equ     $BEFB          
   82 |  3        equ.s     25 | Comment     | 11 |         |    0 | 00/8000               | *
   83 |  3        equ.s     26 | Comment     | 11 |         |    0 | 00/8000               | * ROM routines
   84 |  3        equ.s     27 | Equivalence | 11 |         |    0 | 00/8000               | home            equ     $FC58          
   85 |  3        equ.s     28 | Equivalence | 11 |         |    0 | 00/8000               | text            equ     $FB2F          
   86 |  3        equ.s     29 | Comment     | 11 |         |    0 | 00/8000               | ;cout            equ $FDF0
   87 |  3        equ.s     30 | Equivalence | 11 |         |    0 | 00/8000               | cout            equ     $FDED          
   88 |  3        equ.s     31 | Equivalence | 11 |         |    0 | 00/8000               | vtab            equ     $FC22          
   89 |  3        equ.s     32 | Equivalence | 11 |         |    0 | 00/8000               | getln           equ     $FD6A          
   90 |  3        equ.s     33 | Equivalence | 11 |         |    0 | 00/8000               | getlnz          equ     $FD67          ; = return + getln
   91 |  3        equ.s     34 | Equivalence | 11 |         |    0 | 00/8000               | getln1          equ     $FD6F          ; = getln without prompt
   92 |  3        equ.s     35 | Equivalence | 11 |         |    0 | 00/8000               | bascalc         equ     $FBC1          
   93 |  3        equ.s     36 | Equivalence | 11 |         |    0 | 00/8000               | crout           equ     $FD8E          ; print carriage return
   94 |  3        equ.s     37 | Equivalence | 11 |         |    0 | 00/8000               | clreop          equ     $FC42          ; clear from cursor to end of page
   95 |  3        equ.s     38 | Equivalence | 11 |         |    0 | 00/8000               | clreol          equ     $FC9C          ; clear from cursor to end of line
   96 |  3        equ.s     39 | Equivalence | 11 |         |    0 | 00/8000               | xtohex          equ     $F944          
   97 |  3        equ.s     40 | Equivalence | 11 |         |    0 | 00/8000               | rdkey           equ     $FD0C          ; wait for keypress
   98 |  3        equ.s     41 | Equivalence | 11 |         |    0 | 00/8000               | printhex        equ     $FDDA          
   99 |  3        equ.s     42 | Equivalence | 11 |         |    0 | 00/8000               | AUXMOV          equ     $C311          
  100 |  3        equ.s     43 | Equivalence | 11 |         |    0 | 00/8000               | OUTPORT         equ     $FE95          
  101 |  3        equ.s     44 | Comment     | 11 |         |    0 | 00/8000               | *
  102 |  3        equ.s     45 | Comment     | 11 |         |    0 | 00/8000               | * ROM switches
  103 |  3        equ.s     46 | Equivalence | 11 |         |    0 | 00/8000               | RAMWRTOFF       equ     $C004          ; write to main
  104 |  3        equ.s     47 | Equivalence | 11 |         |    0 | 00/8000               | RAMWRTON        equ     $C005          ; write to aux
  105 |  3        equ.s     48 | Equivalence | 11 |         |    0 | 00/8000               | RAMRDON         equ     $C003          ; read aux
  106 |  3        equ.s     49 | Equivalence | 11 |         |    0 | 00/8000               | RAMRDOFF        equ     $C002          ; read main
  107 |  3        equ.s     50 | Equivalence | 11 |         |    0 | 00/8000               | ALTCHARSET0FF   equ     $C00E          
  108 |  3        equ.s     51 | Equivalence | 11 |         |    0 | 00/8000               | ALTCHARSET0N    equ     $C00F          
  109 |  3        equ.s     52 | Equivalence | 11 |         |    0 | 00/8000               | kbd             equ     $C000          
  110 |  3        equ.s     53 | Equivalence | 11 |         |    0 | 00/8000               | kbdstrb         equ     $C010          
  111 |  3        equ.s     54 | Equivalence | 11 |         |    0 | 00/8000               | col80off        equ     $C00C          
  112 |  3        equ.s     55 | Equivalence | 11 |         |    0 | 00/8000               | col80on         equ     $C00D          
  113 |  3        equ.s     56 | Equivalence | 11 |         |    0 | 00/8000               | 80col           equ     $C01F          
  114 |  3        equ.s     57 | Comment     | 11 |         |    0 | 00/8000               | *
  115 |  3        equ.s     58 | Comment     | 11 |         |    0 | 00/8000               | * page 0
  116 |  3        equ.s     59 | Equivalence | 11 |         |    0 | 00/8000               | cv              equ     $25            
  117 |  3        equ.s     60 | Equivalence | 11 |         |    0 | 00/8000               | ch              equ     $24            
  118 |  3        equ.s     61 | Equivalence | 11 |         |    0 | 00/8000               | basl            equ     $28            
  119 |  3        equ.s     62 | Equivalence | 11 |         |    0 | 00/8000               | wndlft          equ     $20            
  120 |  3        equ.s     63 | Equivalence | 11 |         |    0 | 00/8000               | wndwdth         equ     $21            
  121 |  3        equ.s     64 | Equivalence | 11 |         |    0 | 00/8000               | wndtop          equ     $22            ; Top Margin (0 - 23, 0 is default, 20 in graphics mode)
  122 |  3        equ.s     65 | Equivalence | 11 |         |    0 | 00/8000               | wndbtm          equ     $23            
  123 |  3        equ.s     66 | Equivalence | 11 |         |    0 | 00/8000               | prompt          equ     $33            
  124 |  3        equ.s     67 | Comment     | 11 |         |    0 | 00/8000               | *
  125 |  3        equ.s     68 | Equivalence | 11 |         |    0 | 00/8000               | ourch           equ     $57B           ; Cursor's column position minus 1 (HTAB's place) in 80-column mode
  126 |  3        equ.s     69 | Equivalence | 11 |         |    0 | 00/8000               | ourcv           equ     $5FB           ; 80 col vertical pos
  127 |  3        equ.s     70 | Comment     | 11 |         |    0 | 00/8000               | *
  128 |  3        equ.s     71 | Comment     | 11 |         |    0 | 00/8000               | ****** FP routines ******
  129 |  3        equ.s     72 | Equivalence | 11 |         |    0 | 00/8000               | float           equ     $E2F2          ; Converts SIGNED integer in A/Y (high/lo) into FAC
  130 |  3        equ.s     73 | Equivalence | 11 |         |    0 | 00/8000               | PRNTFAC         equ     $ED2E          ; Prints number in FAC (in decimal format). FAC is destroyed
  131 |  3        equ.s     74 | Equivalence | 11 |         |    0 | 00/8000               | FIN             equ     $EC4A          ; FAC = expression pointee par TXTPTR
  132 |  3        equ.s     75 | Equivalence | 11 |         |    0 | 00/8000               | FNEG            equ     $EED0          ; FAC = - FAC
  133 |  3        equ.s     76 | Equivalence | 11 |         |    0 | 00/8000               | FABS            equ     $EBAF          ; FAC = ABS(FAC)
  134 |  3        equ.s     77 | Equivalence | 11 |         |    0 | 00/8000               | F2INT16         equ     $E752          ; FAC to 16 bits int in A/Y and $50/51 (low/high)
  135 |  3        equ.s     78 | Equivalence | 11 |         |    0 | 00/8000               | FADD            equ     $E7BE          ; FAC = FAC + ARG
  136 |  3        equ.s     79 | Equivalence | 11 |         |    0 | 00/8000               | FSUBT           equ     $E7AA          ; FAC = FAC - ARG
  137 |  3        equ.s     80 | Equivalence | 11 |         |    0 | 00/8000               | FMULT           equ     $E97F          ; Move the number pointed by Y,A into ARG and fall into FMULTT
  138 |  3        equ.s     81 | Equivalence | 11 |         |    0 | 00/8000               | FMULTT          equ     $E982          ; FAC = FAC x ARG
  139 |  3        equ.s     82 | Equivalence | 11 |         |    0 | 00/8000               | FDIVT           equ     $EA69          ; FAC = FAC / ARG
  140 |  3        equ.s     83 | Equivalence | 11 |         |    0 | 00/8000               | RND             equ     $EFAE          ; FAC = random number
  141 |  3        equ.s     84 | Equivalence | 11 |         |    0 | 00/8000               | FOUT            equ     $ED34          ; Create a string at the start of the stack ($100−$110)
  142 |  3        equ.s     85 | Equivalence | 11 |         |    0 | 00/8000               | MOVAF           equ     $EB63          ; Move FAC into ARG. On exit A=FACEXP and Z is set
  143 |  3        equ.s     86 | Equivalence | 11 |         |    0 | 00/8000               | CONINT          equ     $E6FB          ; Convert FAC into a single byte number in X and FACLO
  144 |  3        equ.s     87 | Equivalence | 11 |         |    0 | 00/8000               | YTOFAC          equ     $E301          ; Float y
  145 |  3        equ.s     88 | Equivalence | 11 |         |    0 | 00/8000               | MOVMF           equ     $EB2B          ; Routine to pack FP number. Address of destination must be in Y
  146 |  3        equ.s     89 | Comment     | 11 |         |    0 | 00/8000               |                         ; (high) and X (low). Result is packed from FAC
  147 |  3        equ.s     90 | Equivalence | 11 |         |    0 | 00/8000               | QUINT           equ     $EBF2          ; convert fac to 16bit INT at $A0 and $A1
  148 |  3        equ.s     91 | Equivalence | 11 |         |    0 | 00/8000               | STROUT          equ     $DB3A          ;
  149 |  3        equ.s     92 | Equivalence | 11 |         |    0 | 00/8000               | LINPRT          equ     $ED24          ; Converts the unsigned hexadecimal number in X (low) and A (high) into a decimal number and displays it.
  150 |  3        equ.s     93 | Comment     | 11 |         |    0 | 00/8000               | *
  151 |  3        equ.s     94 | Comment     | 11 |         |    0 | 00/8000               | *
  152 |  3        equ.s     95 | Comment     | 11 |         |    0 | 00/8000               | ***********************    my equ  ***********************
  153 |  3        equ.s     96 | Comment     | 11 |         |    0 | 00/8000               | *
  154 |  3        equ.s     97 | Equivalence | 11 |         |    0 | 00/8000               | bitmap1         equ     $2000          ; $2000 -> $5FFF (bitmap index 1) => aux mem.
  155 |  3        equ.s     98 | Equivalence | 11 |         |    0 | 00/8000               | bitmap2         equ     $4000          ; $6000 -> $9FFF (bitmap index 2) => aux mem.
  156 |  3        equ.s     99 | Empty       | 11 |         |    0 | 00/8000               |                                        
  157 |  3        equ.s    100 | Equivalence | 11 |         |    0 | 00/8000               | ptr1            equ     $06            ;
  158 |  3        equ.s    101 | Equivalence | 11 |         |    0 | 00/8000               | ptr2            equ     $08            
  159 |  3        equ.s    102 | Equivalence | 11 |         |    0 | 00/8000               | reclength       equ     $10            ; length of record in words file
  160 |  3        equ.s    103 | Equivalence | 11 |         |    0 | 00/8000               | pbline          equ     $03            ; # of text line for progressbar
  161 |  3        equ.s    104 | Equivalence | 11 |         |    0 | 00/8000               | pbchar          equ     #'-'           ; char for progressbar
  162 |  3        equ.s    105 | Equivalence | 11 |         |    0 | 00/8000               | pbora           equ     #$80           ; char bit 7 for progressbar
  163 |  3        equ.s    106 | Empty       | 11 |         |    0 | 00/8000               |                                        
  164 |  1         cw.s     52 | Directive   | 11 |         |    0 | 00/8000               |                 org     $1000          
  165 |  1         cw.s     53 | Empty       | 11 |         |    0 | 00/1000               |                                        
  166 |  1         cw.s     54 | Comment     | 11 |         |    0 | 00/1000               | *<sym>
  167 |  1         cw.s     55 | Empty       | 11 |         |    0 | 00/1000               | ozunid_1                               
  168 |  1         cw.s     55 | Equivalence | 11 |         |    0 | 00/1000               | start           equ     ozunid_1       
  169 |  1         cw.s     56 | Empty       | 11 |         |    0 | 00/1000               |                                        
  170 |  1         cw.s     57 | Code        | 11 |         |    3 | 00/1000 : 20 AA 14    |                 jsr     doprefix       ; get prefix, set it if undefined
  171 |  1         cw.s     58 | Code        | 11 |         |    1 | 00/1003 : D8          |                 cld                    
  172 |  1         cw.s     59 | Code        | 11 |         |    3 | 00/1004 : 20 00 C3    |                 jsr     $C300          ; 80 col. (http://www.deater.net/weave/vmwprod/demos/sizecoding.html)
  173 |  1         cw.s     60 | Comment     | 11 |         |    0 | 00/1007               | *<sym>
  174 |  1         cw.s     61 | Empty       | 11 |         |    0 | 00/1007               | init                                   
  175 |  1         cw.s     62 | Code        | 11 |         |    3 | 00/1007 : 20 2F FB    |                 jsr     {$FB2F}        ; init text mode, clear margins
  176 |  1         cw.s     63 | Code        | 11 |         |    3 | 00/100A : 20 58 FC    |                 jsr     {$FC58}        ; clear screen + cursor to upper left corner
  177 |  1         cw.s     64 | Macro       | 11 |         |    0 | 00/100D               |                 printc  titlelib       ; display title of program
  178 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/100D : 4C 11 10    |                 jmp     ozunid_4       
  179 |  1         cw.s     64 | Data        | 11 |         |    1 | 00/1010 : 00          | ozunid_3        hex     00             
  181 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/1011 : A2 00       |                 ldx     #$00           
  182 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/1013 : BD FB 19    | ozunid_7        lda     titlelib,x     
  183 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/1016 : F0 04       |                 beq     ozunid_8       
  184 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/1018 : E8          |                 inx                    
  185 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/1019 : 4C 13 10    |                 jmp     ozunid_7       
  186 |  1         cw.s     64 | Empty       | 11 |         |    0 | 00/101C               | ozunid_8                               
  187 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/101C : 8A          |                 txa                    
  188 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/101D : 4A          |                 lsr                    ; / 2
  189 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/101E : 8D 10 10    |                 sta     ozunid_3       
  191 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/1021 : AD 1F C0    |                 lda     {$C01F}        ; 40 col : Carry = 0
  192 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/1024 : 30 03       |                 bmi     ozunid_9       
  193 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/1026 : 18          |                 clc                    
  194 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/1027 : 90 01       |                 bcc     ozunid_10      ; = jmp
  195 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/1029 : 38          | ozunid_9        sec                    
  196 |  1         cw.s     64 | Empty       | 11 |         |    0 | 00/102A               | ozunid_10                              
  197 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/102A : A9 14       |                 lda     #$14           ; = half line
  198 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/102C : 90 02       |                 bcc     ozunid_5       
  199 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/102E : A9 28       |                 lda     #$28           
  200 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/1030 : 38          | ozunid_5        sec                    
  201 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/1031 : ED 10 10    |                 sbc     ozunid_3       
  202 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/1034 : AA          |                 tax                    
  203 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/1035 : A9 A0       |                 lda     #" "           ; fill with spaces
  204 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/1037 : 20 ED FD    | ozunid_6        jsr     {$FDED}        
  205 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/103A : CA          |                 dex                    
  206 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/103B : D0 FA       |                 bne     ozunid_6       
  208 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/103D : A2 00       |                 ldx     #$00           ; in argument
  209 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/103F : BD FB 19    | ozunid_11       lda     titlelib,X     
  210 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/1042 : F0 09       |                 beq     ozunid_12      
  211 |  1         cw.s     64 | Code        | 11 |         |    2 | 00/1044 : 09 80       |                 ora     #$80           
  212 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/1046 : 20 ED FD    |                 jsr     {$FDED}        
  213 |  1         cw.s     64 | Code        | 11 |         |    1 | 00/1049 : E8          |                 inx                    
  214 |  1         cw.s     64 | Code        | 11 |         |    3 | 00/104A : 4C 3F 10    |                 jmp     ozunid_11      
  215 |  1         cw.s     64 | Empty       | 11 |         |    0 | 00/104D               | ozunid_12                              
  216 |  1         cw.s     65 | Macro       | 11 |         |    0 | 00/104D               |                 cr                     ; print return (macro)
  217 |  1         cw.s     65 | Code        | 11 |         |    3 | 00/104D : 20 8E FD    |                 jsr     {$FD8E}        
  218 |  1         cw.s     66 | Code        | 11 |         |    2 | 00/1050 : A9 00       |                 lda     #$00           
  219 |  1         cw.s     67 | Code        | 11 |         |    3 | 00/1052 : 8D 94 BF    |                 sta     $BF94          
  220 |  1         cw.s     68 | Macro       | 11 |         |    0 | 00/1055               |                 closef  #$00           ; close all files
  221 |  1         cw.s     68 | Code        | 11 |         |    2 | 00/1055 : A9 00       |                 lda     #$00           
  222 |  1         cw.s     68 | Code        | 11 |         |    3 | 00/1057 : 8D 12 17    |                 sta     cc_parms+1     
  223 |  1         cw.s     68 | Code        | 11 |         |    3 | 00/105A : 20 00 BF    |                 jsr     {$BF00}        
  224 |  1         cw.s     68 | Data        | 11 |         |    1 | 00/105D : CC          |                 dfb     {$CC}          
  225 |  1         cw.s     68 | Data        | 11 |         |    2 | 00/105E : 11 17       |                 da      cc_parms       
  226 |  1         cw.s     69 | Macro       | 11 |         |    0 | 00/1060               |                 prnstr  path           ; display prefix
  227 |  1         cw.s     69 | Code        | 11 |         |    3 | 00/1060 : AC 40 18    |                 ldy     path           
  228 |  1         cw.s     69 | Code        | 11 |         |    2 | 00/1063 : F0 0E       |                 beq     ozunid_14      ; no char.
  229 |  1         cw.s     69 | Code        | 11 |         |    2 | 00/1065 : A2 00       |                 ldx     #$00           
  230 |  1         cw.s     69 | Code        | 11 |         |    3 | 00/1067 : BD 41 18    | ozunid_13       lda     path+1,X       
  231 |  1         cw.s     69 | Code        | 11 |         |    2 | 00/106A : 09 80       |                 ora     #$80           
  232 |  1         cw.s     69 | Code        | 11 |         |    3 | 00/106C : 20 ED FD    |                 jsr     {$FDED}        
  233 |  1         cw.s     69 | Code        | 11 |         |    1 | 00/106F : E8          |                 inx                    
  234 |  1         cw.s     69 | Code        | 11 |         |    1 | 00/1070 : 88          |                 dey                    
  235 |  1         cw.s     69 | Code        | 11 |         |    2 | 00/1071 : D0 F4       |                 bne     ozunid_13      
  236 |  1         cw.s     69 | Empty       | 11 |         |    0 | 00/1073               | ozunid_14                              
  237 |  1         cw.s     70 | Macro       | 11 |         |    0 | 00/1073               |                 cr                     
  238 |  1         cw.s     70 | Code        | 11 |         |    3 | 00/1073 : 20 8E FD    |                 jsr     {$FD8E}        
  239 |  1         cw.s     71 | Macro       | 11 |         |    0 | 00/1076               |                 prnstr  patternlib     ; print label
  240 |  1         cw.s     71 | Code        | 11 |         |    3 | 00/1076 : AC B8 19    |                 ldy     patternlib     
  241 |  1         cw.s     71 | Code        | 11 |         |    2 | 00/1079 : F0 0E       |                 beq     ozunid_16      ; no char.
  242 |  1         cw.s     71 | Code        | 11 |         |    2 | 00/107B : A2 00       |                 ldx     #$00           
  243 |  1         cw.s     71 | Code        | 11 |         |    3 | 00/107D : BD B9 19    | ozunid_15       lda     patternlib+1,X 
  244 |  1         cw.s     71 | Code        | 11 |         |    2 | 00/1080 : 09 80       |                 ora     #$80           
  245 |  1         cw.s     71 | Code        | 11 |         |    3 | 00/1082 : 20 ED FD    |                 jsr     {$FDED}        
  246 |  1         cw.s     71 | Code        | 11 |         |    1 | 00/1085 : E8          |                 inx                    
  247 |  1         cw.s     71 | Code        | 11 |         |    1 | 00/1086 : 88          |                 dey                    
  248 |  1         cw.s     71 | Code        | 11 |         |    2 | 00/1087 : D0 F4       |                 bne     ozunid_15      
  249 |  1         cw.s     71 | Empty       | 11 |         |    0 | 00/1089               | ozunid_16                              
  250 |  1         cw.s     72 | Code        | 11 |         |    3 | 00/1089 : 20 37 13    |                 jsr     mygetln        ; let user type pattern
  251 |  1         cw.s     73 | Code        | 11 |         |    3 | 00/108C : 20 BF 13    |                 jsr     testpat        ; test if letter(s) in pattern, set noletter var
  252 |  1         cw.s     74 | Code        | 11 |         |    3 | 00/108F : AD 7F 19    |                 lda     quitflag       ; if ctrl-c or escape then quitflag > 0
  253 |  1         cw.s     75 | Code        | 11 |         |    2 | 00/1092 : D0 23       |                 bne     exit2          ; yes : exit program
  254 |  1         cw.s     76 | Code        | 11 |         |    3 | 00/1094 : AD 65 1A    |                 lda     pattern        ; get pattern length
  255 |  1         cw.s     77 | Code        | 11 |         |    2 | 00/1097 : C9 02       |                 cmp     #$02           ; pattern length msut be >= 2
  256 |  1         cw.s     78 | Code        | 11 |         |    2 | 00/1099 : 10 1D       |                 bpl     okpat          ; pattern ok : process it
  257 |  1         cw.s     79 | Macro       | 11 |         |    0 | 00/109B               |                 cr                     ; print return (macro)
  258 |  1         cw.s     79 | Code        | 11 |         |    3 | 00/109B : 20 8E FD    |                 jsr     {$FD8E}        
  259 |  1         cw.s     80 | Macro       | 11 |         |    0 | 00/109E               |                 prnstr  kopatlib       ; wrong pattern, message and loop
  260 |  1         cw.s     80 | Code        | 11 |         |    3 | 00/109E : AC D9 19    |                 ldy     kopatlib       
  261 |  1         cw.s     80 | Code        | 11 |         |    2 | 00/10A1 : F0 0E       |                 beq     ozunid_18      ; no char.
  262 |  1         cw.s     80 | Code        | 11 |         |    2 | 00/10A3 : A2 00       |                 ldx     #$00           
  263 |  1         cw.s     80 | Code        | 11 |         |    3 | 00/10A5 : BD DA 19    | ozunid_17       lda     kopatlib+1,X   
  264 |  1         cw.s     80 | Code        | 11 |         |    2 | 00/10A8 : 09 80       |                 ora     #$80           
  265 |  1         cw.s     80 | Code        | 11 |         |    3 | 00/10AA : 20 ED FD    |                 jsr     {$FDED}        
  266 |  1         cw.s     80 | Code        | 11 |         |    1 | 00/10AD : E8          |                 inx                    
  267 |  1         cw.s     80 | Code        | 11 |         |    1 | 00/10AE : 88          |                 dey                    
  268 |  1         cw.s     80 | Code        | 11 |         |    2 | 00/10AF : D0 F4       |                 bne     ozunid_17      
  269 |  1         cw.s     80 | Empty       | 11 |         |    0 | 00/10B1               | ozunid_18                              
  270 |  1         cw.s     81 | Code        | 11 |         |    3 | 00/10B1 : 20 A1 14    |                 jsr     dowait         ; wait for a key pressed
  271 |  1         cw.s     82 | Code        | 11 |         |    3 | 00/10B4 : 4C 07 10    |                 jmp     init           ; goto beginning
  272 |  1         cw.s     83 | Empty       | 11 |         |    0 | 00/10B7               |                                        
  273 |  1         cw.s     84 | Comment     | 11 |         |    0 | 00/10B7               | *<sym>
  274 |  1         cw.s     85 | Code        | 11 |         |    1 | 00/10B7 : 60          | exit2           rts                    ; end of program
  275 |  1         cw.s     86 | Empty       | 11 |         |    0 | 00/10B8               |                                        
  276 |  1         cw.s     87 | Comment     | 11 |         |    0 | 00/10B8               | *<sym>
  277 |  1         cw.s     88 | Macro       | 11 |         |    0 | 00/10B8               | okpat           cr                     ; process pattern
  278 |  1         cw.s     88 | Code        | 11 |         |    3 | 00/10B8 : 20 8E FD    |                 jsr     {$FD8E}        
  279 |  1         cw.s     89 | Macro       | 11 |         |    0 | 00/10BB               |                 cr                     
  280 |  1         cw.s     89 | Code        | 11 |         |    3 | 00/10BB : 20 8E FD    |                 jsr     {$FD8E}        
  281 |  1         cw.s     90 | Comment     | 11 |         |    0 | 00/10BE               | ********************  init vars **********************
  282 |  1         cw.s     91 | Empty       | 11 |         |    0 | 00/10BE               |                                        
  283 |  1         cw.s     92 | Code        | 11 |         |    2 | 00/10BE : A9 00       |                 lda     #$00           ; init. total counter (sum of counters for 4 parts, 3 bytes integer)
  284 |  1         cw.s     93 | Code        | 11 |         |    3 | 00/10C0 : 8D 62 19    |                 sta     wordscnt       ; init. word counter to 0 (3 bytes integer)
  285 |  1         cw.s     94 | Code        | 11 |         |    3 | 00/10C3 : 8D 63 19    |                 sta     wordscnt+1     
  286 |  1         cw.s     95 | Code        | 11 |         |    3 | 00/10C6 : 8D 64 19    |                 sta     wordscnt+2     
  287 |  1         cw.s     96 | Code        | 11 |         |    3 | 00/10C9 : 8D 82 19    |                 sta     col            ; init. horiz. position of resulting words
  288 |  1         cw.s     97 | Code        | 11 |         |    3 | 00/10CC : 8D 83 19    |                 sta     pbpos          ; init. progressbar in position 0
  289 |  1         cw.s     98 | Code        | 11 |         |    3 | 00/10CF : 8D 84 19    |                 sta     displayed      ; 0 words displayed for now
  290 |  1         cw.s     99 | Empty       | 11 |         |    0 | 00/10D2               |                                        
  291 |  1         cw.s    100 | Code        | 11 |         |    2 | 00/10D2 : A9 04       |                 lda     #4             ; set top margin to 4
  292 |  1         cw.s    101 | Code        | 11 |         |    2 | 00/10D4 : 85 22       |                 sta     {$22}          
  293 |  1         cw.s    102 | Comment     | 11 |         |    0 | 00/10D6               |                         ; set progressbar division
  294 |  1         cw.s    103 | Comment     | 11 |         |    0 | 00/10D6               |                         ; divide #36 by word length
  295 |  1         cw.s    104 | Comment     | 11 |         |    0 | 00/10D6               |                         ; to set progressbar increment.
  296 |  1         cw.s    105 | Code        | 11 |         |    3 | 00/10D6 : AD 65 1A    |                 lda     pattern        ; get word length
  297 |  1         cw.s    106 | Code        | 11 |         |    3 | 00/10D9 : 8D 6A 19    |                 sta     draft          ; save it
  298 |  1         cw.s    107 | Code        | 11 |         |    2 | 00/10DC : A9 00       |                 lda     #$00           
  299 |  1         cw.s    108 | Code        | 11 |         |    3 | 00/10DE : 8D 6B 19    |                 sta     progdiv        ; init division = 0
  300 |  1         cw.s    109 | Code        | 11 |         |    2 | 00/10E1 : A9 24       |                 lda     #36            ; 36 chars for index processing (= 72 chars in 80 col.)
  301 |  1         cw.s    110 | Comment     | 11 |         |    0 | 00/10E3               | *<sym>
  302 |  1         cw.s    111 | Code        | 11 |         |    3 | 00/10E3 : EE 6B 19    | dosub           inc     progdiv        ; inc division
  303 |  1         cw.s    112 | Code        | 11 |         |    1 | 00/10E6 : 38          |                 sec                    
  304 |  1         cw.s    113 | Code        | 11 |         |    3 | 00/10E7 : ED 6A 19    |                 sbc     draft          
  305 |  1         cw.s    114 | Code        | 11 |         |    2 | 00/10EA : 10 F7       |                 bpl     dosub          
  306 |  1         cw.s    115 | Code        | 11 |         |    3 | 00/10EC : CE 6B 19    |                 dec     progdiv        ; adjut division
  307 |  1         cw.s    116 | Comment     | 11 |         |    0 | 00/10EF               | *
  308 |  1         cw.s    117 | Comment     | 11 |         |    0 | 00/10EF               | *
  309 |  1         cw.s    118 | Comment     | 11 |         |    0 | 00/10EF               | ************ main loop for searching words ************
  310 |  1         cw.s    119 | Comment     | 11 |         |    0 | 00/10EF               | *<sym>
  311 |  1         cw.s    120 | Empty       | 11 |         |    0 | 00/10EF               | main                                   
  312 |  1         cw.s    121 | Macro       | 11 |         |    0 | 00/10EF               |                 closef  #$00           ; close all files
  313 |  1         cw.s    121 | Code        | 11 |         |    2 | 00/10EF : A9 00       |                 lda     #$00           
  314 |  1         cw.s    121 | Code        | 11 |         |    3 | 00/10F1 : 8D 12 17    |                 sta     cc_parms+1     
  315 |  1         cw.s    121 | Code        | 11 |         |    3 | 00/10F4 : 20 00 BF    |                 jsr     {$BF00}        
  316 |  1         cw.s    121 | Data        | 11 |         |    1 | 00/10F7 : CC          |                 dfb     {$CC}          
  317 |  1         cw.s    121 | Data        | 11 |         |    2 | 00/10F8 : 11 17       |                 da      cc_parms       
  318 |  1         cw.s    122 | Code        | 11 |         |    3 | 00/10FA : 20 F8 BE    |                 jsr     {$BEF8}        ; free all buffers
  319 |  1         cw.s    123 | Code        | 11 |         |    3 | 00/10FD : 20 8B 11    |                 jsr     bigloop        ; main program loop : porcess all letters of pattern
  320 |  1         cw.s    124 | Code        | 11 |         |    3 | 00/1100 : 20 FD 14    |                 jsr     bigdisplay     ; prints found words
  321 |  1         cw.s    125 | Code        | 11 |         |    3 | 00/1103 : 20 53 11    |                 jsr     progressbarfin ; print last chars (-) of progressbar
  322 |  1         cw.s    126 | Code        | 11 |         |    3 | 00/1106 : 20 F1 11    |                 jsr     showres        ; show final result (count)
  323 |  1         cw.s    127 | Comment     | 11 |         |    0 | 00/1109               | *<sym>
  324 |  1         cw.s    128 | Code        | 11 |         |    3 | 00/1109 : 20 A1 14    | eop             jsr     dowait         ; wait for a pressed key
  325 |  1         cw.s    129 | Macro       | 11 |         |    0 | 00/110C               |                 closef  #$00           ; close all files
  326 |  1         cw.s    129 | Code        | 11 |         |    2 | 00/110C : A9 00       |                 lda     #$00           
  327 |  1         cw.s    129 | Code        | 11 |         |    3 | 00/110E : 8D 12 17    |                 sta     cc_parms+1     
  328 |  1         cw.s    129 | Code        | 11 |         |    3 | 00/1111 : 20 00 BF    |                 jsr     {$BF00}        
  329 |  1         cw.s    129 | Data        | 11 |         |    1 | 00/1114 : CC          |                 dfb     {$CC}          
  330 |  1         cw.s    129 | Data        | 11 |         |    2 | 00/1115 : 11 17       |                 da      cc_parms       
  331 |  1         cw.s    130 | Code        | 11 |         |    3 | 00/1117 : 20 F8 BE    |                 jsr     {$BEF8}        ; free all buffers
  332 |  1         cw.s    131 | Code        | 11 |         |    3 | 00/111A : 4C 07 10    |                 jmp     init           ; loop to the beginning
  333 |  1         cw.s    132 | Comment     | 11 |         |    0 | 00/111D               | *
  334 |  1         cw.s    133 | Comment     | 11 |         |    0 | 00/111D               | ******************** main program end ********************
  335 |  1         cw.s    134 | Comment     | 11 |         |    0 | 00/111D               | *
  336 |  1         cw.s    135 | Comment     | 11 |         |    0 | 00/111D               | *
  337 |  1         cw.s    136 | Empty       | 11 |         |    0 | 00/111D               |                                        
  338 |  1         cw.s    137 | Empty       | 11 |         |    0 | 00/111D               |                                        
  339 |  1         cw.s    138 | Comment     | 11 |         |    0 | 00/111D               | *<sym>
  340 |  1         cw.s    139 | Empty       | 11 |         |    0 | 00/111D               | progressbar                            ; display a progreeebar while procesing index
  341 |  1         cw.s    140 | Code        | 11 |         |    2 | 00/111D : A9 03       |                 lda     #{$03}         ; get line # for progressbar
  342 |  1         cw.s    141 | Code        | 11 |         |    3 | 00/111F : 20 C1 FB    |                 jsr     {$FBC1}        ; get base address
  343 |  1         cw.s    142 | Code        | 11 |         |    3 | 00/1122 : AD 83 19    |                 lda     pbpos          ; get last h position
  344 |  1         cw.s    143 | Code        | 11 |         |    1 | 00/1125 : 18          |                 clc                    ; add it to pointer
  345 |  1         cw.s    144 | Code        | 11 |         |    2 | 00/1126 : 65 28       |                 adc     {$28}          
  346 |  1         cw.s    145 | Code        | 11 |         |    2 | 00/1128 : 85 28       |                 sta     {$28}          
  347 |  1         cw.s    146 | Code        | 11 |         |    2 | 00/112A : A9 00       |                 lda     #$00           
  348 |  1         cw.s    147 | Code        | 11 |         |    2 | 00/112C : 65 29       |                 adc     {$28}+1        
  349 |  1         cw.s    148 | Code        | 11 |         |    2 | 00/112E : 85 29       |                 sta     {$28}+1        
  350 |  1         cw.s    149 | Code        | 11 |         |    2 | 00/1130 : A9 2D       |                 lda     {#'-'}         ; get char to display in progressbar
  351 |  1         cw.s    150 | Code        | 11 |         |    2 | 00/1132 : 09 80       |                 ora     {#$80}         ; ora parameter char
  352 |  1         cw.s    151 | Code        | 11 |         |    2 | 00/1134 : A0 00       |                 ldy     #$00           ; init loop counter
  353 |  1         cw.s    152 | Code        | 11 |         |    3 | 00/1136 : 8D 00 C0    |                 sta     $C000          ; 80store on
  354 |  1         cw.s    153 | Comment     | 11 |         |    0 | 00/1139               | *<sym>
  355 |  1         cw.s    154 | Empty       | 11 |         |    0 | 00/1139               | ploop                                  
  356 |  1         cw.s    155 | Code        | 11 |         |    3 | 00/1139 : 8D 05 C0    |                 sta     {$C005}        ; write char in aux
  357 |  1         cw.s    156 | Code        | 11 |         |    2 | 00/113C : 91 28       |                 sta     ({$28}),y      
  358 |  1         cw.s    157 | Code        | 11 |         |    3 | 00/113E : 8D 04 C0    |                 sta     {$C004}        
  359 |  1         cw.s    158 | Code        | 11 |         |    2 | 00/1141 : 91 28       |                 sta     ({$28}),y      ; write char in aux
  360 |  1         cw.s    159 | Empty       | 11 |         |    0 | 00/1143               |                                        
  361 |  1         cw.s    160 | Code        | 11 |         |    3 | 00/1143 : EE 83 19    |                 inc     pbpos          ; update h position
  362 |  1         cw.s    161 | Code        | 11 |         |    1 | 00/1146 : C8          |                 iny                    ; inc counter
  363 |  1         cw.s    162 | Code        | 11 |         |    3 | 00/1147 : CC 6B 19    |                 cpy     progdiv        ; test end of loop
  364 |  1         cw.s    163 | Code        | 11 |         |    2 | 00/114A : F0 03       |                 beq     pbexit         ; end : exit
  365 |  1         cw.s    164 | Code        | 11 |         |    3 | 00/114C : 4C 39 11    |                 jmp     ploop          ; go on
  366 |  1         cw.s    165 | Empty       | 11 |         |    0 | 00/114F               |                                        
  367 |  1         cw.s    166 | Comment     | 11 |         |    0 | 00/114F               | *<sym>
  368 |  1         cw.s    167 | Code        | 11 |         |    3 | 00/114F : 8D 01 C0    | pbexit          sta     $C001          ; 80store off
  369 |  1         cw.s    168 | Code        | 11 |         |    1 | 00/1152 : 60          |                 rts                    
  370 |  1         cw.s    169 | Empty       | 11 |         |    0 | 00/1153               |                                        
  371 |  1         cw.s    170 | Comment     | 11 |         |    0 | 00/1153               | *<sym>
  372 |  1         cw.s    171 | Empty       | 11 |         |    0 | 00/1153               | progressbarfin                         ; display last chars of progressbar while displaying found words
  373 |  1         cw.s    172 | Code        | 11 |         |    2 | 00/1153 : A9 03       |                 lda     #{$03}         ; get line # for progressbar
  374 |  1         cw.s    173 | Code        | 11 |         |    3 | 00/1155 : 20 C1 FB    |                 jsr     {$FBC1}        ; get base address
  375 |  1         cw.s    174 | Code        | 11 |         |    3 | 00/1158 : AD 83 19    |                 lda     pbpos          ; get last h position
  376 |  1         cw.s    175 | Code        | 11 |         |    1 | 00/115B : 18          |                 clc                    ; add it to pointer
  377 |  1         cw.s    176 | Code        | 11 |         |    2 | 00/115C : 65 28       |                 adc     {$28}          
  378 |  1         cw.s    177 | Code        | 11 |         |    2 | 00/115E : 85 28       |                 sta     {$28}          
  379 |  1         cw.s    178 | Code        | 11 |         |    2 | 00/1160 : A9 00       |                 lda     #$00           
  380 |  1         cw.s    179 | Code        | 11 |         |    2 | 00/1162 : 65 29       |                 adc     {$28}+1        
  381 |  1         cw.s    180 | Code        | 11 |         |    2 | 00/1164 : 85 29       |                 sta     {$28}+1        
  382 |  1         cw.s    181 | Code        | 11 |         |    2 | 00/1166 : A9 2D       |                 lda     {#'-'}         ; get char to display in progressbar
  383 |  1         cw.s    182 | Code        | 11 |         |    2 | 00/1168 : 09 80       |                 ora     {#$80}         ; ora parameter char
  384 |  1         cw.s    183 | Code        | 11 |         |    2 | 00/116A : A0 00       |                 ldy     #$00           ; init loop counter
  385 |  1         cw.s    184 | Code        | 11 |         |    3 | 00/116C : 8D 00 C0    |                 sta     $C000          ; 80store on
  386 |  1         cw.s    185 | Comment     | 11 |         |    0 | 00/116F               | *<sym>
  387 |  1         cw.s    186 | Empty       | 11 |         |    0 | 00/116F               | ploop2                                 
  388 |  1         cw.s    187 | Code        | 11 |         |    3 | 00/116F : 8D 05 C0    |                 sta     {$C005}        ; write char in aux
  389 |  1         cw.s    188 | Code        | 11 |         |    2 | 00/1172 : 91 28       |                 sta     ({$28}),y      
  390 |  1         cw.s    189 | Code        | 11 |         |    3 | 00/1174 : 8D 04 C0    |                 sta     {$C004}        
  391 |  1         cw.s    190 | Code        | 11 |         |    2 | 00/1177 : 91 28       |                 sta     ({$28}),y      ; write char in aux
  392 |  1         cw.s    191 | Code        | 11 |         |    1 | 00/1179 : C8          |                 iny                    
  393 |  1         cw.s    192 | Code        | 11 |         |    3 | 00/117A : EE 83 19    |                 inc     pbpos          ; update h position
  394 |  1         cw.s    193 | Code        | 11 |         |    3 | 00/117D : AE 83 19    |                 ldx     pbpos          
  395 |  1         cw.s    194 | Code        | 11 |         |    2 | 00/1180 : E0 28       |                 cpx     #40            
  396 |  1         cw.s    195 | Code        | 11 |         |    2 | 00/1182 : F0 03       |                 beq     pbexit2        ; end : exit
  397 |  1         cw.s    196 | Code        | 11 |         |    3 | 00/1184 : 4C 6F 11    |                 jmp     ploop2         ; go on
  398 |  1         cw.s    197 | Comment     | 11 |         |    0 | 00/1187               | *<sym>
  399 |  1         cw.s    198 | Code        | 11 |         |    3 | 00/1187 : 8D 01 C0    | pbexit2         sta     $C001          ; 80store off
  400 |  1         cw.s    199 | Code        | 11 |         |    1 | 00/118A : 60          |                 rts                    
  401 |  1         cw.s    200 | Empty       | 11 |         |    0 | 00/118B               |                                        
  402 |  1         cw.s    201 | Comment     | 11 |         |    0 | 00/118B               | *************************************
  403 |  1         cw.s    202 | Comment     | 11 |         |    0 | 00/118B               | * main program loop : porcess all letters of pattern
  404 |  1         cw.s    203 | Comment     | 11 |         |    0 | 00/118B               | *<sym>
  405 |  1         cw.s    204 | Code        | 11 |         |    2 | 00/118B : A9 01       | bigloop         lda     #$01           
  406 |  1         cw.s    205 | Code        | 11 |         |    3 | 00/118D : 8D 7D 19    |                 sta     pos            ; position in pattern = 1
  407 |  1         cw.s    206 | Code        | 11 |         |    1 | 00/1190 : 18          |                 clc                    
  408 |  1         cw.s    207 | Code        | 11 |         |    3 | 00/1191 : 20 D9 13    |                 jsr     fillmem        ; fill bitmap1 ($2000-$3FFF) with $ff
  409 |  1         cw.s    208 | Comment     | 11 |         |    0 | 00/1194               |                         ; fill bitmap2 ($4000-$5FFF) with $00
  410 |  1         cw.s    209 | Comment     | 11 |         |    0 | 00/1194               | *<sym>
  411 |  1         cw.s    210 | Empty       | 11 |         |    0 | 00/1194               | bigll                                  
  412 |  1         cw.s    211 | Code        | 11 |         |    3 | 00/1194 : AD D8 13    |                 lda     noletter       ; just "?" chars in pattern flag (no a-z A-Z)
  413 |  1         cw.s    212 | Code        | 11 |         |    2 | 00/1197 : D0 1B       |                 bne     dolong         ; yes : jump to length index process
  414 |  1         cw.s    213 | Comment     | 11 |         |    0 | 00/1199               |                         ; no : search (full process)
  415 |  1         cw.s    214 | Code        | 11 |         |    3 | 00/1199 : AE 7D 19    |                 ldx     pos            ; x =  position in pattern
  416 |  1         cw.s    215 | Code        | 11 |         |    1 | 00/119C : CA          |                 dex                    ; adjust (x must start from 0, pos start from 1)
  417 |  1         cw.s    216 | Code        | 11 |         |    3 | 00/119D : BD 66 1A    |                 lda     pattern+1,x    ; get char from pattern
  418 |  1         cw.s    217 | Code        | 11 |         |    2 | 00/11A0 : C9 41       |                 cmp     #'A'           ; char between A and  Z ?
  419 |  1         cw.s    218 | Code        | 11 |         |    2 | 00/11A2 : 90 1F       |                 bcc     bloopnext      ; no : next char in pattern
  420 |  1         cw.s    219 | Code        | 11 |         |    2 | 00/11A4 : C9 5B       |                 cmp     #'Z'+1         
  421 |  1         cw.s    220 | Code        | 11 |         |    2 | 00/11A6 : B0 1B       |                 bcs     bloopnext      
  422 |  1         cw.s    221 | Code        | 11 |         |    3 | 00/11A8 : 8D 7C 19    |                 sta     letter         ; yes : save char in letter var
  423 |  1         cw.s    222 | Empty       | 11 |         |    0 | 00/11AB               |                                        
  424 |  1         cw.s    223 | Code        | 11 |         |    3 | 00/11AB : 20 0C 14    |                 jsr     interpret      ; set index file name, based on letter and position
  425 |  1         cw.s    224 | Code        | 11 |         |    3 | 00/11AE : 20 46 12    |                 jsr     dofile         ; process index file : load index file in main,
  426 |  1         cw.s    225 | Comment     | 11 |         |    0 | 00/11B1               |                         ; AND bitmap1 area and bitmap2 area, result in bitmap1 area
  427 |  1         cw.s    226 | Code        | 11 |         |    3 | 00/11B1 : 4C C3 11    |                 jmp     bloopnext      
  428 |  1         cw.s    227 | Empty       | 11 |         |    0 | 00/11B4               |                                        
  429 |  1         cw.s    228 | Comment     | 11 |         |    0 | 00/11B4               | *<sym>
  430 |  1         cw.s    229 | Code        | 11 |         |    3 | 00/11B4 : 20 D3 11    | dolong          jsr     dowlen         ; set index file name for length
  431 |  1         cw.s    230 | Code        | 11 |         |    3 | 00/11B7 : 20 46 12    |                 jsr     dofile         ; process index file (just 1 file : "L")
  432 |  1         cw.s    231 | Code        | 11 |         |    2 | 00/11BA : A9 24       |                 lda     #36            ; 72 '-' to print
  433 |  1         cw.s    232 | Code        | 11 |         |    3 | 00/11BC : 8D 6B 19    |                 sta     progdiv        
  434 |  1         cw.s    233 | Code        | 11 |         |    3 | 00/11BF : 20 1D 11    |                 jsr     progressbar    ; go print
  435 |  1         cw.s    234 | Code        | 11 |         |    1 | 00/11C2 : 60          |                 rts                    
  436 |  1         cw.s    235 | Empty       | 11 |         |    0 | 00/11C3               |                                        
  437 |  1         cw.s    236 | Comment     | 11 |         |    0 | 00/11C3               | *<sym>
  438 |  1         cw.s    237 | Empty       | 11 |         |    0 | 00/11C3               | bloopnext                              
  439 |  1         cw.s    238 | Code        | 11 |         |    3 | 00/11C3 : 20 1D 11    |                 jsr     progressbar    
  440 |  1         cw.s    239 | Code        | 11 |         |    3 | 00/11C6 : EE 7D 19    |                 inc     pos            ; next char in pattern
  441 |  1         cw.s    240 | Code        | 11 |         |    3 | 00/11C9 : AE 7D 19    |                 ldx     pos            
  442 |  1         cw.s    241 | Code        | 11 |         |    1 | 00/11CC : CA          |                 dex                    
  443 |  1         cw.s    242 | Code        | 11 |         |    3 | 00/11CD : EC 65 1A    |                 cpx     pattern        ; end of pattern (1st char = length)
  444 |  1         cw.s    243 | Code        | 11 |         |    2 | 00/11D0 : D0 C2       |                 bne     bigll          ; no : loop
  445 |  1         cw.s    244 | Code        | 11 |         |    1 | 00/11D2 : 60          |                 rts                    
  446 |  1         cw.s    245 | Comment     | 11 |         |    0 | 00/11D3               | * end bigloop
  447 |  1         cw.s    246 | Comment     | 11 |         |    0 | 00/11D3               | *
  448 |  1         cw.s    247 | Comment     | 11 |         |    0 | 00/11D3               | *<sym>
  449 |  1         cw.s    248 | Empty       | 11 |         |    0 | 00/11D3               | dowlen                                 ; Add criterion of word length by loading L index file
  450 |  1         cw.s    249 | Comment     | 11 |         |    0 | 00/11D3               |                         ; Prepare file name 'Lx\L' where x is length of pattern (= length of words to find)
  451 |  1         cw.s    250 | Code        | 11 |         |    2 | 00/11D3 : A9 04       |                 lda     #$4            
  452 |  1         cw.s    251 | Code        | 11 |         |    3 | 00/11D5 : 8D 19 17    |                 sta     fname          ; file name is 6 char long
  453 |  1         cw.s    252 | Code        | 11 |         |    2 | 00/11D8 : A9 4C       |                 lda     #'L'           ; L folder
  454 |  1         cw.s    253 | Code        | 11 |         |    3 | 00/11DA : 8D 1A 17    |                 sta     fname+1        
  455 |  1         cw.s    254 | Code        | 11 |         |    3 | 00/11DD : AE 65 1A    |                 ldx     pattern        ; get pattern length
  456 |  1         cw.s    255 | Code        | 11 |         |    3 | 00/11E0 : BD 6C 19    |                 lda     tohex,x        ; to hex
  457 |  1         cw.s    256 | Code        | 11 |         |    3 | 00/11E3 : 8D 1B 17    |                 sta     fname+2        
  458 |  1         cw.s    257 | Code        | 11 |         |    2 | 00/11E6 : A9 2F       |                 lda     #'/'           
  459 |  1         cw.s    258 | Code        | 11 |         |    3 | 00/11E8 : 8D 1C 17    |                 sta     fname+3        
  460 |  1         cw.s    259 | Code        | 11 |         |    2 | 00/11EB : A9 4C       |                 lda     #'L'           ; L is first char of filename
  461 |  1         cw.s    260 | Code        | 11 |         |    3 | 00/11ED : 8D 1D 17    |                 sta     fname+4        
  462 |  1         cw.s    261 | Code        | 11 |         |    1 | 00/11F0 : 60          |                 rts                    
  463 |  1         cw.s    262 | Comment     | 11 |         |    0 | 00/11F1               | *
  464 |  1         cw.s    263 | Comment     | 11 |         |    0 | 00/11F1               | * show result of count
  465 |  1         cw.s    264 | Comment     | 11 |         |    0 | 00/11F1               | *<sym>
  466 |  1         cw.s    265 | Empty       | 11 |         |    0 | 00/11F1               | showres                                
  467 |  1         cw.s    266 | Code        | 11 |         |    3 | 00/11F1 : AD FB 05    |                 lda     {$5FB}         
  468 |  1         cw.s    267 | Code        | 11 |         |    1 | 00/11F4 : 18          |                 clc                    
  469 |  1         cw.s    268 | Code        | 11 |         |    2 | 00/11F5 : 69 01       |                 adc     #$01           
  470 |  1         cw.s    269 | Code        | 11 |         |    2 | 00/11F7 : 85 25       |                 sta     {$25}          
  471 |  1         cw.s    270 | Code        | 11 |         |    3 | 00/11F9 : 8D FB 05    |                 sta     {$5FB}         
  472 |  1         cw.s    271 | Code        | 11 |         |    3 | 00/11FC : 20 22 FC    |                 jsr     {$FC22}        
  473 |  1         cw.s    272 | Code        | 11 |         |    2 | 00/11FF : A9 00       |                 lda     #$00           
  474 |  1         cw.s    273 | Code        | 11 |         |    2 | 00/1201 : 85 24       |                 sta     {$24}          
  475 |  1         cw.s    274 | Code        | 11 |         |    3 | 00/1203 : 8D 7B 05    |                 sta     {$57B}         
  476 |  1         cw.s    275 | Empty       | 11 |         |    0 | 00/1206               |                                        
  477 |  1         cw.s    276 | Macro       | 11 |         |    0 | 00/1206               |                 prnstr  patlib         ; recall pattern
  478 |  1         cw.s    276 | Code        | 11 |         |    3 | 00/1206 : AC EC 19    |                 ldy     patlib         
  479 |  1         cw.s    276 | Code        | 11 |         |    2 | 00/1209 : F0 0E       |                 beq     ozunid_20      ; no char.
  480 |  1         cw.s    276 | Code        | 11 |         |    2 | 00/120B : A2 00       |                 ldx     #$00           
  481 |  1         cw.s    276 | Code        | 11 |         |    3 | 00/120D : BD ED 19    | ozunid_19       lda     patlib+1,X     
  482 |  1         cw.s    276 | Code        | 11 |         |    2 | 00/1210 : 09 80       |                 ora     #$80           
  483 |  1         cw.s    276 | Code        | 11 |         |    3 | 00/1212 : 20 ED FD    |                 jsr     {$FDED}        
  484 |  1         cw.s    276 | Code        | 11 |         |    1 | 00/1215 : E8          |                 inx                    
  485 |  1         cw.s    276 | Code        | 11 |         |    1 | 00/1216 : 88          |                 dey                    
  486 |  1         cw.s    276 | Code        | 11 |         |    2 | 00/1217 : D0 F4       |                 bne     ozunid_19      
  487 |  1         cw.s    276 | Empty       | 11 |         |    0 | 00/1219               | ozunid_20                              
  488 |  1         cw.s    277 | Macro       | 11 |         |    0 | 00/1219               |                 prnstr  pattern        
  489 |  1         cw.s    277 | Code        | 11 |         |    3 | 00/1219 : AC 65 1A    |                 ldy     pattern        
  490 |  1         cw.s    277 | Code        | 11 |         |    2 | 00/121C : F0 0E       |                 beq     ozunid_22      ; no char.
  491 |  1         cw.s    277 | Code        | 11 |         |    2 | 00/121E : A2 00       |                 ldx     #$00           
  492 |  1         cw.s    277 | Code        | 11 |         |    3 | 00/1220 : BD 66 1A    | ozunid_21       lda     pattern+1,X    
  493 |  1         cw.s    277 | Code        | 11 |         |    2 | 00/1223 : 09 80       |                 ora     #$80           
  494 |  1         cw.s    277 | Code        | 11 |         |    3 | 00/1225 : 20 ED FD    |                 jsr     {$FDED}        
  495 |  1         cw.s    277 | Code        | 11 |         |    1 | 00/1228 : E8          |                 inx                    
  496 |  1         cw.s    277 | Code        | 11 |         |    1 | 00/1229 : 88          |                 dey                    
  497 |  1         cw.s    277 | Code        | 11 |         |    2 | 00/122A : D0 F4       |                 bne     ozunid_21      
  498 |  1         cw.s    277 | Empty       | 11 |         |    0 | 00/122C               | ozunid_22                              
  499 |  1         cw.s    278 | Macro       | 11 |         |    0 | 00/122C               |                 cr                     
  500 |  1         cw.s    278 | Code        | 11 |         |    3 | 00/122C : 20 8E FD    |                 jsr     {$FD8E}        
  501 |  1         cw.s    279 | Macro       | 11 |         |    0 | 00/122F               |                 prnstr  totallib       ; print lib
  502 |  1         cw.s    279 | Code        | 11 |         |    3 | 00/122F : AC A9 19    |                 ldy     totallib       
  503 |  1         cw.s    279 | Code        | 11 |         |    2 | 00/1232 : F0 0E       |                 beq     ozunid_24      ; no char.
  504 |  1         cw.s    279 | Code        | 11 |         |    2 | 00/1234 : A2 00       |                 ldx     #$00           
  505 |  1         cw.s    279 | Code        | 11 |         |    3 | 00/1236 : BD AA 19    | ozunid_23       lda     totallib+1,X   
  506 |  1         cw.s    279 | Code        | 11 |         |    2 | 00/1239 : 09 80       |                 ora     #$80           
  507 |  1         cw.s    279 | Code        | 11 |         |    3 | 00/123B : 20 ED FD    |                 jsr     {$FDED}        
  508 |  1         cw.s    279 | Code        | 11 |         |    1 | 00/123E : E8          |                 inx                    
  509 |  1         cw.s    279 | Code        | 11 |         |    1 | 00/123F : 88          |                 dey                    
  510 |  1         cw.s    279 | Code        | 11 |         |    2 | 00/1240 : D0 F4       |                 bne     ozunid_23      
  511 |  1         cw.s    279 | Empty       | 11 |         |    0 | 00/1242               | ozunid_24                              
  512 |  1         cw.s    280 | Code        | 11 |         |    3 | 00/1242 : 20 34 14    |                 jsr     print24bits    ; print number of found words
  513 |  1         cw.s    281 | Code        | 11 |         |    1 | 00/1245 : 60          |                 rts                    ;
  514 |  1         cw.s    282 | Comment     | 11 |         |    0 | 00/1246               | *
  515 |  1         cw.s    283 | Comment     | 11 |         |    0 | 00/1246               | *<sym>
  516 |  1         cw.s    284 | Empty       | 11 |         |    0 | 00/1246               | dofile                                 
  517 |  1         cw.s    285 | Comment     | 11 |         |    0 | 00/1246               | * process an index file : 
  518 |  1         cw.s    286 | Comment     | 11 |         |    0 | 00/1246               | * - load it in bitmap2 area
  519 |  1         cw.s    287 | Comment     | 11 |         |    0 | 00/1246               | * - AND bitmap1 and bitmap2 memory areas
  520 |  1         cw.s    288 | Comment     | 11 |         |    0 | 00/1246               | *
  521 |  1         cw.s    289 | Comment     | 11 |         |    0 | 00/1246               | * open index file
  522 |  1         cw.s    290 | Code        | 11 |         |    3 | 00/1246 : 20 A0 12    |                 jsr     setopenbuffer  ; set buffer address
  523 |  1         cw.s    291 | Code        | 11 |         |    3 | 00/1249 : 20 00 BF    |                 jsr     {$BF00}        ; OPEN file
  524 |  1         cw.s    292 | Data        | 11 |         |    1 | 00/124C : C8          |                 dfb     {$C8}          
  525 |  1         cw.s    293 | Data        | 11 |         |    2 | 00/124D : 13 17       |                 da      c8_parms       
  526 |  1         cw.s    294 | Code        | 11 |         |    2 | 00/124F : 90 1A       |                 bcc     ok1            ; no error : go on
  527 |  1         cw.s    295 | Comment     | 11 |         |    0 | 00/1251               |         ; else if index file is not found, it means there is no word matching pattern.
  528 |  1         cw.s    296 | Comment     | 11 |         |    0 | 00/1251               |         ; so fill bitmap1 with 0
  529 |  1         cw.s    297 | Code        | 11 |         |    2 | 00/1251 : A9 00       |                 lda     #<{$2000}      
  530 |  1         cw.s    298 | Code        | 11 |         |    2 | 00/1253 : 85 06       |                 sta     {$06}          
  531 |  1         cw.s    299 | Code        | 11 |         |    2 | 00/1255 : A9 20       |                 lda     #>{$2000}      
  532 |  1         cw.s    300 | Code        | 11 |         |    2 | 00/1257 : 85 07       |                 sta     {$06}+1        
  533 |  1         cw.s    301 | Comment     | 11 |         |    0 | 00/1259               | *<sym>
  534 |  1         cw.s    302 | Empty       | 11 |         |    0 | 00/1259               | clearbmp1                              
  535 |  1         cw.s    303 | Code        | 11 |         |    2 | 00/1259 : A9 00       |                 lda     #0             
  536 |  1         cw.s    304 | Code        | 11 |         |    2 | 00/125B : A0 00       |                 ldy     #0             
  537 |  1         cw.s    305 | Empty       | 11 |         |    0 | 00/125D               | _1                                     
  538 |  1         cw.s    306 | Code        | 11 |         |    2 | 00/125D : 91 06       |                 sta     ({$06}),y      ; clear bitmap1
  539 |  1         cw.s    307 | Code        | 11 |         |    1 | 00/125F : C8          |                 iny                    
  540 |  1         cw.s    308 | Code        | 11 |         |    2 | 00/1260 : D0 FB       |                 bne     _1             
  541 |  1         cw.s    309 | Code        | 11 |         |    2 | 00/1262 : E6 07       |                 inc     {$06}+1        
  542 |  1         cw.s    310 | Code        | 11 |         |    2 | 00/1264 : A5 07       |                 lda     {$06}+1        
  543 |  1         cw.s    311 | Code        | 11 |         |    2 | 00/1266 : C9 40       |                 cmp     #>{$4000}      
  544 |  1         cw.s    312 | Code        | 11 |         |    2 | 00/1268 : D0 EF       |                 bne     clearbmp1      
  545 |  1         cw.s    313 | Code        | 11 |         |    1 | 00/126A : 60          |                 rts                    ; and return
  546 |  1         cw.s    314 | Empty       | 11 |         |    0 | 00/126B               |                                        
  547 |  1         cw.s    315 | Empty       | 11 |         |    0 | 00/126B               |                                        
  548 |  1         cw.s    316 | Comment     | 11 |         |    0 | 00/126B               | *<sym>
  549 |  1         cw.s    317 | Empty       | 11 |         |    0 | 00/126B               | ok1                                    
  550 |  1         cw.s    318 | Comment     | 11 |         |    0 | 00/126B               | * get eof (to get file size)
  551 |  1         cw.s    319 | Code        | 11 |         |    3 | 00/126B : AD 18 17    |                 lda     ref            
  552 |  1         cw.s    320 | Code        | 11 |         |    3 | 00/126E : 8D 53 19    |                 sta     refd1          
  553 |  1         cw.s    321 | Code        | 11 |         |    3 | 00/1271 : 20 00 BF    |                 jsr     {$BF00}        ; get file length (set file length for next read MLI call)
  554 |  1         cw.s    322 | Data        | 11 |         |    1 | 00/1274 : D1          |                 dfb     {$d1}          
  555 |  1         cw.s    323 | Data        | 11 |         |    2 | 00/1275 : 52 19       |                 da      d1_param       
  556 |  1         cw.s    324 | Code        | 11 |         |    2 | 00/1277 : 90 03       |                 bcc     eofok          
  557 |  1         cw.s    325 | Code        | 11 |         |    3 | 00/1279 : 4C 84 14    |                 jmp     ko             
  558 |  1         cw.s    326 | Comment     | 11 |         |    0 | 00/127C               | *<sym>
  559 |  1         cw.s    327 | Empty       | 11 |         |    0 | 00/127C               | eofok                                  
  560 |  1         cw.s    328 | Comment     | 11 |         |    0 | 00/127C               | * read index file
  561 |  1         cw.s    329 | Code        | 11 |         |    3 | 00/127C : 20 1A 13    |                 jsr     readindex      ; prepare loading of index file (set ID, req. length, etc.)
  562 |  1         cw.s    330 | Code        | 11 |         |    3 | 00/127F : 20 00 BF    |                 jsr     {$BF00}        ; load file in main memory
  563 |  1         cw.s    331 | Data        | 11 |         |    1 | 00/1282 : CA          |                 dfb     {$CA}          
  564 |  1         cw.s    332 | Data        | 11 |         |    2 | 00/1283 : 2E 17       |                 da      ca_parms       ; load file at bitmap2 address
  565 |  1         cw.s    333 | Code        | 11 |         |    2 | 00/1285 : 90 03       |                 bcc     okread         
  566 |  1         cw.s    334 | Code        | 11 |         |    3 | 00/1287 : 4C 84 14    |                 jmp     ko             
  567 |  1         cw.s    335 | Comment     | 11 |         |    0 | 00/128A               | *<sym>
  568 |  1         cw.s    336 | Empty       | 11 |         |    0 | 00/128A               | okread                                 
  569 |  1         cw.s    337 | Code        | 11 |         |    3 | 00/128A : AD 18 17    |                 lda     ref            ; close index file
  570 |  1         cw.s    338 | Code        | 11 |         |    3 | 00/128D : 8D 12 17    |                 sta     cc_parms+1     
  571 |  1         cw.s    339 | Code        | 11 |         |    3 | 00/1290 : 20 00 BF    |                 jsr     {$BF00}        
  572 |  1         cw.s    340 | Data        | 11 |         |    1 | 00/1293 : CC          |                 dfb     {$CC}          
  573 |  1         cw.s    341 | Data        | 11 |         |    2 | 00/1294 : 11 17       |                 da      cc_parms       
  574 |  1         cw.s    342 | Code        | 11 |         |    2 | 00/1296 : 90 03       |                 bcc     okclose        
  575 |  1         cw.s    343 | Code        | 11 |         |    3 | 00/1298 : 4C 84 14    |                 jmp     ko             
  576 |  1         cw.s    344 | Comment     | 11 |         |    0 | 00/129B               | *<sym>
  577 |  1         cw.s    345 | Empty       | 11 |         |    0 | 00/129B               | okclose                                ;
  578 |  1         cw.s    346 | Code        | 11 |         |    1 | 00/129B : 38          |                 sec                    
  579 |  1         cw.s    347 | Comment     | 11 |         |    0 | 00/129C               | *<bp>
  580 |  1         cw.s    348 | Code        | 11 |         |    3 | 00/129C : 20 F4 12    |                 jsr     doand2         ; AND $2000 and $4000 areas
  581 |  1         cw.s    349 | Code        | 11 |         |    1 | 00/129F : 60          |                 rts                    
  582 |  1         cw.s    350 | Comment     | 11 |         |    0 | 00/12A0               | * end of dofile
  583 |  1         cw.s    351 | Empty       | 11 |         |    0 | 00/12A0               |                                        
  584 |  1         cw.s    352 | Comment     | 11 |         |    0 | 00/12A0               | *<sym>
  585 |  1         cw.s    353 | Empty       | 11 |         |    0 | 00/12A0               | setopenbuffer                          ; set buffer to $8400 for OPEN mli call
  586 |  1         cw.s    354 | Code        | 11 |         |    2 | 00/12A0 : A9 00       |                 lda     #$00           
  587 |  1         cw.s    355 | Code        | 11 |         |    3 | 00/12A2 : 8D 16 17    |                 sta     fbuff          
  588 |  1         cw.s    356 | Code        | 11 |         |    2 | 00/12A5 : A9 84       |                 lda     #$84           
  589 |  1         cw.s    357 | Code        | 11 |         |    3 | 00/12A7 : 8D 17 17    |                 sta     fbuff+1        
  590 |  1         cw.s    358 | Code        | 11 |         |    1 | 00/12AA : 60          |                 rts                    
  591 |  1         cw.s    359 | Empty       | 11 |         |    0 | 00/12AB               |                                        
  592 |  1         cw.s    360 | Comment     | 11 |         |    0 | 00/12AB               | * count bit set to 1 in index
  593 |  1         cw.s    361 | Comment     | 11 |         |    0 | 00/12AB               | *<sym>
  594 |  1         cw.s    362 | Empty       | 11 |         |    0 | 00/12AB               | countbit                               
  595 |  1         cw.s    363 | Code        | 11 |         |    2 | 00/12AB : A9 20       |                 lda     #>{$2000}      ; set pointer to $2000 area
  596 |  1         cw.s    364 | Code        | 11 |         |    2 | 00/12AD : 85 07       |                 sta     {$06}+1        
  597 |  1         cw.s    365 | Code        | 11 |         |    2 | 00/12AF : A9 00       |                 lda     #<{$2000}      
  598 |  1         cw.s    366 | Code        | 11 |         |    2 | 00/12B1 : 85 06       |                 sta     {$06}          
  599 |  1         cw.s    367 | Empty       | 11 |         |    0 | 00/12B3               |                                        
  600 |  1         cw.s    368 | Code        | 11 |         |    2 | 00/12B3 : A9 00       |                 lda     #$00           ; init counter
  601 |  1         cw.s    369 | Code        | 11 |         |    3 | 00/12B5 : 8D 5F 19    |                 sta     counter        
  602 |  1         cw.s    370 | Code        | 11 |         |    3 | 00/12B8 : 8D 60 19    |                 sta     counter+1      
  603 |  1         cw.s    371 | Code        | 11 |         |    3 | 00/12BB : 8D 61 19    |                 sta     counter+2      
  604 |  1         cw.s    372 | Comment     | 11 |         |    0 | 00/12BE               | *<sym>
  605 |  1         cw.s    373 | Empty       | 11 |         |    0 | 00/12BE               | loopcount                              
  606 |  1         cw.s    374 | Code        | 11 |         |    2 | 00/12BE : A0 00       |                 ldy     #$00           
  607 |  1         cw.s    375 | Code        | 11 |         |    2 | 00/12C0 : B1 06       |                 lda     ({$06}),y      ; get byte to read
  608 |  1         cw.s    376 | Code        | 11 |         |    2 | 00/12C2 : F0 23       |                 beq     updateptr      ; byte = $00 : loop
  609 |  1         cw.s    377 | Code        | 11 |         |    2 | 00/12C4 : A2 08       |                 ldx     #$08           ; 8 bits to check
  610 |  1         cw.s    378 | Comment     | 11 |         |    0 | 00/12C6               | *<sym>
  611 |  1         cw.s    379 | Code        | 11 |         |    1 | 00/12C6 : 4A          | shift           lsr                    
  612 |  1         cw.s    380 | Code        | 11 |         |    2 | 00/12C7 : 90 01       |                 bcc     nocarry        
  613 |  1         cw.s    381 | Code        | 11 |         |    1 | 00/12C9 : C8          |                 iny                    ; y counts bits set to 1
  614 |  1         cw.s    382 | Comment     | 11 |         |    0 | 00/12CA               | *<sym>
  615 |  1         cw.s    383 | Code        | 11 |         |    1 | 00/12CA : CA          | nocarry         dex                    
  616 |  1         cw.s    384 | Code        | 11 |         |    2 | 00/12CB : D0 F9       |                 bne     shift          ; loop 8 times
  617 |  1         cw.s    385 | Empty       | 11 |         |    0 | 00/12CD               |                                        
  618 |  1         cw.s    386 | Code        | 11 |         |    1 | 00/12CD : 98          |                 tya                    ; number of bits in A
  619 |  1         cw.s    387 | Code        | 11 |         |    2 | 00/12CE : F0 17       |                 beq     updateptr      ; no bits to count
  620 |  1         cw.s    388 | Code        | 11 |         |    1 | 00/12D0 : 18          |                 clc                    ; add bits to result (counter)
  621 |  1         cw.s    389 | Code        | 11 |         |    3 | 00/12D1 : 6D 5F 19    |                 adc     counter        
  622 |  1         cw.s    390 | Code        | 11 |         |    3 | 00/12D4 : 8D 5F 19    |                 sta     counter        
  623 |  1         cw.s    391 | Code        | 11 |         |    2 | 00/12D7 : A9 00       |                 lda     #$00           
  624 |  1         cw.s    392 | Code        | 11 |         |    3 | 00/12D9 : 6D 60 19    |                 adc     counter+1      
  625 |  1         cw.s    393 | Code        | 11 |         |    3 | 00/12DC : 8D 60 19    |                 sta     counter+1      
  626 |  1         cw.s    394 | Code        | 11 |         |    2 | 00/12DF : A9 00       |                 lda     #$00           
  627 |  1         cw.s    395 | Code        | 11 |         |    3 | 00/12E1 : 6D 61 19    |                 adc     counter+2      
  628 |  1         cw.s    396 | Code        | 11 |         |    3 | 00/12E4 : 8D 61 19    |                 sta     counter+2      
  629 |  1         cw.s    397 | Comment     | 11 |         |    0 | 00/12E7               | *<sym>     
  630 |  1         cw.s    398 | Empty       | 11 |         |    0 | 00/12E7               | updateptr                              
  631 |  1         cw.s    399 | Code        | 11 |         |    2 | 00/12E7 : E6 06       |                 inc     {$06}          ; next byte to read
  632 |  1         cw.s    400 | Code        | 11 |         |    2 | 00/12E9 : D0 02       |                 bne     noincp1        
  633 |  1         cw.s    401 | Code        | 11 |         |    2 | 00/12EB : E6 07       |                 inc     {$06}+1        
  634 |  1         cw.s    402 | Comment     | 11 |         |    0 | 00/12ED               | *<sym>
  635 |  1         cw.s    403 | Empty       | 11 |         |    0 | 00/12ED               | noincp1                                
  636 |  1         cw.s    404 | Code        | 11 |         |    2 | 00/12ED : A5 07       |                 lda     {$06}+1        
  637 |  1         cw.s    405 | Code        | 11 |         |    2 | 00/12EF : C9 40       |                 cmp     #$20+#$20      
  638 |  1         cw.s    406 | Code        | 11 |         |    2 | 00/12F1 : D0 CB       |                 bne     loopcount      
  639 |  1         cw.s    407 | Code        | 11 |         |    1 | 00/12F3 : 60          |                 rts                    
  640 |  1         cw.s    408 | Empty       | 11 |         |    0 | 00/12F4               |                                        
  641 |  1         cw.s    409 | Comment     | 11 |         |    0 | 00/12F4               | ******************* AND *******************
  642 |  1         cw.s    410 | Comment     | 11 |         |    0 | 00/12F4               | *<sym>
  643 |  1         cw.s    411 | Empty       | 11 |         |    0 | 00/12F4               | doand2                                 ; AND bitmap1 and bitmap2 memory areas
  644 |  1         cw.s    412 | Code        | 11 |         |    2 | 00/12F4 : A9 00       |                 lda     #<{$2000}      ; set bitamp1 address in ptr1
  645 |  1         cw.s    413 | Code        | 11 |         |    2 | 00/12F6 : 85 06       |                 sta     {$06}          
  646 |  1         cw.s    414 | Code        | 11 |         |    2 | 00/12F8 : A9 20       |                 lda     #>{$2000}      
  647 |  1         cw.s    415 | Code        | 11 |         |    2 | 00/12FA : 85 07       |                 sta     {$06}+1        
  648 |  1         cw.s    416 | Code        | 11 |         |    2 | 00/12FC : A9 00       |                 lda     #<{$4000}      ; set bitamp2 address in ptr2
  649 |  1         cw.s    417 | Code        | 11 |         |    2 | 00/12FE : 85 08       |                 sta     {$08}          
  650 |  1         cw.s    418 | Code        | 11 |         |    2 | 00/1300 : A9 40       |                 lda     #>{$4000}      
  651 |  1         cw.s    419 | Code        | 11 |         |    2 | 00/1302 : 85 09       |                 sta     {$08}+1        
  652 |  1         cw.s    420 | Code        | 11 |         |    2 | 00/1304 : A0 00       |                 ldy     #$00           
  653 |  1         cw.s    421 | Comment     | 11 |         |    0 | 00/1306               | *<sym>
  654 |  1         cw.s    422 | Empty       | 11 |         |    0 | 00/1306               | andloop2                               
  655 |  1         cw.s    423 | Code        | 11 |         |    2 | 00/1306 : B1 06       |                 lda     ({$06}),y      ; get byte from 1st area (bitmap1)
  656 |  1         cw.s    424 | Code        | 11 |         |    2 | 00/1308 : 31 08       |                 and     ({$08}),y      ; and bye from 2nd area (bitmap2)
  657 |  1         cw.s    425 | Code        | 11 |         |    2 | 00/130A : 91 06       |                 sta     ({$06}),y      ; save result in 1st area (bitmap1)
  658 |  1         cw.s    426 | Empty       | 11 |         |    0 | 00/130C               |                                        
  659 |  1         cw.s    427 | Code        | 11 |         |    1 | 00/130C : C8          |                 iny                    
  660 |  1         cw.s    428 | Code        | 11 |         |    2 | 00/130D : D0 F7       |                 bne     andloop2       
  661 |  1         cw.s    429 | Empty       | 11 |         |    0 | 00/130F               |                                        
  662 |  1         cw.s    430 | Code        | 11 |         |    2 | 00/130F : E6 07       |                 inc     {$06}+1        
  663 |  1         cw.s    431 | Code        | 11 |         |    2 | 00/1311 : E6 09       |                 inc     {$08}+1        
  664 |  1         cw.s    432 | Empty       | 11 |         |    0 | 00/1313               |                                        
  665 |  1         cw.s    433 | Code        | 11 |         |    2 | 00/1313 : A6 07       |                 ldx     {$06}+1        
  666 |  1         cw.s    434 | Code        | 11 |         |    2 | 00/1315 : E0 40       |                 cpx     #>{$4000}      ; ptr1 reached bitmap2
  667 |  1         cw.s    435 | Code        | 11 |         |    2 | 00/1317 : D0 ED       |                 bne     andloop2       
  668 |  1         cw.s    436 | Code        | 11 |         |    1 | 00/1319 : 60          |                 rts                    
  669 |  1         cw.s    437 | Empty       | 11 |         |    0 | 00/131A               |                                        
  670 |  1         cw.s    438 | Comment     | 11 |         |    0 | 00/131A               | * NB : all "area" is ANDed ($2000 byte long). it is more 
  671 |  1         cw.s    439 | Comment     | 11 |         |    0 | 00/131A               | * than actual index size (wich is obtained by get_eof in bigloop)
  672 |  1         cw.s    440 | Comment     | 11 |         |    0 | 00/131A               | * TODO : test if a partial AND is faster
  673 |  1         cw.s    441 | Empty       | 11 |         |    0 | 00/131A               |                                        
  674 |  1         cw.s    442 | Comment     | 11 |         |    0 | 00/131A               | ************** readindex **************
  675 |  1         cw.s    443 | Comment     | 11 |         |    0 | 00/131A               | * Prepare loading of index file 
  676 |  1         cw.s    444 | Comment     | 11 |         |    0 | 00/131A               | *<sym>
  677 |  1         cw.s    445 | Empty       | 11 |         |    0 | 00/131A               | readindex                              ; read index file
  678 |  1         cw.s    446 | Code        | 11 |         |    3 | 00/131A : AD 18 17    |                 lda     ref            ; get file ref id
  679 |  1         cw.s    447 | Code        | 11 |         |    3 | 00/131D : 8D 2F 17    |                 sta     refread        ; set ref id for read mli call
  680 |  1         cw.s    448 | Empty       | 11 |         |    0 | 00/1320               |                                        
  681 |  1         cw.s    449 | Code        | 11 |         |    2 | 00/1320 : A9 00       |                 lda     #<{$4000}      ; set buffer address
  682 |  1         cw.s    450 | Code        | 11 |         |    3 | 00/1322 : 8D 30 17    |                 sta     rdbuffa        
  683 |  1         cw.s    451 | Code        | 11 |         |    2 | 00/1325 : A9 40       |                 lda     #>{$4000}      
  684 |  1         cw.s    452 | Code        | 11 |         |    3 | 00/1327 : 8D 31 17    |                 sta     rdbuffa+1      
  685 |  1         cw.s    453 | Empty       | 11 |         |    0 | 00/132A               |                                        
  686 |  1         cw.s    454 | Code        | 11 |         |    3 | 00/132A : AD 54 19    |                 lda     filelength     ; set requested length (= length obtained by get_eof)
  687 |  1         cw.s    455 | Code        | 11 |         |    3 | 00/132D : 8D 32 17    |                 sta     rreq           
  688 |  1         cw.s    456 | Code        | 11 |         |    3 | 00/1330 : AD 55 19    |                 lda     filelength+1   
  689 |  1         cw.s    457 | Code        | 11 |         |    3 | 00/1333 : 8D 33 17    |                 sta     rreq+1         
  690 |  1         cw.s    458 | Code        | 11 |         |    1 | 00/1336 : 60          |                 rts                    
  691 |  1         cw.s    459 | Comment     | 11 |         |    0 | 00/1337               | *
  692 |  1         cw.s    460 | Comment     | 11 |         |    0 | 00/1337               | ************** Read user input of a pattern **************
  693 |  1         cw.s    461 | Comment     | 11 |         |    0 | 00/1337               | *<sym>
  694 |  1         cw.s    462 | Empty       | 11 |         |    0 | 00/1337               | mygetln                                ; to let user input pattern
  695 |  1         cw.s    463 | Comment     | 11 |         |    0 | 00/1337               |                         ; takes upper and lower case letters and ? (? = any letter)
  696 |  1         cw.s    464 | Comment     | 11 |         |    0 | 00/1337               |                         ; ctrl-c or escape : exit
  697 |  1         cw.s    465 | Comment     | 11 |         |    0 | 00/1337               |                         ; return : commit
  698 |  1         cw.s    466 | Comment     | 11 |         |    0 | 00/1337               |                         ; delete : delete last char
  699 |  1         cw.s    467 | Code        | 11 |         |    2 | 00/1337 : A9 00       |                 lda     #$00           
  700 |  1         cw.s    468 | Code        | 11 |         |    3 | 00/1339 : 8D 65 1A    |                 sta     pattern        ; pattern length = 0
  701 |  1         cw.s    469 | Code        | 11 |         |    3 | 00/133C : 8D 7F 19    |                 sta     quitflag       
  702 |  1         cw.s    470 | Empty       | 11 |         |    0 | 00/133F               |                                        
  703 |  1         cw.s    471 | Comment     | 11 |         |    0 | 00/133F               | *<sym>
  704 |  1         cw.s    472 | Empty       | 11 |         |    0 | 00/133F               | readkeyboard                           
  705 |  1         cw.s    473 | Code        | 11 |         |    3 | 00/133F : AD 00 C0    |                 lda     {$C000}        ; key keystroke
  706 |  1         cw.s    474 | Code        | 11 |         |    2 | 00/1342 : 10 FB       |                 bpl     readkeyboard   
  707 |  1         cw.s    475 | Code        | 11 |         |    2 | 00/1344 : C9 83       |                 cmp     #$83           ; control-C ?
  708 |  1         cw.s    476 | Code        | 11 |         |    2 | 00/1346 : D0 06       |                 bne     glnsuite       
  709 |  1         cw.s    477 | Comment     | 11 |         |    0 | 00/1348               | *<sym>
  710 |  1         cw.s    478 | Code        | 11 |         |    3 | 00/1348 : EE 7F 19    | quif            inc     quitflag       ; yes : set quit flag to quit program
  711 |  1         cw.s    479 | Code        | 11 |         |    3 | 00/134B : 4C BB 13    |                 jmp     finpat         
  712 |  1         cw.s    480 | Comment     | 11 |         |    0 | 00/134E               | *<sym>
  713 |  1         cw.s    481 | Empty       | 11 |         |    0 | 00/134E               | glnsuite                               
  714 |  1         cw.s    482 | Code        | 11 |         |    2 | 00/134E : C9 9B       |                 cmp     #$9b           ; escape ?
  715 |  1         cw.s    483 | Code        | 11 |         |    2 | 00/1350 : F0 F6       |                 beq     quif           
  716 |  1         cw.s    484 | Code        | 11 |         |    2 | 00/1352 : C9 8D       |                 cmp     #$8D           ; return ?
  717 |  1         cw.s    485 | Code        | 11 |         |    2 | 00/1354 : F0 65       |                 beq     finpat         ; yes : rts
  718 |  1         cw.s    486 | Code        | 11 |         |    2 | 00/1356 : C9 FF       |                 cmp     #$ff           ; delete ?
  719 |  1         cw.s    487 | Code        | 11 |         |    2 | 00/1358 : F0 3F       |                 beq     delete         
  720 |  1         cw.s    488 | Code        | 11 |         |    2 | 00/135A : C9 88       |                 cmp     #$88           ; also delete
  721 |  1         cw.s    489 | Code        | 11 |         |    2 | 00/135C : F0 3B       |                 beq     delete         
  722 |  1         cw.s    490 | Code        | 11 |         |    2 | 00/135E : 29 7F       |                 and     #$7F           ; clear bit 7 for comparisons
  723 |  1         cw.s    491 | Code        | 11 |         |    2 | 00/1360 : C9 3F       |                 cmp     #'?'           ; ? is ok :  represents any char
  724 |  1         cw.s    492 | Code        | 11 |         |    2 | 00/1362 : F0 12       |                 beq     okchar         
  725 |  1         cw.s    493 | Code        | 11 |         |    2 | 00/1364 : C9 41       |                 cmp     #'A'           ; char between A and  Z are ok
  726 |  1         cw.s    494 | Code        | 11 |         |    2 | 00/1366 : 90 D7       |                 bcc     readkeyboard   ; < A : loop
  727 |  1         cw.s    495 | Code        | 11 |         |    2 | 00/1368 : C9 5B       |                 cmp     #'Z'+1         
  728 |  1         cw.s    496 | Code        | 11 |         |    2 | 00/136A : 90 0A       |                 bcc     okchar         ; < Z+1, so char is between A and Z
  729 |  1         cw.s    497 | Comment     | 11 |         |    0 | 00/136C               |         ; here if char > Z
  730 |  1         cw.s    498 | Code        | 11 |         |    2 | 00/136C : C9 61       |                 cmp     #'a'           ; test for lowercase
  731 |  1         cw.s    499 | Code        | 11 |         |    2 | 00/136E : 90 CF       |                 bcc     readkeyboard   ; < a
  732 |  1         cw.s    500 | Code        | 11 |         |    2 | 00/1370 : C9 7B       |                 cmp     #'z'+1         
  733 |  1         cw.s    501 | Code        | 11 |         |    2 | 00/1372 : B0 CB       |                 bcs     readkeyboard   ; > z
  734 |  1         cw.s    502 | Code        | 11 |         |    2 | 00/1374 : 29 DF       |                 and     #%11011111     
  735 |  1         cw.s    503 | Empty       | 11 |         |    0 | 00/1376               |                                        
  736 |  1         cw.s    504 | Comment     | 11 |         |    0 | 00/1376               | *<sym> 
  737 |  1         cw.s    505 | Empty       | 11 |         |    0 | 00/1376               | okchar                                 
  738 |  1         cw.s    506 | Code        | 11 |         |    3 | 00/1376 : AC 65 1A    |                 ldy     pattern        ; pattern must not exceed 15 chars
  739 |  1         cw.s    507 | Code        | 11 |         |    2 | 00/1379 : C0 0F       |                 cpy     #$0f           
  740 |  1         cw.s    508 | Code        | 11 |         |    2 | 00/137B : F0 C2       |                 beq     readkeyboard   
  741 |  1         cw.s    509 | Code        | 11 |         |    1 | 00/137D : 48          |                 pha                    ; save char
  742 |  1         cw.s    510 | Code        | 11 |         |    2 | 00/137E : 09 80       |                 ora     #$80           ; print it
  743 |  1         cw.s    511 | Code        | 11 |         |    3 | 00/1380 : 20 ED FD    |                 jsr     {$FDED}        
  744 |  1         cw.s    512 | Code        | 11 |         |    3 | 00/1383 : AD 7B 05    |                 lda     {$57B}         ; get horizontal position
  745 |  1         cw.s    513 | Code        | 11 |         |    3 | 00/1386 : 8D 7E 19    |                 sta     savech         ; save it
  746 |  1         cw.s    514 | Code        | 11 |         |    3 | 00/1389 : EE 65 1A    |                 inc     pattern        ; pattern length ++
  747 |  1         cw.s    515 | Code        | 11 |         |    1 | 00/138C : 68          |                 pla                    ; restore char
  748 |  1         cw.s    516 | Code        | 11 |         |    3 | 00/138D : AE 65 1A    |                 ldx     pattern        ; poke if in pattern string
  749 |  1         cw.s    517 | Code        | 11 |         |    3 | 00/1390 : 9D 65 1A    |                 sta     pattern,x      
  750 |  1         cw.s    518 | Code        | 11 |         |    3 | 00/1393 : 2C 10 C0    |                 bit     {$C010}        ; clear kbd
  751 |  1         cw.s    519 | Code        | 11 |         |    3 | 00/1396 : 4C 3F 13    |                 jmp     readkeyboard   ; next char
  752 |  1         cw.s    520 | Comment     | 11 |         |    0 | 00/1399               | ; delete key
  753 |  1         cw.s    521 | Comment     | 11 |         |    0 | 00/1399               | *<sym>
  754 |  1         cw.s    522 | Code        | 11 |         |    3 | 00/1399 : AD 65 1A    | delete          lda     pattern        ; get pattern length
  755 |  1         cw.s    523 | Code        | 11 |         |    2 | 00/139C : F0 A1       |                 beq     readkeyboard   ; if 0 just loop
  756 |  1         cw.s    524 | Code        | 11 |         |    3 | 00/139E : CE 65 1A    |                 dec     pattern        ; pattern lenth --
  757 |  1         cw.s    525 | Code        | 11 |         |    3 | 00/13A1 : AD 7E 19    |                 lda     savech         ; savech --
  758 |  1         cw.s    526 | Code        | 11 |         |    1 | 00/13A4 : 3A          |                 dec                    
  759 |  1         cw.s    527 | Code        | 11 |         |    3 | 00/13A5 : 8D 7B 05    |                 sta     {$57B}         ; update h position
  760 |  1         cw.s    528 | Code        | 11 |         |    3 | 00/13A8 : 8D 7E 19    |                 sta     savech         ; save it
  761 |  1         cw.s    529 | Code        | 11 |         |    2 | 00/13AB : A9 20       |                 lda     #' '           ; print space (to erase previous char)
  762 |  1         cw.s    530 | Code        | 11 |         |    2 | 00/13AD : 09 80       |                 ora     #$80           
  763 |  1         cw.s    531 | Code        | 11 |         |    3 | 00/13AF : 20 ED FD    |                 jsr     {$FDED}        
  764 |  1         cw.s    532 | Code        | 11 |         |    3 | 00/13B2 : CE 7B 05    |                 dec     {$57B}         ; update ourch, so next char will be space was printed
  765 |  1         cw.s    533 | Code        | 11 |         |    3 | 00/13B5 : 2C 10 C0    |                 bit     {$C010}        ; and loop
  766 |  1         cw.s    534 | Code        | 11 |         |    3 | 00/13B8 : 4C 3F 13    |                 jmp     readkeyboard   
  767 |  1         cw.s    535 | Empty       | 11 |         |    0 | 00/13BB               |                                        
  768 |  1         cw.s    536 | Comment     | 11 |         |    0 | 00/13BB               | *<sym>
  769 |  1         cw.s    537 | Code        | 11 |         |    3 | 00/13BB : 2C 10 C0    | finpat          bit     {$C010}        
  770 |  1         cw.s    538 | Code        | 11 |         |    1 | 00/13BE : 60          |                 rts                    
  771 |  1         cw.s    539 | Comment     | 11 |         |    0 | 00/13BF               | **** end of mygetln 
  772 |  1         cw.s    540 | Empty       | 11 |         |    0 | 00/13BF               |                                        
  773 |  1         cw.s    541 | Comment     | 11 |         |    0 | 00/13BF               | *<sym>
  774 |  1         cw.s    542 | Empty       | 11 |         |    0 | 00/13BF               | testpat                                ; test if pattern only contains '?'
  775 |  1         cw.s    543 | Code        | 11 |         |    3 | 00/13BF : AE 65 1A    |                 ldx     pattern        
  776 |  1         cw.s    544 | Comment     | 11 |         |    0 | 00/13C2               | *<sym>
  777 |  1         cw.s    545 | Code        | 11 |         |    3 | 00/13C2 : BD 65 1A    | looptp          lda     pattern,x      ; get a char from pattern
  778 |  1         cw.s    546 | Code        | 11 |         |    2 | 00/13C5 : C9 3F       |                 cmp     #'?'           
  779 |  1         cw.s    547 | Code        | 11 |         |    2 | 00/13C7 : D0 09       |                 bne     letterfound    ; a char is <> from '?'
  780 |  1         cw.s    548 | Code        | 11 |         |    1 | 00/13C9 : CA          |                 dex                    
  781 |  1         cw.s    549 | Code        | 11 |         |    2 | 00/13CA : D0 F6       |                 bne     looptp         
  782 |  1         cw.s    550 | Code        | 11 |         |    2 | 00/13CC : A9 01       |                 lda     #$01           
  783 |  1         cw.s    551 | Code        | 11 |         |    3 | 00/13CE : 8D D8 13    |                 sta     noletter       ; set flag
  784 |  1         cw.s    552 | Code        | 11 |         |    1 | 00/13D1 : 60          |                 rts                    ; all letters are '?'
  785 |  1         cw.s    553 | Empty       | 11 |         |    0 | 00/13D2               |                                        
  786 |  1         cw.s    554 | Comment     | 11 |         |    0 | 00/13D2               | *<sym>
  787 |  1         cw.s    555 | Empty       | 11 |         |    0 | 00/13D2               | letterfound                            ; set flag and exit
  788 |  1         cw.s    556 | Code        | 11 |         |    2 | 00/13D2 : A9 00       |                 lda     #$00           
  789 |  1         cw.s    557 | Code        | 11 |         |    3 | 00/13D4 : 8D D8 13    |                 sta     noletter       
  790 |  1         cw.s    558 | Code        | 11 |         |    1 | 00/13D7 : 60          |                 rts                    
  791 |  1         cw.s    559 | Empty       | 11 |         |    0 | 00/13D8               |                                        
  792 |  1         cw.s    560 | Comment     | 11 |         |    0 | 00/13D8               | *<m1>
  793 |  1         cw.s    561 | Comment     | 11 |         |    0 | 00/13D8               | *<sym>
  794 |  1         cw.s    562 | Data        | 11 |         |    1 | 00/13D8 : 00          | noletter        ds      1              
  795 |  1         cw.s    563 | Comment     | 11 |         |    0 | 00/13D9               | *
  796 |  1         cw.s    564 | Comment     | 11 |         |    0 | 00/13D9               | *<sym>
  797 |  1         cw.s    565 | Empty       | 11 |         |    0 | 00/13D9               | fillmem                                
  798 |  1         cw.s    566 | Comment     | 11 |         |    0 | 00/13D9               |         ; fill bitmap1 ($2000-$3FFF) with $ff
  799 |  1         cw.s    567 | Comment     | 11 |         |    0 | 00/13D9               |         ; fill bitmap2 ($4000-$5FFF) with $00
  800 |  1         cw.s    568 | Code        | 11 |         |    2 | 00/13D9 : A9 00       |                 lda     #<{$2000}      ; set bitamp1 address in ptr2 (destination)
  801 |  1         cw.s    569 | Code        | 11 |         |    2 | 00/13DB : 85 08       |                 sta     {$08}          
  802 |  1         cw.s    570 | Code        | 11 |         |    2 | 00/13DD : A9 20       |                 lda     #>{$2000}      
  803 |  1         cw.s    571 | Code        | 11 |         |    2 | 00/13DF : 85 09       |                 sta     {$08}+1        
  804 |  1         cw.s    572 | Empty       | 11 |         |    0 | 00/13E1               |                                        
  805 |  1         cw.s    573 | Code        | 11 |         |    2 | 00/13E1 : A9 FF       |                 lda     #$ff           
  806 |  1         cw.s    574 | Code        | 11 |         |    2 | 00/13E3 : A0 00       |                 ldy     #$00           
  807 |  1         cw.s    575 | Comment     | 11 |         |    0 | 00/13E5               | *<sym>
  808 |  1         cw.s    576 | Empty       | 11 |         |    0 | 00/13E5               | loopfm1                                
  809 |  1         cw.s    577 | Code        | 11 |         |    2 | 00/13E5 : 91 08       |                 sta     ({$08}),y      
  810 |  1         cw.s    578 | Code        | 11 |         |    1 | 00/13E7 : C8          |                 iny                    
  811 |  1         cw.s    579 | Code        | 11 |         |    2 | 00/13E8 : D0 FB       |                 bne     loopfm1        
  812 |  1         cw.s    580 | Code        | 11 |         |    2 | 00/13EA : E6 09       |                 inc     {$08}+1        
  813 |  1         cw.s    581 | Code        | 11 |         |    2 | 00/13EC : A6 09       |                 ldx     {$08}+1        
  814 |  1         cw.s    582 | Code        | 11 |         |    2 | 00/13EE : E0 40       |                 cpx     #$40           
  815 |  1         cw.s    583 | Code        | 11 |         |    2 | 00/13F0 : D0 F3       |                 bne     loopfm1        
  816 |  1         cw.s    584 | Empty       | 11 |         |    0 | 00/13F2               |                                        
  817 |  1         cw.s    585 | Code        | 11 |         |    2 | 00/13F2 : A9 00       |                 lda     #<{$4000}      ; set bitamp1 address in ptr2 (destination)
  818 |  1         cw.s    586 | Code        | 11 |         |    2 | 00/13F4 : 85 08       |                 sta     {$08}          
  819 |  1         cw.s    587 | Code        | 11 |         |    2 | 00/13F6 : A9 40       |                 lda     #>{$4000}      
  820 |  1         cw.s    588 | Code        | 11 |         |    2 | 00/13F8 : 85 09       |                 sta     {$08}+1        
  821 |  1         cw.s    589 | Empty       | 11 |         |    0 | 00/13FA               |                                        
  822 |  1         cw.s    590 | Code        | 11 |         |    2 | 00/13FA : A9 00       |                 lda     #$00           
  823 |  1         cw.s    591 | Code        | 11 |         |    2 | 00/13FC : A0 00       |                 ldy     #$00           
  824 |  1         cw.s    592 | Comment     | 11 |         |    0 | 00/13FE               | *<sym>
  825 |  1         cw.s    593 | Empty       | 11 |         |    0 | 00/13FE               | loopfm2                                
  826 |  1         cw.s    594 | Code        | 11 |         |    2 | 00/13FE : 91 08       |                 sta     ({$08}),y      
  827 |  1         cw.s    595 | Code        | 11 |         |    1 | 00/1400 : C8          |                 iny                    
  828 |  1         cw.s    596 | Code        | 11 |         |    2 | 00/1401 : D0 FB       |                 bne     loopfm2        
  829 |  1         cw.s    597 | Code        | 11 |         |    2 | 00/1403 : E6 09       |                 inc     {$08}+1        
  830 |  1         cw.s    598 | Code        | 11 |         |    2 | 00/1405 : A6 09       |                 ldx     {$08}+1        
  831 |  1         cw.s    599 | Code        | 11 |         |    2 | 00/1407 : E0 60       |                 cpx     #$60           
  832 |  1         cw.s    600 | Code        | 11 |         |    2 | 00/1409 : D0 F3       |                 bne     loopfm2        
  833 |  1         cw.s    601 | Code        | 11 |         |    1 | 00/140B : 60          |                 rts                    
  834 |  1         cw.s    602 | Comment     | 11 |         |    0 | 00/140C               | *<sym>
  835 |  1         cw.s    603 | Empty       | 11 |         |    0 | 00/140C               | interpret                              
  836 |  1         cw.s    604 | Comment     | 11 |         |    0 | 00/140C               | * according to a letter and its position in word
  837 |  1         cw.s    605 | Comment     | 11 |         |    0 | 00/140C               | * set the file name of the corresponding index
  838 |  1         cw.s    606 | Comment     | 11 |         |    0 | 00/140C               | * file name format : L<length of word in hex>/<letter><position of letter(in hex)
  839 |  1         cw.s    607 | Code        | 11 |         |    2 | 00/140C : A9 4C       |                 lda     #'L'           
  840 |  1         cw.s    608 | Code        | 11 |         |    3 | 00/140E : 8D 1A 17    |                 sta     fname+1        
  841 |  1         cw.s    609 | Code        | 11 |         |    3 | 00/1411 : AE 65 1A    |                 ldx     pattern        ; get length of pattern
  842 |  1         cw.s    610 | Code        | 11 |         |    3 | 00/1414 : BD 6C 19    |                 lda     tohex,x        ; transform in hex value
  843 |  1         cw.s    611 | Code        | 11 |         |    3 | 00/1417 : 8D 1B 17    |                 sta     fname+2        
  844 |  1         cw.s    612 | Code        | 11 |         |    2 | 00/141A : A9 2F       |                 lda     #'/'           
  845 |  1         cw.s    613 | Code        | 11 |         |    3 | 00/141C : 8D 1C 17    |                 sta     fname+3        
  846 |  1         cw.s    614 | Empty       | 11 |         |    0 | 00/141F               |                                        
  847 |  1         cw.s    615 | Code        | 11 |         |    3 | 00/141F : AD 7C 19    |                 lda     letter         ; get letter
  848 |  1         cw.s    616 | Code        | 11 |         |    3 | 00/1422 : 8D 1D 17    |                 sta     fname+4        ; => first letter of file name
  849 |  1         cw.s    617 | Code        | 11 |         |    3 | 00/1425 : AE 7D 19    |                 ldx     pos            ; get position of letter in mattern
  850 |  1         cw.s    618 | Code        | 11 |         |    3 | 00/1428 : BD 6C 19    |                 lda     tohex,x        ; transform in hex value
  851 |  1         cw.s    619 | Code        | 11 |         |    3 | 00/142B : 8D 1E 17    |                 sta     fname+5        
  852 |  1         cw.s    620 | Empty       | 11 |         |    0 | 00/142E               |                                        
  853 |  1         cw.s    621 | Code        | 11 |         |    2 | 00/142E : A9 05       |                 lda     #$05           ; set length of file name
  854 |  1         cw.s    622 | Code        | 11 |         |    3 | 00/1430 : 8D 19 17    |                 sta     fname          
  855 |  1         cw.s    623 | Code        | 11 |         |    1 | 00/1433 : 60          |                 rts                    
  856 |  1         cw.s    624 | Comment     | 11 |         |    0 | 00/1434               | *<sym>
  857 |  1         cw.s    625 | Empty       | 11 |         |    0 | 00/1434               | print24bits                            
  858 |  1         cw.s    626 | Comment     | 11 |         |    0 | 00/1434               | * prints to screen a 3 bytes integer in counter/counter+1/counter+2
  859 |  1         cw.s    627 | Comment     | 11 |         |    0 | 00/1434               | * counter+2 must be positive
  860 |  1         cw.s    628 | Empty       | 11 |         |    0 | 00/1434               |                                        
  861 |  1         cw.s    629 | Code        | 11 |         |    3 | 00/1434 : AD 61 19    |                 lda     counter+2      ; init fac with filelength+1/filelength+2
  862 |  1         cw.s    630 | Code        | 11 |         |    3 | 00/1437 : AC 60 19    |                 ldy     counter+1      
  863 |  1         cw.s    631 | Code        | 11 |         |    3 | 00/143A : 20 F2 E2    |                 jsr     {$E2F2}        ; convert integer to fac
  864 |  1         cw.s    632 | Code        | 11 |         |    3 | 00/143D : 20 4A 14    |                 jsr     mult256        ; * 256
  865 |  1         cw.s    633 | Code        | 11 |         |    3 | 00/1440 : AD 5F 19    |                 lda     counter        ; add filelength
  866 |  1         cw.s    634 | Code        | 11 |         |    3 | 00/1443 : 20 60 14    |                 jsr     dodadd         
  867 |  1         cw.s    635 | Code        | 11 |         |    3 | 00/1446 : 20 2E ED    |                 jsr     {$ED2E}        
  868 |  1         cw.s    636 | Code        | 11 |         |    1 | 00/1449 : 60          |                 rts                    
  869 |  1         cw.s    637 | Comment     | 11 |         |    0 | 00/144A               | *<sym>
  870 |  1         cw.s    638 | Empty       | 11 |         |    0 | 00/144A               | mult256                                
  871 |  1         cw.s    639 | Code        | 11 |         |    2 | 00/144A : A0 19       |                 ldy     #>myfac        
  872 |  1         cw.s    640 | Code        | 11 |         |    2 | 00/144C : A2 59       |                 ldx     #<myfac        
  873 |  1         cw.s    641 | Code        | 11 |         |    3 | 00/144E : 20 2B EB    |                 jsr     {$EB2B}        ; fac => memory (packed)
  874 |  1         cw.s    642 | Code        | 11 |         |    2 | 00/1451 : A9 01       |                 lda     #1             
  875 |  1         cw.s    643 | Code        | 11 |         |    2 | 00/1453 : A0 00       |                 ldy     #0             
  876 |  1         cw.s    644 | Code        | 11 |         |    3 | 00/1455 : 20 F2 E2    |                 jsr     {$E2F2}        ; fac = 256
  877 |  1         cw.s    645 | Code        | 11 |         |    2 | 00/1458 : A0 19       |                 ldy     #>myfac        
  878 |  1         cw.s    646 | Code        | 11 |         |    2 | 00/145A : A9 59       |                 lda     #<myfac        
  879 |  1         cw.s    647 | Code        | 11 |         |    3 | 00/145C : 20 7F E9    |                 jsr     {$E97F}        ; move number in memory (Y,A) to ARG and mult. result in fac
  880 |  1         cw.s    648 | Code        | 11 |         |    1 | 00/145F : 60          |                 rts                    
  881 |  1         cw.s    649 | Comment     | 11 |         |    0 | 00/1460               | *<sym>
  882 |  1         cw.s    650 | Empty       | 11 |         |    0 | 00/1460               | dodadd                                 
  883 |  1         cw.s    651 | Code        | 11 |         |    1 | 00/1460 : 48          |                 pha                    
  884 |  1         cw.s    652 | Code        | 11 |         |    2 | 00/1461 : A0 19       |                 ldy     #>myfac        
  885 |  1         cw.s    653 | Code        | 11 |         |    2 | 00/1463 : A2 59       |                 ldx     #<myfac        
  886 |  1         cw.s    654 | Code        | 11 |         |    3 | 00/1465 : 20 2B EB    |                 jsr     {$EB2B}        ; fac => memory (packed)
  887 |  1         cw.s    655 | Code        | 11 |         |    1 | 00/1468 : 7A          |                 ply                    
  888 |  1         cw.s    656 | Code        | 11 |         |    3 | 00/1469 : 20 01 E3    |                 jsr     {$E301}        
  889 |  1         cw.s    657 | Code        | 11 |         |    2 | 00/146C : A0 19       |                 ldy     #>myfac        
  890 |  1         cw.s    658 | Code        | 11 |         |    2 | 00/146E : A9 59       |                 lda     #<myfac        
  891 |  1         cw.s    659 | Code        | 11 |         |    3 | 00/1470 : 20 BE E7    |                 jsr     {$E7BE}        ; move number in memory (Y,A) to ARG and add. result in fac
  892 |  1         cw.s    660 | Code        | 11 |         |    1 | 00/1473 : 60          |                 rts                    
  893 |  1         cw.s    661 | Empty       | 11 |         |    0 | 00/1474               |                                        
  894 |  1         cw.s    662 | Comment     | 11 |         |    0 | 00/1474               | *<sym>
  895 |  1         cw.s    663 | Code        | 11 |         |    2 | 00/1474 : A2 00       | result          ldx     #$00           ; print data read in file (rdbuff = prameter of read mli call)
  896 |  1         cw.s    664 | Comment     | 11 |         |    0 | 00/1476               | *<sym>
  897 |  1         cw.s    665 | Code        | 11 |         |    3 | 00/1476 : BD 36 17    | rslt            lda     rdbuff,x       
  898 |  1         cw.s    666 | Code        | 11 |         |    2 | 00/1479 : F0 08       |                 beq     finres         ; exit if char = 0
  899 |  1         cw.s    667 | Comment     | 11 |         |    0 | 00/147B               |         ;ora #$80               ; inverse video 
  900 |  1         cw.s    668 | Code        | 11 |         |    3 | 00/147B : 20 ED FD    |                 jsr     {$FDED}        
  901 |  1         cw.s    669 | Code        | 11 |         |    1 | 00/147E : E8          |                 inx                    
  902 |  1         cw.s    670 | Code        | 11 |         |    2 | 00/147F : E0 10       |                 cpx     #{$10}         ; no more then record length
  903 |  1         cw.s    671 | Code        | 11 |         |    2 | 00/1481 : D0 F3       |                 bne     rslt           
  904 |  1         cw.s    672 | Comment     | 11 |         |    0 | 00/1483               | *<sym>
  905 |  1         cw.s    673 | Code        | 11 |         |    1 | 00/1483 : 60          | finres          rts                    
  906 |  1         cw.s    674 | Empty       | 11 |         |    0 | 00/1484               |                                        
  907 |  1         cw.s    675 | Comment     | 11 |         |    0 | 00/1484               | *********** Error processing ***********
  908 |  1         cw.s    676 | Comment     | 11 |         |    0 | 00/1484               | *<sym>
  909 |  1         cw.s    677 | Code        | 11 |         |    1 | 00/1484 : 48          | ko              pha                    ; save error code
  910 |  1         cw.s    678 | Macro       | 11 |         |    0 | 00/1485               |                 prnstr  kolib          ; print error message
  911 |  1         cw.s    678 | Code        | 11 |         |    3 | 00/1485 : AC 85 19    |                 ldy     kolib          
  912 |  1         cw.s    678 | Code        | 11 |         |    2 | 00/1488 : F0 0E       |                 beq     ozunid_26      ; no char.
  913 |  1         cw.s    678 | Code        | 11 |         |    2 | 00/148A : A2 00       |                 ldx     #$00           
  914 |  1         cw.s    678 | Code        | 11 |         |    3 | 00/148C : BD 86 19    | ozunid_25       lda     kolib+1,X      
  915 |  1         cw.s    678 | Code        | 11 |         |    2 | 00/148F : 09 80       |                 ora     #$80           
  916 |  1         cw.s    678 | Code        | 11 |         |    3 | 00/1491 : 20 ED FD    |                 jsr     {$FDED}        
  917 |  1         cw.s    678 | Code        | 11 |         |    1 | 00/1494 : E8          |                 inx                    
  918 |  1         cw.s    678 | Code        | 11 |         |    1 | 00/1495 : 88          |                 dey                    
  919 |  1         cw.s    678 | Code        | 11 |         |    2 | 00/1496 : D0 F4       |                 bne     ozunid_25      
  920 |  1         cw.s    678 | Empty       | 11 |         |    0 | 00/1498               | ozunid_26                              
  921 |  1         cw.s    679 | Code        | 11 |         |    1 | 00/1498 : 68          |                 pla                    ; restore error code
  922 |  1         cw.s    680 | Code        | 11 |         |    1 | 00/1499 : AA          |                 tax                    
  923 |  1         cw.s    681 | Code        | 11 |         |    3 | 00/149A : 20 44 F9    |                 jsr     {$F944}        ; print error code
  924 |  1         cw.s    682 | Macro       | 11 |         |    0 | 00/149D               |                 cr                     
  925 |  1         cw.s    682 | Code        | 11 |         |    3 | 00/149D : 20 8E FD    |                 jsr     {$FD8E}        
  926 |  1         cw.s    683 | Code        | 11 |         |    1 | 00/14A0 : 60          |                 rts                    
  927 |  1         cw.s    684 | Empty       | 11 |         |    0 | 00/14A1               |                                        
  928 |  1         cw.s    685 | Comment     | 11 |         |    0 | 00/14A1               | *********** Wait for a key ***********
  929 |  1         cw.s    686 | Comment     | 11 |         |    0 | 00/14A1               | *<sym>
  930 |  1         cw.s    687 | Empty       | 11 |         |    0 | 00/14A1               | dowait                                 
  931 |  1         cw.s    688 | Code        | 11 |         |    3 | 00/14A1 : AD 00 C0    |                 lda     {$C000}        
  932 |  1         cw.s    689 | Code        | 11 |         |    2 | 00/14A4 : 10 FB       |                 bpl     dowait         
  933 |  1         cw.s    690 | Code        | 11 |         |    3 | 00/14A6 : 2C 10 C0    |                 bit     {$C010}        
  934 |  1         cw.s    691 | Code        | 11 |         |    1 | 00/14A9 : 60          |                 rts                    
  935 |  1         cw.s    692 | Comment     | 11 |         |    0 | 00/14AA               | *
  936 |  1         cw.s    693 | Comment     | 11 |         |    0 | 00/14AA               | *********** PREFIX *************
  937 |  1         cw.s    694 | Comment     | 11 |         |    0 | 00/14AA               | * get current prefix
  938 |  1         cw.s    695 | Comment     | 11 |         |    0 | 00/14AA               | *<sym>
  939 |  1         cw.s    696 | Empty       | 11 |         |    0 | 00/14AA               | doprefix                               
  940 |  1         cw.s    697 | Code        | 11 |         |    3 | 00/14AA : 20 00 BF    |                 jsr     {$BF00}        ; getprefix, prefix ==> "path"
  941 |  1         cw.s    698 | Data        | 11 |         |    1 | 00/14AD : C7          |                 dfb     {$c7}          
  942 |  1         cw.s    699 | Data        | 11 |         |    2 | 00/14AE : 36 18       |                 da      c7_param       
  943 |  1         cw.s    700 | Code        | 11 |         |    2 | 00/14B0 : 90 03       |                 bcc     suitegp        
  944 |  1         cw.s    701 | Code        | 11 |         |    3 | 00/14B2 : 4C 84 14    |                 jmp     ko             
  945 |  1         cw.s    702 | Comment     | 11 |         |    0 | 00/14B5               | *<sym>
  946 |  1         cw.s    703 | Empty       | 11 |         |    0 | 00/14B5               | suitegp                                
  947 |  1         cw.s    704 | Code        | 11 |         |    3 | 00/14B5 : AD 40 18    |                 lda     path           ; 1st char = length
  948 |  1         cw.s    705 | Code        | 11 |         |    2 | 00/14B8 : F0 03       |                 beq     noprefix       ; if 0 => no prefix
  949 |  1         cw.s    706 | Code        | 11 |         |    3 | 00/14BA : 4C FC 14    |                 jmp     good1          ; else prefix already set, exit
  950 |  1         cw.s    707 | Comment     | 11 |         |    0 | 00/14BD               | *<sym>
  951 |  1         cw.s    708 | Empty       | 11 |         |    0 | 00/14BD               | noprefix                               
  952 |  1         cw.s    709 | Code        | 11 |         |    3 | 00/14BD : AD 30 BF    |                 lda     {$BF30}        ; last used slot/drive
  953 |  1         cw.s    710 | Code        | 11 |         |    3 | 00/14C0 : 8D 3D 18    |                 sta     unit           ; param du mli online
  954 |  1         cw.s    711 | Comment     | 11 |         |    0 | 00/14C3               | *<sym>
  955 |  1         cw.s    712 | Code        | 11 |         |    3 | 00/14C3 : 20 00 BF    | men             jsr     {$BF00}        
  956 |  1         cw.s    713 | Data        | 11 |         |    1 | 00/14C6 : C5          |                 dfb     {$C5}          ; on_line : get prefix in path
  957 |  1         cw.s    714 | Data        | 11 |         |    2 | 00/14C7 : 3C 18       |                 da      c5_param       
  958 |  1         cw.s    715 | Code        | 11 |         |    2 | 00/14C9 : 90 03       |                 bcc     suite          
  959 |  1         cw.s    716 | Code        | 11 |         |    3 | 00/14CB : 4C 84 14    |                 jmp     ko             
  960 |  1         cw.s    717 | Comment     | 11 |         |    0 | 00/14CE               | *<sym>
  961 |  1         cw.s    718 | Code        | 11 |         |    3 | 00/14CE : AD 40 18    | suite           lda     path           
  962 |  1         cw.s    719 | Code        | 11 |         |    2 | 00/14D1 : 29 0F       |                 and     #$0f           ; length in low nibble
  963 |  1         cw.s    720 | Code        | 11 |         |    3 | 00/14D3 : 8D 40 18    |                 sta     path           
  964 |  1         cw.s    721 | Code        | 11 |         |    1 | 00/14D6 : AA          |                 tax                    
  965 |  1         cw.s    722 | Comment     | 11 |         |    0 | 00/14D7               | *<sym>
  966 |  1         cw.s    723 | Code        | 11 |         |    3 | 00/14D7 : BD 40 18    | l1              lda     path,x         
  967 |  1         cw.s    724 | Code        | 11 |         |    3 | 00/14DA : 9D 41 18    |                 sta     path+1,x       ; offset 1 byte
  968 |  1         cw.s    725 | Code        | 11 |         |    1 | 00/14DD : CA          |                 dex                    
  969 |  1         cw.s    726 | Code        | 11 |         |    2 | 00/14DE : D0 F7       |                 bne     l1             
  970 |  1         cw.s    727 | Code        | 11 |         |    3 | 00/14E0 : EE 40 18    |                 inc     path           
  971 |  1         cw.s    728 | Code        | 11 |         |    3 | 00/14E3 : EE 40 18    |                 inc     path           ;length  +2
  972 |  1         cw.s    729 | Code        | 11 |         |    3 | 00/14E6 : AE 40 18    |                 ldx     path           
  973 |  1         cw.s    730 | Code        | 11 |         |    2 | 00/14E9 : A9 AF       |                 lda     #$af           ; = '/'
  974 |  1         cw.s    731 | Code        | 11 |         |    3 | 00/14EB : 9D 40 18    |                 sta     path,x         ; / after
  975 |  1         cw.s    732 | Code        | 11 |         |    3 | 00/14EE : 8D 41 18    |                 sta     path+1         ; and / before
  976 |  1         cw.s    733 | Code        | 11 |         |    3 | 00/14F1 : 20 00 BF    |                 jsr     {$BF00}        ; set_prefix
  977 |  1         cw.s    734 | Data        | 11 |         |    1 | 00/14F4 : C6          |                 dfb     {$c6}          
  978 |  1         cw.s    735 | Data        | 11 |         |    2 | 00/14F5 : 39 18       |                 da      c6_param       
  979 |  1         cw.s    736 | Code        | 11 |         |    2 | 00/14F7 : 90 03       |                 bcc     good1          
  980 |  1         cw.s    737 | Code        | 11 |         |    3 | 00/14F9 : 4C 84 14    |                 jmp     ko             
  981 |  1         cw.s    738 | Comment     | 11 |         |    0 | 00/14FC               | *<sym>
  982 |  1         cw.s    739 | Empty       | 11 |         |    0 | 00/14FC               | good1                                  
  983 |  1         cw.s    740 | Code        | 11 |         |    1 | 00/14FC : 60          |                 rts                    
  984 |  1         cw.s    741 | Comment     | 11 |         |    0 | 00/14FD               | *
  985 |  1         cw.s    742 | Comment     | 11 |         |    0 | 00/14FD               | *
  986 |  1         cw.s    743 | Directive   | 11 |         |    0 | 00/14FD               |                 put     bigdisplay.s   ; code for printing found words
  987 |  4 bigdisplay.s      1 | Comment     | 11 |         |    0 | 00/14FD               | * v2.1.1 french
  988 |  4 bigdisplay.s      2 | Comment     | 11 |         |    0 | 00/14FD               | * the number of bytes to be analyzed is reduced to the number of bytes in the index file.
  989 |  4 bigdisplay.s      3 | Comment     | 11 |         |    0 | 00/14FD               | *<sym>
  990 |  4 bigdisplay.s      4 | Empty       | 11 |         |    0 | 00/14FD               | bigdisplay                             
  991 |  4 bigdisplay.s      5 | Code        | 11 |         |    3 | 00/14FD : 20 AB 12    |                 jsr     countbit       ; count 1 bits
  992 |  4 bigdisplay.s      6 | Code        | 11 |         |    3 | 00/1500 : AD 5F 19    |                 lda     counter        ; words found total = 0 ?
  993 |  4 bigdisplay.s      7 | Code        | 11 |         |    3 | 00/1503 : 0D 60 19    |                 ora     counter+1      
  994 |  4 bigdisplay.s      8 | Code        | 11 |         |    3 | 00/1506 : 0D 61 19    |                 ora     counter+2      
  995 |  4 bigdisplay.s      9 | Code        | 11 |         |    2 | 00/1509 : D0 01       |                 bne     go             ; no : go on
  996 |  4 bigdisplay.s     10 | Code        | 11 |         |    1 | 00/150B : 60          |                 rts                    
  997 |  4 bigdisplay.s     11 | Comment     | 11 |         |    0 | 00/150C               | *<sym>
  998 |  4 bigdisplay.s     12 | Code        | 11 |         |    2 | 00/150C : A9 03       | go              lda     #3             ; start display on line # 4
  999 |  4 bigdisplay.s     13 | Code        | 11 |         |    3 | 00/150E : 20 22 FC    |                 jsr     {$FC22}        
 1000 |  4 bigdisplay.s     14 | Comment     | 11 |         |    0 | 00/1511               | *** WORDS file
 1001 |  4 bigdisplay.s     15 | Code        | 11 |         |    2 | 00/1511 : A9 4C       |                 lda     #'L'           ; set file name for MLI open call
 1002 |  4 bigdisplay.s     16 | Code        | 11 |         |    3 | 00/1513 : 8D 1A 17    |                 sta     fname+1        
 1003 |  4 bigdisplay.s     17 | Code        | 11 |         |    3 | 00/1516 : AE 65 1A    |                 ldx     pattern        ; get word length, file path = L + pattern length (in hex format) / WORDS
 1004 |  4 bigdisplay.s     18 | Code        | 11 |         |    3 | 00/1519 : BD 6C 19    |                 lda     tohex,x        
 1005 |  4 bigdisplay.s     19 | Code        | 11 |         |    3 | 00/151C : 8D 1B 17    |                 sta     fname+2        
 1006 |  4 bigdisplay.s     20 | Code        | 11 |         |    2 | 00/151F : A9 2F       |                 lda     #'/'           
 1007 |  4 bigdisplay.s     21 | Code        | 11 |         |    3 | 00/1521 : 8D 1C 17    |                 sta     fname+3        
 1008 |  4 bigdisplay.s     22 | Code        | 11 |         |    2 | 00/1524 : A9 03       |                 lda     #$03           
 1009 |  4 bigdisplay.s     23 | Code        | 11 |         |    1 | 00/1526 : 18          |                 clc                    
 1010 |  4 bigdisplay.s     24 | Code        | 11 |         |    3 | 00/1527 : 6D 39 1A    |                 adc     words          ; add length of "WORDS"
 1011 |  4 bigdisplay.s     25 | Code        | 11 |         |    3 | 00/152A : 8D 19 17    |                 sta     fname          
 1012 |  4 bigdisplay.s     26 | Code        | 11 |         |    3 | 00/152D : AE 39 1A    |                 ldx     words          ; x = length of "WORDS"
 1013 |  4 bigdisplay.s     27 | Comment     | 11 |         |    0 | 00/1530               | *<sym>
 1014 |  4 bigdisplay.s     28 | Code        | 11 |         |    3 | 00/1530 : BD 39 1A    | copyfn          lda     words,x        
 1015 |  4 bigdisplay.s     29 | Code        | 11 |         |    3 | 00/1533 : 9D 1C 17    |                 sta     fname+3,x      ; copy "WORDS" at the end of file path
 1016 |  4 bigdisplay.s     30 | Code        | 11 |         |    1 | 00/1536 : CA          |                 dex                    
 1017 |  4 bigdisplay.s     31 | Code        | 11 |         |    2 | 00/1537 : D0 F7       |                 bne     copyfn         
 1018 |  4 bigdisplay.s     32 | Empty       | 11 |         |    0 | 00/1539               |                                        
 1019 |  4 bigdisplay.s     33 | Code        | 11 |         |    2 | 00/1539 : A9 00       |                 lda     #$00           ; set buffer for WORDS files : $8800
 1020 |  4 bigdisplay.s     34 | Code        | 11 |         |    3 | 00/153B : 8D 16 17    |                 sta     fbuff          
 1021 |  4 bigdisplay.s     35 | Code        | 11 |         |    2 | 00/153E : A9 88       |                 lda     #$88           
 1022 |  4 bigdisplay.s     36 | Code        | 11 |         |    3 | 00/1540 : 8D 17 17    |                 sta     fbuff+1        
 1023 |  4 bigdisplay.s     37 | Code        | 11 |         |    3 | 00/1543 : 20 00 BF    |                 jsr     {$BF00}        ; open WORDS file
 1024 |  4 bigdisplay.s     38 | Data        | 11 |         |    1 | 00/1546 : C8          |                 dfb     {$C8}          
 1025 |  4 bigdisplay.s     39 | Data        | 11 |         |    2 | 00/1547 : 13 17       |                 da      c8_parms       
 1026 |  4 bigdisplay.s     40 | Code        | 11 |         |    2 | 00/1549 : 90 03       |                 bcc     savref         
 1027 |  4 bigdisplay.s     41 | Code        | 11 |         |    3 | 00/154B : 4C 84 14    |                 jmp     ko             
 1028 |  4 bigdisplay.s     42 | Empty       | 11 |         |    0 | 00/154E               |                                        
 1029 |  4 bigdisplay.s     43 | Comment     | 11 |         |    0 | 00/154E               | *<sym>
 1030 |  4 bigdisplay.s     44 | Code        | 11 |         |    3 | 00/154E : AD 18 17    | savref          lda     ref            
 1031 |  4 bigdisplay.s     45 | Code        | 11 |         |    3 | 00/1551 : 8D 75 1A    |                 sta     refword        ; save ref ID of WORDS file.
 1032 |  4 bigdisplay.s     46 | Empty       | 11 |         |    0 | 00/1554               |                                        
 1033 |  4 bigdisplay.s     47 | Comment     | 11 |         |    0 | 00/1554               | *** process index 
 1034 |  4 bigdisplay.s     48 | Code        | 11 |         |    2 | 00/1554 : A9 20       |                 lda     #>{$2000}      ; set pointer to $2000 area
 1035 |  4 bigdisplay.s     49 | Code        | 11 |         |    2 | 00/1556 : 85 07       |                 sta     {$06}+1        
 1036 |  4 bigdisplay.s     50 | Code        | 11 |         |    2 | 00/1558 : A9 00       |                 lda     #<{$2000}      
 1037 |  4 bigdisplay.s     51 | Code        | 11 |         |    2 | 00/155A : 85 06       |                 sta     {$06}          
 1038 |  4 bigdisplay.s     52 | Empty       | 11 |         |    0 | 00/155C               |                                        
 1039 |  4 bigdisplay.s     53 | Comment     | 11 |         |    0 | 00/155C               | *<sym>
 1040 |  4 bigdisplay.s     54 | Empty       | 11 |         |    0 | 00/155C               | loopreadbyte                           
 1041 |  4 bigdisplay.s     55 | Code        | 11 |         |    3 | 00/155C : 20 79 16    |                 jsr     setmax         ; v2.1.1 : set maximum adresse of last byte to analyse (= $2000 + filelength)
 1042 |  4 bigdisplay.s     56 | Code        | 11 |         |    2 | 00/155F : A0 00       |                 ldy     #$00           
 1043 |  4 bigdisplay.s     57 | Code        | 11 |         |    2 | 00/1561 : B1 06       |                 lda     ({$06}),y      ; get byte to process
 1044 |  4 bigdisplay.s     58 | Code        | 11 |         |    3 | 00/1563 : 8D 68 19    |                 sta     tempo          
 1045 |  4 bigdisplay.s     59 | Code        | 11 |         |    2 | 00/1566 : D0 03       |                 bne     nonzero        
 1046 |  4 bigdisplay.s     60 | Code        | 11 |         |    3 | 00/1568 : 4C 5D 16    |                 jmp     zerobyte       ; if byte = 0, just add 8 to counter (8 bits are 0)
 1047 |  4 bigdisplay.s     61 | Empty       | 11 |         |    0 | 00/156B               |                                        
 1048 |  4 bigdisplay.s     62 | Comment     | 11 |         |    0 | 00/156B               | *<sym>
 1049 |  4 bigdisplay.s     63 | Code        | 11 |         |    2 | 00/156B : A0 08       | nonzero         ldy     #$08           ; else : find bit set to 1 and load corresponding word in WORDS file
 1050 |  4 bigdisplay.s     64 | Code        | 11 |         |    3 | 00/156D : 8C 81 19    |                 sty     savebit        
 1051 |  4 bigdisplay.s     65 | Comment     | 11 |         |    0 | 00/1570               | *<sym>
 1052 |  4 bigdisplay.s     66 | Code        | 11 |         |    3 | 00/1570 : 4E 68 19    | dolsr           lsr     tempo          ; get bit in carry
 1053 |  4 bigdisplay.s     67 | Code        | 11 |         |    2 | 00/1573 : B0 0B       |                 bcs     bitfound       ; if bit = 1
 1054 |  4 bigdisplay.s     68 | Empty       | 11 |         |    0 | 00/1575               |                                        
 1055 |  4 bigdisplay.s     69 | Comment     | 11 |         |    0 | 00/1575               | *<sym>
 1056 |  4 bigdisplay.s     70 | Empty       | 11 |         |    0 | 00/1575               | nextbit                                ; bit = 0
 1057 |  4 bigdisplay.s     71 | Code        | 11 |         |    3 | 00/1575 : 20 89 16    |                 jsr     incwrdcnt      ; word counter++
 1058 |  4 bigdisplay.s     72 | Code        | 11 |         |    3 | 00/1578 : CE 81 19    |                 dec     savebit        ; dec number of bits to scan
 1059 |  4 bigdisplay.s     73 | Code        | 11 |         |    2 | 00/157B : D0 F3       |                 bne     dolsr          ; not 8 bits yet : loop
 1060 |  4 bigdisplay.s     74 | Comment     | 11 |         |    0 | 00/157D               | * inc ptr
 1061 |  4 bigdisplay.s     75 | Code        | 11 |         |    3 | 00/157D : 4C 30 16    |                 jmp     eoword3        ; byte is finished : update pointers for next byte
 1062 |  4 bigdisplay.s     76 | Empty       | 11 |         |    0 | 00/1580               |                                        
 1063 |  4 bigdisplay.s     77 | Comment     | 11 |         |    0 | 00/1580               | *<sym>
 1064 |  4 bigdisplay.s     78 | Empty       | 11 |         |    0 | 00/1580               | bitfound                               
 1065 |  4 bigdisplay.s     79 | Comment     | 11 |         |    0 | 00/1580               | * current bit = 1 : find the corresionding word
 1066 |  4 bigdisplay.s     80 | Comment     | 11 |         |    0 | 00/1580               | * 
 1067 |  4 bigdisplay.s     81 | Comment     | 11 |         |    0 | 00/1580               | *** set_mark call
 1068 |  4 bigdisplay.s     82 | Comment     | 11 |         |    0 | 00/1580               | * 
 1069 |  4 bigdisplay.s     83 | Code        | 11 |         |    2 | 00/1580 : A2 02       |                 ldx     #$02           
 1070 |  4 bigdisplay.s     84 | Comment     | 11 |         |    0 | 00/1582               | *<sym>
 1071 |  4 bigdisplay.s     85 | Code        | 11 |         |    3 | 00/1582 : BD 62 19    | copywc          lda     wordscnt,x     ; copy word counter to filepos param for set_mark call param
 1072 |  4 bigdisplay.s     86 | Code        | 11 |         |    3 | 00/1585 : 9D 2B 17    |                 sta     filepos,x      
 1073 |  4 bigdisplay.s     87 | Code        | 11 |         |    1 | 00/1588 : CA          |                 dex                    
 1074 |  4 bigdisplay.s     88 | Code        | 11 |         |    2 | 00/1589 : 10 F7       |                 bpl     copywc         
 1075 |  4 bigdisplay.s     89 | Code        | 11 |         |    2 | 00/158B : A2 04       |                 ldx     #$04           
 1076 |  4 bigdisplay.s     90 | Comment     | 11 |         |    0 | 00/158D               | *<sym>
 1077 |  4 bigdisplay.s     91 | Code        | 11 |         |    3 | 00/158D : 0E 2B 17    | mul16wc         asl     filepos        ; file offset = filepos * 16 (16 char per word in words file)
 1078 |  4 bigdisplay.s     92 | Code        | 11 |         |    3 | 00/1590 : 2E 2C 17    |                 rol     filepos+1      
 1079 |  4 bigdisplay.s     93 | Code        | 11 |         |    3 | 00/1593 : 2E 2D 17    |                 rol     filepos+2      
 1080 |  4 bigdisplay.s     94 | Code        | 11 |         |    1 | 00/1596 : CA          |                 dex                    
 1081 |  4 bigdisplay.s     95 | Code        | 11 |         |    2 | 00/1597 : D0 F4       |                 bne     mul16wc        ; multiply by 2, 4 times => multiply by 16.
 1082 |  4 bigdisplay.s     96 | Comment     | 11 |         |    0 | 00/1599               |                         ; because each word takes 16 bytes in words file.
 1083 |  4 bigdisplay.s     97 | Empty       | 11 |         |    0 | 00/1599               |                                        
 1084 |  4 bigdisplay.s     98 | Code        | 11 |         |    3 | 00/1599 : AD 75 1A    |                 lda     refword        ; copy file ID from open call
 1085 |  4 bigdisplay.s     99 | Code        | 11 |         |    3 | 00/159C : 8D 2A 17    |                 sta     refce          ; to set-mark call param
 1086 |  4 bigdisplay.s    100 | Code        | 11 |         |    3 | 00/159F : 8D 2F 17    |                 sta     refread        ; and to read call param
 1087 |  4 bigdisplay.s    101 | Code        | 11 |         |    3 | 00/15A2 : 20 00 BF    |                 jsr     {$BF00}        ; set_mark call
 1088 |  4 bigdisplay.s    102 | Data        | 11 |         |    1 | 00/15A5 : CE          |                 dfb     {$ce}          
 1089 |  4 bigdisplay.s    103 | Data        | 11 |         |    2 | 00/15A6 : 29 17       |                 da      ce_param       
 1090 |  4 bigdisplay.s    104 | Code        | 11 |         |    2 | 00/15A8 : 90 03       |                 bcc     readw          
 1091 |  4 bigdisplay.s    105 | Code        | 11 |         |    3 | 00/15AA : 4C 84 14    |                 jmp     ko             
 1092 |  4 bigdisplay.s    106 | Comment     | 11 |         |    0 | 00/15AD               | *** read a word
 1093 |  4 bigdisplay.s    107 | Comment     | 11 |         |    0 | 00/15AD               | *<sym>
 1094 |  4 bigdisplay.s    108 | Code        | 11 |         |    2 | 00/15AD : A9 10       | readw           lda     #{$10}         ; read word file to get current matching word
 1095 |  4 bigdisplay.s    109 | Code        | 11 |         |    3 | 00/15AF : 8D 32 17    |                 sta     rreq           ; 16 bytes to read
 1096 |  4 bigdisplay.s    110 | Code        | 11 |         |    2 | 00/15B2 : A9 00       |                 lda     #$00           
 1097 |  4 bigdisplay.s    111 | Code        | 11 |         |    3 | 00/15B4 : 8D 33 17    |                 sta     rreq+1         
 1098 |  4 bigdisplay.s    112 | Code        | 11 |         |    2 | 00/15B7 : A9 36       |                 lda     #<rdbuff       ; set data buffer for reading file
 1099 |  4 bigdisplay.s    113 | Code        | 11 |         |    3 | 00/15B9 : 8D 30 17    |                 sta     rdbuffa        
 1100 |  4 bigdisplay.s    114 | Code        | 11 |         |    2 | 00/15BC : A9 17       |                 lda     #>rdbuff+1     
 1101 |  4 bigdisplay.s    115 | Code        | 11 |         |    3 | 00/15BE : 8D 31 17    |                 sta     rdbuffa+1      
 1102 |  4 bigdisplay.s    116 | Code        | 11 |         |    3 | 00/15C1 : 20 00 BF    |                 jsr     {$BF00}        ; load word
 1103 |  4 bigdisplay.s    117 | Data        | 11 |         |    1 | 00/15C4 : CA          |                 dfb     {$CA}          
 1104 |  4 bigdisplay.s    118 | Data        | 11 |         |    2 | 00/15C5 : 2E 17       |                 da      ca_parms       
 1105 |  4 bigdisplay.s    119 | Code        | 11 |         |    2 | 00/15C7 : 90 03       |                 bcc     prnres         
 1106 |  4 bigdisplay.s    120 | Code        | 11 |         |    3 | 00/15C9 : 4C 84 14    |                 jmp     ko             
 1107 |  4 bigdisplay.s    121 | Empty       | 11 |         |    0 | 00/15CC               |                                        
 1108 |  4 bigdisplay.s    122 | Comment     | 11 |         |    0 | 00/15CC               | *** print word
 1109 |  4 bigdisplay.s    123 | Comment     | 11 |         |    0 | 00/15CC               | *<sym>
 1110 |  4 bigdisplay.s    124 | Empty       | 11 |         |    0 | 00/15CC               | prnres                                 
 1111 |  4 bigdisplay.s    125 | Code        | 11 |         |    3 | 00/15CC : 20 74 14    |                 jsr     result         ; print word read in word file
 1112 |  4 bigdisplay.s    126 | Code        | 11 |         |    3 | 00/15CF : EE 84 19    |                 inc     displayed      ; # of word displayed ++
 1113 |  4 bigdisplay.s    127 | Code        | 11 |         |    3 | 00/15D2 : AD 84 19    |                 lda     displayed      
 1114 |  4 bigdisplay.s    128 | Code        | 11 |         |    2 | 00/15D5 : C9 5A       |                 cmp     #90            ; = 90 words ?
 1115 |  4 bigdisplay.s    129 | Code        | 11 |         |    2 | 00/15D7 : D0 2F       |                 bne     godisp         ; no : kepp on displying words
 1116 |  4 bigdisplay.s    130 | Code        | 11 |         |    2 | 00/15D9 : A9 00       |                 lda     #0             ; yes : reset displayed to 0
 1117 |  4 bigdisplay.s    131 | Code        | 11 |         |    3 | 00/15DB : 8D 84 19    |                 sta     displayed      ; save it
 1118 |  4 bigdisplay.s    132 | Macro       | 11 |         |    0 | 00/15DE               |                 cr                     
 1119 |  4 bigdisplay.s    132 | Code        | 11 |         |    3 | 00/15DE : 20 8E FD    |                 jsr     {$FD8E}        
 1120 |  4 bigdisplay.s    133 | Macro       | 11 |         |    0 | 00/15E1               |                 cr                     
 1121 |  4 bigdisplay.s    133 | Code        | 11 |         |    3 | 00/15E1 : 20 8E FD    |                 jsr     {$FD8E}        
 1122 |  4 bigdisplay.s    134 | Macro       | 11 |         |    0 | 00/15E4               |                 prnstr  presskeylib    
 1123 |  4 bigdisplay.s    134 | Code        | 11 |         |    3 | 00/15E4 : AC 3F 1A    |                 ldy     presskeylib    
 1124 |  4 bigdisplay.s    134 | Code        | 11 |         |    2 | 00/15E7 : F0 0E       |                 beq     ozunid_28      ; no char.
 1125 |  4 bigdisplay.s    134 | Code        | 11 |         |    2 | 00/15E9 : A2 00       |                 ldx     #$00           
 1126 |  4 bigdisplay.s    134 | Code        | 11 |         |    3 | 00/15EB : BD 40 1A    | ozunid_27       lda     presskeylib+1,X
 1127 |  4 bigdisplay.s    134 | Code        | 11 |         |    2 | 00/15EE : 09 80       |                 ora     #$80           
 1128 |  4 bigdisplay.s    134 | Code        | 11 |         |    3 | 00/15F0 : 20 ED FD    |                 jsr     {$FDED}        
 1129 |  4 bigdisplay.s    134 | Code        | 11 |         |    1 | 00/15F3 : E8          |                 inx                    
 1130 |  4 bigdisplay.s    134 | Code        | 11 |         |    1 | 00/15F4 : 88          |                 dey                    
 1131 |  4 bigdisplay.s    134 | Code        | 11 |         |    2 | 00/15F5 : D0 F4       |                 bne     ozunid_27      
 1132 |  4 bigdisplay.s    134 | Empty       | 11 |         |    0 | 00/15F7               | ozunid_28                              
 1133 |  4 bigdisplay.s    135 | Code        | 11 |         |    3 | 00/15F7 : 20 A1 14    |                 jsr     dowait         ; wait for a key pressed
 1134 |  4 bigdisplay.s    136 | Code        | 11 |         |    2 | 00/15FA : C9 9B       |                 cmp     #$9b           ; escape ?
 1135 |  4 bigdisplay.s    137 | Code        | 11 |         |    2 | 00/15FC : D0 07       |                 bne     newscreen      ; no : go on
 1136 |  4 bigdisplay.s    138 | Code        | 11 |         |    1 | 00/15FE : BA          |                 tsx                    ; yes : reset stack (+2)
 1137 |  4 bigdisplay.s    139 | Code        | 11 |         |    1 | 00/15FF : E8          |                 inx                    ; to avoid stack overflow
 1138 |  4 bigdisplay.s    140 | Code        | 11 |         |    1 | 00/1600 : E8          |                 inx                    
 1139 |  4 bigdisplay.s    141 | Code        | 11 |         |    1 | 00/1601 : 9A          |                 txs                    
 1140 |  4 bigdisplay.s    142 | Code        | 11 |         |    3 | 00/1602 : 4C 07 10    |                 jmp     init           ; and go to beginning of program
 1141 |  4 bigdisplay.s    143 | Comment     | 11 |         |    0 | 00/1605               | *<sym>
 1142 |  4 bigdisplay.s    144 | Empty       | 11 |         |    0 | 00/1605               | newscreen                              
 1143 |  4 bigdisplay.s    145 | Code        | 11 |         |    3 | 00/1605 : 20 58 FC    |                 jsr     {$FC58}        ; clear screen
 1144 |  4 bigdisplay.s    146 | Comment     | 11 |         |    0 | 00/1608               | *<sym>
 1145 |  4 bigdisplay.s    147 | Empty       | 11 |         |    0 | 00/1608               | godisp                                 
 1146 |  4 bigdisplay.s    148 | Code        | 11 |         |    3 | 00/1608 : AD 82 19    |                 lda     col            ; adjust position on screen for next word
 1147 |  4 bigdisplay.s    149 | Code        | 11 |         |    2 | 00/160B : C9 40       |                 cmp     #64            ; 64 horizontal = last posiotn on line
 1148 |  4 bigdisplay.s    150 | Code        | 11 |         |    2 | 00/160D : F0 06       |                 beq     lastcol        
 1149 |  4 bigdisplay.s    151 | Code        | 11 |         |    1 | 00/160F : 18          |                 clc                    ; enough room opu next word
 1150 |  4 bigdisplay.s    152 | Code        | 11 |         |    2 | 00/1610 : 69 10       |                 adc     #16            ; move horizontal posiiton 16 rows to the right
 1151 |  4 bigdisplay.s    153 | Code        | 11 |         |    3 | 00/1612 : 4C 1F 16    |                 jmp     outscr         
 1152 |  4 bigdisplay.s    154 | Comment     | 11 |         |    0 | 00/1615               | *<sym>
 1153 |  4 bigdisplay.s    155 | Empty       | 11 |         |    0 | 00/1615               | lastcol                                
 1154 |  4 bigdisplay.s    156 | Code        | 11 |         |    3 | 00/1615 : AD 84 19    |                 lda     displayed      ; if displayed = 0 (beginning of screen) then non cr
 1155 |  4 bigdisplay.s    157 | Code        | 11 |         |    2 | 00/1618 : F0 03       |                 beq     nocr           
 1156 |  4 bigdisplay.s    158 | Macro       | 11 |         |    0 | 00/161A               |                 cr                     ; last horizontal posiiton on screen
 1157 |  4 bigdisplay.s    158 | Code        | 11 |         |    3 | 00/161A : 20 8E FD    |                 jsr     {$FD8E}        
 1158 |  4 bigdisplay.s    159 | Comment     | 11 |         |    0 | 00/161D               | *<sym>
 1159 |  4 bigdisplay.s    160 | Empty       | 11 |         |    0 | 00/161D               | nocr                                   
 1160 |  4 bigdisplay.s    161 | Code        | 11 |         |    2 | 00/161D : A9 00       |                 lda     #$00           ; reset horizontal posiiton
 1161 |  4 bigdisplay.s    162 | Comment     | 11 |         |    0 | 00/161F               | *<sym> 
 1162 |  4 bigdisplay.s    163 | Code        | 11 |         |    3 | 00/161F : 8D 82 19    | outscr          sta     col            ; store in col var
 1163 |  4 bigdisplay.s    164 | Code        | 11 |         |    3 | 00/1622 : 8D 7B 05    |                 sta     {$57B}         ; set value for rom/prodos routine
 1164 |  4 bigdisplay.s    165 | Empty       | 11 |         |    0 | 00/1625               |                                        
 1165 |  4 bigdisplay.s    166 | Comment     | 11 |         |    0 | 00/1625               | *<sym>
 1166 |  4 bigdisplay.s    167 | Empty       | 11 |         |    0 | 00/1625               | eoword                                 
 1167 |  4 bigdisplay.s    168 | Code        | 11 |         |    3 | 00/1625 : 20 89 16    |                 jsr     incwrdcnt      ; update word counter
 1168 |  4 bigdisplay.s    169 | Code        | 11 |         |    3 | 00/1628 : CE 81 19    |                 dec     savebit        ; update bit counter
 1169 |  4 bigdisplay.s    170 | Code        | 11 |         |    2 | 00/162B : F0 03       |                 beq     eoword3        ; if 0 : next byte
 1170 |  4 bigdisplay.s    171 | Code        | 11 |         |    3 | 00/162D : 4C 70 15    |                 jmp     dolsr          ; if <> 0 loop to get next bit
 1171 |  4 bigdisplay.s    172 | Empty       | 11 |         |    0 | 00/1630               |                                        
 1172 |  4 bigdisplay.s    173 | Comment     | 11 |         |    0 | 00/1630               | *** end of LSR loop 
 1173 |  4 bigdisplay.s    174 | Empty       | 11 |         |    0 | 00/1630               |                                        
 1174 |  4 bigdisplay.s    175 | Comment     | 11 |         |    0 | 00/1630               | *<sym>
 1175 |  4 bigdisplay.s    176 | Empty       | 11 |         |    0 | 00/1630               | eoword3                                
 1176 |  4 bigdisplay.s    177 | Code        | 11 |         |    2 | 00/1630 : E6 06       |                 inc     {$06}          ; inc. pointer to next byte to analyse
 1177 |  4 bigdisplay.s    178 | Code        | 11 |         |    2 | 00/1632 : D0 02       |                 bne     noinc2         
 1178 |  4 bigdisplay.s    179 | Code        | 11 |         |    2 | 00/1634 : E6 07       |                 inc     {$06}+1        
 1179 |  4 bigdisplay.s    180 | Comment     | 11 |         |    0 | 00/1636               | *<sym>
 1180 |  4 bigdisplay.s    181 | Empty       | 11 |         |    0 | 00/1636               | noinc2                                 
 1181 |  4 bigdisplay.s    182 | Comment     | 11 |         |    0 | 00/1636               |                                 ; v2.1.1 french
 1182 |  4 bigdisplay.s    183 | Code        | 11 |         |    2 | 00/1636 : A5 07       |                 lda     {$06}+1        ; compare it to adress of last byte to analyse
 1183 |  4 bigdisplay.s    184 | Code        | 11 |         |    3 | 00/1638 : CD 58 19    |                 cmp     max+1          
 1184 |  4 bigdisplay.s    185 | Code        | 11 |         |    2 | 00/163B : D0 09       |                 bne     doloop         ; non equal : loop
 1185 |  4 bigdisplay.s    186 | Code        | 11 |         |    2 | 00/163D : A5 06       |                 lda     {$06}          
 1186 |  4 bigdisplay.s    187 | Code        | 11 |         |    3 | 00/163F : CD 57 19    |                 cmp     max            
 1187 |  4 bigdisplay.s    188 | Code        | 11 |         |    2 | 00/1642 : D0 02       |                 bne     doloop         ; non equal : loop
 1188 |  4 bigdisplay.s    189 | Code        | 11 |         |    2 | 00/1644 : F0 03       |                 beq     dispexit       ; equal : exit
 1189 |  4 bigdisplay.s    190 | Comment     | 11 |         |    0 | 00/1646               | *<sym>
 1190 |  4 bigdisplay.s    191 | Code        | 11 |         |    3 | 00/1646 : 4C 5C 15    | doloop          jmp     loopreadbyte   
 1191 |  4 bigdisplay.s    192 | Empty       | 11 |         |    0 | 00/1649               |                                        
 1192 |  4 bigdisplay.s    193 | Comment     | 11 |         |    0 | 00/1649               | *<sym>
 1193 |  4 bigdisplay.s    194 | Empty       | 11 |         |    0 | 00/1649               | dispexit                               
 1194 |  4 bigdisplay.s    195 | Code        | 11 |         |    2 | 00/1649 : A9 00       |                 lda     #$00           ; exit of bigdisplay routine
 1195 |  4 bigdisplay.s    196 | Code        | 11 |         |    3 | 00/164B : 8D 94 BF    |                 sta     $BF94          
 1196 |  4 bigdisplay.s    197 | Macro       | 11 |         |    0 | 00/164E               |                 closef  #$00           
 1197 |  4 bigdisplay.s    197 | Code        | 11 |         |    2 | 00/164E : A9 00       |                 lda     #$00           
 1198 |  4 bigdisplay.s    197 | Code        | 11 |         |    3 | 00/1650 : 8D 12 17    |                 sta     cc_parms+1     
 1199 |  4 bigdisplay.s    197 | Code        | 11 |         |    3 | 00/1653 : 20 00 BF    |                 jsr     {$BF00}        
 1200 |  4 bigdisplay.s    197 | Data        | 11 |         |    1 | 00/1656 : CC          |                 dfb     {$CC}          
 1201 |  4 bigdisplay.s    197 | Data        | 11 |         |    2 | 00/1657 : 11 17       |                 da      cc_parms       
 1202 |  4 bigdisplay.s    198 | Code        | 11 |         |    3 | 00/1659 : 20 F8 BE    |                 jsr     {$BEF8}        ; free all buffers
 1203 |  4 bigdisplay.s    199 | Code        | 11 |         |    1 | 00/165C : 60          |                 rts                    
 1204 |  4 bigdisplay.s    200 | Comment     | 11 |         |    0 | 00/165D               | *<sym>
 1205 |  4 bigdisplay.s    201 | Empty       | 11 |         |    0 | 00/165D               | zerobyte                               
 1206 |  4 bigdisplay.s    202 | Comment     | 11 |         |    0 | 00/165D               |                         ; here byte = 0 
 1207 |  4 bigdisplay.s    203 | Code        | 11 |         |    3 | 00/165D : AD 62 19    |                 lda     wordscnt       ; word counter : +8
 1208 |  4 bigdisplay.s    204 | Code        | 11 |         |    1 | 00/1660 : 18          |                 clc                    
 1209 |  4 bigdisplay.s    205 | Code        | 11 |         |    2 | 00/1661 : 69 08       |                 adc     #$08           
 1210 |  4 bigdisplay.s    206 | Code        | 11 |         |    3 | 00/1663 : 8D 62 19    |                 sta     wordscnt       
 1211 |  4 bigdisplay.s    207 | Code        | 11 |         |    2 | 00/1666 : A9 00       |                 lda     #$00           
 1212 |  4 bigdisplay.s    208 | Code        | 11 |         |    3 | 00/1668 : 6D 63 19    |                 adc     wordscnt+1     
 1213 |  4 bigdisplay.s    209 | Code        | 11 |         |    3 | 00/166B : 8D 63 19    |                 sta     wordscnt+1     
 1214 |  4 bigdisplay.s    210 | Code        | 11 |         |    2 | 00/166E : A9 00       |                 lda     #$00           
 1215 |  4 bigdisplay.s    211 | Code        | 11 |         |    3 | 00/1670 : 6D 64 19    |                 adc     wordscnt+2     
 1216 |  4 bigdisplay.s    212 | Code        | 11 |         |    3 | 00/1673 : 8D 64 19    |                 sta     wordscnt+2     
 1217 |  4 bigdisplay.s    213 | Code        | 11 |         |    3 | 00/1676 : 4C 30 16    |                 jmp     eoword3        ; next byte
 1218 |  4 bigdisplay.s    214 | Empty       | 11 |         |    0 | 00/1679               |                                        
 1219 |  4 bigdisplay.s    215 | Comment     | 11 |         |    0 | 00/1679               | ************** end of displayw **************
 1220 |  4 bigdisplay.s    216 | Comment     | 11 |         |    0 | 00/1679               | ***
 1221 |  4 bigdisplay.s    217 | Comment     | 11 |         |    0 | 00/1679               | *<sym>
 1222 |  4 bigdisplay.s    218 | Empty       | 11 |         |    0 | 00/1679               | setmax                                 ; set adress of last byte to analyse
 1223 |  4 bigdisplay.s    219 | Code        | 11 |         |    3 | 00/1679 : AD 54 19    |                 lda     filelength     ; get file length (of index file)
 1224 |  4 bigdisplay.s    220 | Code        | 11 |         |    3 | 00/167C : 8D 57 19    |                 sta     max            ; set max (low byte)
 1225 |  4 bigdisplay.s    221 | Code        | 11 |         |    3 | 00/167F : AD 55 19    |                 lda     filelength+1   ; get hi byte
 1226 |  4 bigdisplay.s    222 | Code        | 11 |         |    1 | 00/1682 : 18          |                 clc                    
 1227 |  4 bigdisplay.s    223 | Code        | 11 |         |    2 | 00/1683 : 69 20       |                 adc     #$20           ; add it to starting adress of memory
 1228 |  4 bigdisplay.s    224 | Code        | 11 |         |    3 | 00/1685 : 8D 58 19    |                 sta     max+1          
 1229 |  4 bigdisplay.s    225 | Code        | 11 |         |    1 | 00/1688 : 60          |                 rts                    
 1230 |  4 bigdisplay.s    226 | Comment     | 11 |         |    0 | 00/1689               | *<sym>
 1231 |  4 bigdisplay.s    227 | Empty       | 11 |         |    0 | 00/1689               |                                        
 1232 |  4 bigdisplay.s    228 | Empty       | 11 |         |    0 | 00/1689               | incwrdcnt                              
 1233 |  4 bigdisplay.s    229 | Code        | 11 |         |    3 | 00/1689 : EE 62 19    |                 inc     wordscnt       ; inc word counter
 1234 |  4 bigdisplay.s    230 | Code        | 11 |         |    2 | 00/168C : D0 03       |                 bne     nowinc1        
 1235 |  4 bigdisplay.s    231 | Code        | 11 |         |    3 | 00/168E : EE 63 19    |                 inc     wordscnt+1     
 1236 |  4 bigdisplay.s    232 | Comment     | 11 |         |    0 | 00/1691               | *<sym>
 1237 |  4 bigdisplay.s    233 | Code        | 11 |         |    2 | 00/1691 : D0 03       | nowinc1         bne     incfin         
 1238 |  4 bigdisplay.s    234 | Code        | 11 |         |    3 | 00/1693 : EE 64 19    |                 inc     wordscnt+2     
 1239 |  4 bigdisplay.s    235 | Comment     | 11 |         |    0 | 00/1696               | *<sym>
 1240 |  4 bigdisplay.s    236 | Code        | 11 |         |    1 | 00/1696 : 60          | incfin          rts                    
 1241 |  4 bigdisplay.s    237 | Empty       | 11 |         |    0 | 00/1697               |                                        
 1242 |  1         cw.s    744 | Directive   | 11 |         |    0 | 00/1697               |                 put     ram.s          ; disconnect /RAM, not used for now.
 1243 |  5        ram.s      1 | Empty       | 11 |         |    0 | 00/1697               |                                        
 1244 |  5        ram.s      2 | Comment     | 11 |         |    0 | 00/1697               | ********************  disconnect /RAM  **********************
 1245 |  5        ram.s      3 | Comment     | 11 |         |    0 | 00/1697               | * from : https://prodos8.com/docs/techref/writing-a-prodos-system-program/
 1246 |  5        ram.s      4 | Comment     | 11 |         |    0 | 00/1697               | * biblio :
 1247 |  5        ram.s      5 | Comment     | 11 |         |    0 | 00/1697               | * https://www.brutaldeluxe.fr/products/france/psi/psi_systemeprodosdelappleii_ocr.pdf
 1248 |  5        ram.s      6 | Comment     | 11 |         |    0 | 00/1697               | * or SYSTEME PRODOS DE L'APPLE Il.pdf p.139.
 1249 |  5        ram.s      7 | Empty       | 11 |         |    0 | 00/1697               |                                        
 1250 |  5        ram.s      8 | Comment     | 11 |         |    0 | 00/1697               | *<sym>
 1251 |  5        ram.s      9 | Equivalence | 11 |         |    0 | 00/1697               | devcnt          equ     $bf31          ; global page device count
 1252 |  5        ram.s     10 | Comment     | 11 |         |    0 | 00/1697               | *<sym>
 1253 |  5        ram.s     11 | Equivalence | 11 |         |    0 | 00/1697               | devlst          equ     $bf32          ; global page device list
 1254 |  5        ram.s     12 | Comment     | 11 |         |    0 | 00/1697               | *<sym>
 1255 |  5        ram.s     13 | Equivalence | 11 |         |    0 | 00/1697               | machid          equ     $bf98          ; global page machine id byte
 1256 |  5        ram.s     14 | Comment     | 11 |         |    0 | 00/1697               | *<sym>
 1257 |  5        ram.s     15 | Equivalence | 11 |         |    0 | 00/1697               | ramslot         equ     $bf26          ; slot 3, drive 2 is /ram's driver vector in following list :
 1258 |  5        ram.s     16 | Empty       | 11 |         |    0 | 00/1697               |                                        
 1259 |  5        ram.s     17 | Comment     | 11 |         |    0 | 00/1697               | * ProDOS keeps a table of the addresses of the device drivers assigned to each slot and
 1260 |  5        ram.s     18 | Comment     | 11 |         |    0 | 00/1697               | * drive between $BF10 and $BF2F. There are two bytes for each slot and drive. $BF10-1F
 1261 |  5        ram.s     19 | Comment     | 11 |         |    0 | 00/1697               | * is for drive 1, and $BF20-2F is for drive 2. For example, the address of the device
 1262 |  5        ram.s     20 | Comment     | 11 |         |    0 | 00/1697               | * driver for slot 6 drive 1 is at $BF1C,1D. (Normally this address is $D000.)
 1263 |  5        ram.s     21 | Empty       | 11 |         |    0 | 00/1697               |                                        
 1264 |  5        ram.s     22 | Comment     | 11 |         |    0 | 00/1697               | *  BF10: Slot zero reserved
 1265 |  5        ram.s     23 | Comment     | 11 |         |    0 | 00/1697               | *  BF12: Slot 1, drive 1
 1266 |  5        ram.s     24 | Comment     | 11 |         |    0 | 00/1697               | *  BF14: Slot 2, drive 1
 1267 |  5        ram.s     25 | Comment     | 11 |         |    0 | 00/1697               | *  BF16: Slot 3, drive 1
 1268 |  5        ram.s     26 | Comment     | 11 |         |    0 | 00/1697               | *  BF18: Slot 4, drive 1
 1269 |  5        ram.s     27 | Comment     | 11 |         |    0 | 00/1697               | *  BF1A: Slot 5, drive 1
 1270 |  5        ram.s     28 | Comment     | 11 |         |    0 | 00/1697               | *  BF1C: Slot 6, drive 1
 1271 |  5        ram.s     29 | Comment     | 11 |         |    0 | 00/1697               | *  BF1E: Slot 7, drive 1
 1272 |  5        ram.s     30 | Comment     | 11 |         |    0 | 00/1697               | *  BF20: Slot zero reserved
 1273 |  5        ram.s     31 | Comment     | 11 |         |    0 | 00/1697               | *  BF22: Slot 1, drive 2
 1274 |  5        ram.s     32 | Comment     | 11 |         |    0 | 00/1697               | *  BF24: Slot 2, drive 2
 1275 |  5        ram.s     33 | Comment     | 11 |         |    0 | 00/1697               | *  BF26: Slot 3, drive 2 = I RAM, reserved
 1276 |  5        ram.s     34 | Comment     | 11 |         |    0 | 00/1697               | *  BF28: Slot 4, drive 2
 1277 |  5        ram.s     35 | Comment     | 11 |         |    0 | 00/1697               | *  BF2A: Slot 5, drive 2
 1278 |  5        ram.s     36 | Comment     | 11 |         |    0 | 00/1697               | *  BF2C: Slot 6, drive 2
 1279 |  5        ram.s     37 | Comment     | 11 |         |    0 | 00/1697               | *  BF2E: Slot 7, drive 2
 1280 |  5        ram.s     38 | Empty       | 11 |         |    0 | 00/1697               |                                        
 1281 |  5        ram.s     39 | Comment     | 11 |         |    0 | 00/1697               |  * nodev is the global page slot zero, drive 1 disk drive vector.
 1282 |  5        ram.s     40 | Comment     | 11 |         |    0 | 00/1697               |  * it is reserved for use as the "no device connected" vector.
 1283 |  5        ram.s     41 | Comment     | 11 |         |    0 | 00/1697               |  *<sym>
 1284 |  5        ram.s     42 | Equivalence | 11 |         |    0 | 00/1697               | nodev           equ     $bf10          
 1285 |  5        ram.s     43 | Comment     | 11 |         |    0 | 00/1697               |  *
 1286 |  5        ram.s     44 | Comment     | 11 |         |    0 | 00/1697               |  *<sym>
 1287 |  5        ram.s     45 | Empty       | 11 |         |    0 | 00/1697               | ramout                                 
 1288 |  5        ram.s     46 | Code        | 11 |         |    1 | 00/1697 : 08          |                 php                    ; save status and
 1289 |  5        ram.s     47 | Code        | 11 |         |    1 | 00/1698 : 78          |                 sei                    ; make sure interrupts are off!
 1290 |  5        ram.s     48 | Comment     | 11 |         |    0 | 00/1699               |  *
 1291 |  5        ram.s     49 | Comment     | 11 |         |    0 | 00/1699               |  * first thing to do is to see if there is a /ram to disconnect!
 1292 |  5        ram.s     50 | Comment     | 11 |         |    0 | 00/1699               |  *
 1293 |  5        ram.s     51 | Code        | 11 |         |    3 | 00/1699 : AD 98 BF    |                 lda     {$bf98}        ; load the machine id byte
 1294 |  5        ram.s     52 | Code        | 11 |         |    2 | 00/169C : 29 30       |                 and     #$30           ; to check for a 128k system
 1295 |  5        ram.s     53 | Code        | 11 |         |    2 | 00/169E : C9 30       |                 cmp     #$30           ; is it 128k?
 1296 |  5        ram.s     54 | Code        | 11 |         |    2 | 00/16A0 : D0 4D       |                 bne     done           ; if not then branch since no /ram!
 1297 |  5        ram.s     55 | Comment     | 11 |         |    0 | 00/16A2               |  *
 1298 |  5        ram.s     56 | Code        | 11 |         |    3 | 00/16A2 : AD 26 BF    |                 lda     {$bf26}        ; it is 128k; is a device there?
 1299 |  5        ram.s     57 | Code        | 11 |         |    3 | 00/16A5 : CD 10 BF    |                 cmp     {$bf10}        ; compare with low byte of nodev
 1300 |  5        ram.s     58 | Code        | 11 |         |    2 | 00/16A8 : D0 08       |                 bne     cont           ; branch if not equal, device is connected
 1301 |  5        ram.s     59 | Code        | 11 |         |    3 | 00/16AA : AD 27 BF    |                 lda     {$bf26}+1      ; check high byte for match
 1302 |  5        ram.s     60 | Code        | 11 |         |    3 | 00/16AD : CD 11 BF    |                 cmp     {$bf10}+1      ; are we connected?
 1303 |  5        ram.s     61 | Code        | 11 |         |    2 | 00/16B0 : F0 3D       |                 beq     done           ; branch, no work to do; device not there
 1304 |  5        ram.s     62 | Comment     | 11 |         |    0 | 00/16B2               |  *
 1305 |  5        ram.s     63 | Comment     | 11 |         |    0 | 00/16B2               |  * at this point /ram (or some other device) is connected in
 1306 |  5        ram.s     64 | Comment     | 11 |         |    0 | 00/16B2               |  * the slot 3, drive 2 vector.  now we must go thru the device
 1307 |  5        ram.s     65 | Comment     | 11 |         |    0 | 00/16B2               |  * list and find the slot 3, drive 2 unit number of /ram ($bf).
 1308 |  5        ram.s     66 | Comment     | 11 |         |    0 | 00/16B2               |  * the actual unit numbers, (that is to say 'devices') that will
 1309 |  5        ram.s     67 | Comment     | 11 |         |    0 | 00/16B2               |  * be removed will be $bf, $bb, $b7, $b3.  /ram's device number
 1310 |  5        ram.s     68 | Comment     | 11 |         |    0 | 00/16B2               |  * is $bf.  thus this convention will allow other devices that
 1311 |  5        ram.s     69 | Comment     | 11 |         |    0 | 00/16B2               |  * do not necessarily resemble (or in fact, are completely different
 1312 |  5        ram.s     70 | Comment     | 11 |         |    0 | 00/16B2               |  * from) /ram to remain intact in the system.
 1313 |  5        ram.s     71 | Comment     | 11 |         |    0 | 00/16B2               |  *
 1314 |  5        ram.s     72 | Comment     | 11 |         |    0 | 00/16B2               |  *<sym>
 1315 |  5        ram.s     73 | Code        | 11 |         |    3 | 00/16B2 : AC 31 BF    | cont            ldy     {$bf31}        ; get the number of devices online
 1316 |  5        ram.s     74 | Comment     | 11 |         |    0 | 00/16B5               | *<sym>
 1317 |  5        ram.s     75 | Code        | 11 |         |    3 | 00/16B5 : B9 32 BF    | loop            lda     {$bf32},y      ; start looking for /ram or facsimile
 1318 |  5        ram.s     76 | Code        | 11 |         |    2 | 00/16B8 : 29 F3       |                 and     #$f3           ; looking for $bf, $bb, $b7, $b3
 1319 |  5        ram.s     77 | Code        | 11 |         |    2 | 00/16BA : C9 B3       |                 cmp     #$b3           ; is device number in {$bf,$bb,$b7,$b3}?
 1320 |  5        ram.s     78 | Code        | 11 |         |    2 | 00/16BC : F0 05       |                 beq     found          ; branch if found..
 1321 |  5        ram.s     79 | Code        | 11 |         |    1 | 00/16BE : 88          |                 dey                    ; otherwise check out the next unit #.
 1322 |  5        ram.s     80 | Code        | 11 |         |    2 | 00/16BF : 10 F4       |                 bpl     loop           ; branch unless you've run out of units.
 1323 |  5        ram.s     81 | Code        | 11 |         |    2 | 00/16C1 : 30 2C       |                 bmi     done           ; since you have run out of units to
 1324 |  5        ram.s     82 | Comment     | 11 |         |    0 | 00/16C3               | *<sym>
 1325 |  5        ram.s     83 | Code        | 11 |         |    3 | 00/16C3 : B9 32 BF    | found           lda     {$bf32},y      ; get the original unit number back
 1326 |  5        ram.s     84 | Code        | 11 |         |    3 | 00/16C6 : 8D F3 16    |                 sta     ramunitid      ; and save it off for later restoration.
 1327 |  5        ram.s     85 | Comment     | 11 |         |    0 | 00/16C9               |  *
 1328 |  5        ram.s     86 | Comment     | 11 |         |    0 | 00/16C9               |  * now we must remove the unit from the device list by bubbling
 1329 |  5        ram.s     87 | Comment     | 11 |         |    0 | 00/16C9               |  * up the trailing units.
 1330 |  5        ram.s     88 | Comment     | 11 |         |    0 | 00/16C9               |  *
 1331 |  5        ram.s     89 | Comment     | 11 |         |    0 | 00/16C9               |  *<sym>
 1332 |  5        ram.s     90 | Empty       | 11 |         |    0 | 00/16C9               | getloop                                
 1333 |  5        ram.s     91 | Code        | 11 |         |    3 | 00/16C9 : B9 33 BF    |                 lda     {$bf32}+1,y    ; get the next unit number
 1334 |  5        ram.s     92 | Code        | 11 |         |    3 | 00/16CC : 99 32 BF    |                 sta     {$bf32},y      ; and move it up.
 1335 |  5        ram.s     93 | Code        | 11 |         |    2 | 00/16CF : F0 03       |                 beq     exit           ; branch when done(zeros trail the devlst)
 1336 |  5        ram.s     94 | Code        | 11 |         |    1 | 00/16D1 : C8          |                 iny                    ; continue to the next unit number...
 1337 |  5        ram.s     95 | Code        | 11 |         |    2 | 00/16D2 : D0 F5       |                 bne     getloop        ; branch always.
 1338 |  5        ram.s     96 | Comment     | 11 |         |    0 | 00/16D4               |  *
 1339 |  5        ram.s     97 | Comment     | 11 |         |    0 | 00/16D4               |  *<sym>
 1340 |  5        ram.s     98 | Code        | 11 |         |    3 | 00/16D4 : AD 26 BF    | exit            lda     {$bf26}        ; save slot 3, drive 2 device address.
 1341 |  5        ram.s     99 | Code        | 11 |         |    3 | 00/16D7 : 8D F1 16    |                 sta     address        ; save off low byte of /ram driver address
 1342 |  5        ram.s    100 | Code        | 11 |         |    3 | 00/16DA : AD 27 BF    |                 lda     {$bf26}+1      ; save off high byte
 1343 |  5        ram.s    101 | Code        | 11 |         |    3 | 00/16DD : 8D F2 16    |                 sta     address+1      ;
 1344 |  5        ram.s    102 | Comment     | 11 |         |    0 | 00/16E0               |  *
 1345 |  5        ram.s    103 | Code        | 11 |         |    3 | 00/16E0 : AD 10 BF    |                 lda     {$bf10}        ; finally copy the 'no device connected'
 1346 |  5        ram.s    104 | Code        | 11 |         |    3 | 00/16E3 : 8D 26 BF    |                 sta     {$bf26}        ; into the slot 3, drive 2 vector and
 1347 |  5        ram.s    105 | Code        | 11 |         |    3 | 00/16E6 : AD 11 BF    |                 lda     {$bf10}+1      
 1348 |  5        ram.s    106 | Code        | 11 |         |    3 | 00/16E9 : 8D 27 BF    |                 sta     {$bf26}+1      
 1349 |  5        ram.s    107 | Code        | 11 |         |    3 | 00/16EC : CE 31 BF    |                 dec     {$bf31}        ; decrement the device count.
 1350 |  5        ram.s    108 | Comment     | 11 |         |    0 | 00/16EF               |  *
 1351 |  5        ram.s    109 | Comment     | 11 |         |    0 | 00/16EF               |  *<sym>
 1352 |  5        ram.s    110 | Code        | 11 |         |    1 | 00/16EF : 28          | done            plp                    ; restore status
 1353 |  5        ram.s    111 | Code        | 11 |         |    1 | 00/16F0 : 60          |                 rts                    ; and return
 1354 |  1         cw.s    745 | Comment     | 11 |         |    0 | 00/16F1               | *
 1355 |  1         cw.s    746 | Comment     | 11 |         |    0 | 00/16F1               | *
 1356 |  1         cw.s    747 | Comment     | 11 |         |    0 | 00/16F1               | **********************   DATA  **********************
 1357 |  1         cw.s    748 | Comment     | 11 |         |    0 | 00/16F1               | *
 1358 |  1         cw.s    749 | Comment     | 11 |         |    0 | 00/16F1               | *<sym>
 1359 |  1         cw.s    750 | Data        | 11 |         |    2 | 00/16F1 : 00 00       | address         dw      $0000          ; store the device driver address here
 1360 |  1         cw.s    751 | Comment     | 11 |         |    0 | 00/16F3               | *<sym>
 1361 |  1         cw.s    752 | Data        | 11 |         |    1 | 00/16F3 : 00          | ramunitid       dfb     $00            ; store the device's unit number here
 1362 |  1         cw.s    753 | Comment     | 11 |         |    0 | 00/16F4               | *
 1363 |  1         cw.s    754 | Comment     | 11 |         |    0 | 00/16F4               | *
 1364 |  1         cw.s    755 | Comment     | 11 |         |    0 | 00/16F4               | *********** MLI call parameters ***********
 1365 |  1         cw.s    756 | Comment     | 11 |         |    0 | 00/16F4               | *<sym>
 1366 |  1         cw.s    757 | Empty       | 11 |         |    0 | 00/16F4               | quit_parms                             ; QUIT call
 1367 |  1         cw.s    758 | Data        | 11 |         |    1 | 00/16F4 : 04          |                 hex     04             
 1368 |  1         cw.s    759 | Data        | 11 |         |    2 | 00/16F5 : 00 00       |                 hex     0000           
 1369 |  1         cw.s    760 | Data        | 11 |         |    1 | 00/16F7 : 00          |                 hex     00             
 1370 |  1         cw.s    761 | Data        | 11 |         |    2 | 00/16F8 : 00 00       |                 hex     0000           
 1371 |  1         cw.s    762 | Comment     | 11 |         |    0 | 00/16FA               | *
 1372 |  1         cw.s    763 | Comment     | 11 |         |    0 | 00/16FA               | *<sym>
 1373 |  1         cw.s    764 | Empty       | 11 |         |    0 | 00/16FA               | c0_parms                               ; CREATE file
 1374 |  1         cw.s    765 | Data        | 11 |         |    1 | 00/16FA : 07          |                 hex     07             
 1375 |  1         cw.s    766 | Data        | 11 |         |    2 | 00/16FB : 19 17       |                 da      fname          ; path name (same as open)
 1376 |  1         cw.s    767 | Data        | 11 |         |    1 | 00/16FD : C3          |                 hex     C3             
 1377 |  1         cw.s    768 | Data        | 11 |         |    1 | 00/16FE : 00          |                 hex     00             
 1378 |  1         cw.s    769 | Data        | 11 |         |    2 | 00/16FF : 00 00       |                 hex     0000           
 1379 |  1         cw.s    770 | Data        | 11 |         |    1 | 00/1701 : 00          |                 hex     00             
 1380 |  1         cw.s    771 | Data        | 11 |         |    2 | 00/1702 : 00 00       |                 hex     0000           
 1381 |  1         cw.s    772 | Data        | 11 |         |    2 | 00/1704 : 00 00       |                 hex     0000           
 1382 |  1         cw.s    773 | Comment     | 11 |         |    0 | 00/1706               | *<sym>
 1383 |  1         cw.s    774 | Empty       | 11 |         |    0 | 00/1706               | cb_parms                               ; WRITE file
 1384 |  1         cw.s    775 | Data        | 11 |         |    1 | 00/1706 : 04          |                 hex     04             
 1385 |  1         cw.s    776 | Comment     | 11 |         |    0 | 00/1707               | *<sym>
 1386 |  1         cw.s    777 | Data        | 11 |         |    1 | 00/1707 : 00          | refw            hex     00             
 1387 |  1         cw.s    778 | Comment     | 11 |         |    0 | 00/1708               | *<sym>
 1388 |  1         cw.s    779 | Data        | 11 |         |    2 | 00/1708 : 00 20       | datab           hex     0020           
 1389 |  1         cw.s    780 | Comment     | 11 |         |    0 | 00/170A               | *<sym>
 1390 |  1         cw.s    781 | Data        | 11 |         |    2 | 00/170A : 27 2F       | lengw           hex     272F           
 1391 |  1         cw.s    782 | Comment     | 11 |         |    0 | 00/170C               | *<sym>
 1392 |  1         cw.s    783 | Data        | 11 |         |    2 | 00/170C : 00 00       |                 hex     0000           
 1393 |  1         cw.s    784 | Empty       | 11 |         |    0 | 00/170E               |                                        
 1394 |  1         cw.s    785 | Comment     | 11 |         |    0 | 00/170E               | *<sym>
 1395 |  1         cw.s    786 | Empty       | 11 |         |    0 | 00/170E               | c1_parms                               ; DESTROY file
 1396 |  1         cw.s    787 | Data        | 11 |         |    1 | 00/170E : 01          |                 hex     01             
 1397 |  1         cw.s    788 | Data        | 11 |         |    2 | 00/170F : 19 17       |                 da      fname          ; path name (same as open)
 1398 |  1         cw.s    789 | Comment     | 11 |         |    0 | 00/1711               | *<sym>
 1399 |  1         cw.s    790 | Empty       | 11 |         |    0 | 00/1711               | cc_parms                               ; CLOSE file
 1400 |  1         cw.s    791 | Data        | 11 |         |    1 | 00/1711 : 01          |                 hex     01             ; number of params.
 1401 |  1         cw.s    792 | Data        | 11 |         |    1 | 00/1712 : 00          |                 hex     00             
 1402 |  1         cw.s    793 | Comment     | 11 |         |    0 | 00/1713               | *<sym>
 1403 |  1         cw.s    794 | Empty       | 11 |         |    0 | 00/1713               | c8_parms                               ; OPEN file for reading
 1404 |  1         cw.s    795 | Data        | 11 |         |    1 | 00/1713 : 03          |                 hex     03             ; number of params.
 1405 |  1         cw.s    796 | Data        | 11 |         |    2 | 00/1714 : 19 17       |                 da      fname          ; path name
 1406 |  1         cw.s    797 | Comment     | 11 |         |    0 | 00/1716               | *<sym>
 1407 |  1         cw.s    798 | Data        | 11 |         |    2 | 00/1716 : 00 00       | fbuff           hex     0000           
 1408 |  1         cw.s    799 | Comment     | 11 |         |    0 | 00/1718               | *<sym>
 1409 |  1         cw.s    800 | Data        | 11 |         |    1 | 00/1718 : 00          | ref             hex     00             ; ref ID
 1410 |  1         cw.s    801 | Comment     | 11 |         |    0 | 00/1719               | *<sym>
 1411 |  1         cw.s    802 | Data        | 11 |         |   16 | 00/1719 : 00 00 00 00 | fname           ds      16             
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
 1412 |  1         cw.s    803 | Comment     | 11 |         |    0 | 00/1729               | *
 1413 |  1         cw.s    804 | Comment     | 11 |         |    0 | 00/1729               | *<sym>
 1414 |  1         cw.s    805 | Empty       | 11 |         |    0 | 00/1729               | ce_param                               ; SET_MARK
 1415 |  1         cw.s    806 | Data        | 11 |         |    1 | 00/1729 : 02          |                 hex     02             ; number of params.
 1416 |  1         cw.s    807 | Comment     | 11 |         |    0 | 00/172A               | *<sym>
 1417 |  1         cw.s    808 | Data        | 11 |         |    1 | 00/172A : 00          | refce           hex     00             ; ref ID
 1418 |  1         cw.s    809 | Comment     | 11 |         |    0 | 00/172B               | *<sym>
 1419 |  1         cw.s    810 | Data        | 11 |         |    3 | 00/172B : 00 00 00    | filepos         hex     000000         ; new file position
 1420 |  1         cw.s    811 | Comment     | 11 |         |    0 | 00/172E               | *
 1421 |  1         cw.s    812 | Comment     | 11 |         |    0 | 00/172E               | *<sym>
 1422 |  1         cw.s    813 | Empty       | 11 |         |    0 | 00/172E               | ca_parms                               ; READ file
 1423 |  1         cw.s    814 | Data        | 11 |         |    1 | 00/172E : 04          |                 hex     04             ; number of params.
 1424 |  1         cw.s    815 | Comment     | 11 |         |    0 | 00/172F               | *<sym>
 1425 |  1         cw.s    816 | Data        | 11 |         |    1 | 00/172F : 00          | refread         hex     00             ; ref #
 1426 |  1         cw.s    817 | Comment     | 11 |         |    0 | 00/1730               | *<sym>
 1427 |  1         cw.s    818 | Data        | 11 |         |    2 | 00/1730 : 36 17       | rdbuffa         da      rdbuff         
 1428 |  1         cw.s    819 | Comment     | 11 |         |    0 | 00/1732               | *<sym>
 1429 |  1         cw.s    820 | Data        | 11 |         |    2 | 00/1732 : 00 00       | rreq            hex     0000           ; bytes requested
 1430 |  1         cw.s    821 | Comment     | 11 |         |    0 | 00/1734               | *<sym>
 1431 |  1         cw.s    822 | Data        | 11 |         |    2 | 00/1734 : 00 00       | readlen         hex     0000           ; bytes read
 1432 |  1         cw.s    823 | Comment     | 11 |         |    0 | 00/1736               | *<sym>
 1433 |  1         cw.s    824 | Comment     | 11 |         |    0 | 00/1736               | *
 1434 |  1         cw.s    825 | Data        | 11 |         |  256 | 00/1736 : 00 00 00 00 | rdbuff          ds      256            
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
 1435 |  1         cw.s    826 | Comment     | 11 |         |    0 | 00/1836               | *<sym>
 1436 |  1         cw.s    827 | Comment     | 11 |         |    0 | 00/1836               | *
 1437 |  1         cw.s    828 | Comment     | 11 |         |    0 | 00/1836               | *<sym>
 1438 |  1         cw.s    829 | Empty       | 11 |         |    0 | 00/1836               | c7_param                               ; GET_PREFIX
 1439 |  1         cw.s    830 | Data        | 11 |         |    1 | 00/1836 : 01          |                 hex     01             ; number of params.
 1440 |  1         cw.s    831 | Data        | 11 |         |    2 | 00/1837 : 40 18       |                 da      path           
 1441 |  1         cw.s    832 | Comment     | 11 |         |    0 | 00/1839               | *
 1442 |  1         cw.s    833 | Comment     | 11 |         |    0 | 00/1839               | *<sym>
 1443 |  1         cw.s    834 | Empty       | 11 |         |    0 | 00/1839               | c6_param                               ; SET_PREFIX
 1444 |  1         cw.s    835 | Data        | 11 |         |    1 | 00/1839 : 01          |                 hex     01             ; number of params.
 1445 |  1         cw.s    836 | Data        | 11 |         |    2 | 00/183A : 40 18       |                 da      path           
 1446 |  1         cw.s    837 | Comment     | 11 |         |    0 | 00/183C               | *
 1447 |  1         cw.s    838 | Comment     | 11 |         |    0 | 00/183C               | *<sym>
 1448 |  1         cw.s    839 | Empty       | 11 |         |    0 | 00/183C               | c5_param                               ; ONLINE
 1449 |  1         cw.s    840 | Data        | 11 |         |    1 | 00/183C : 02          |                 hex     02             ; number of params.
 1450 |  1         cw.s    841 | Comment     | 11 |         |    0 | 00/183D               | *<sym>
 1451 |  1         cw.s    842 | Data        | 11 |         |    1 | 00/183D : 00          | unit            hex     00             
 1452 |  1         cw.s    843 | Data        | 11 |         |    2 | 00/183E : 40 18       |                 da      path           
 1453 |  1         cw.s    844 | Comment     | 11 |         |    0 | 00/1840               | *
 1454 |  1         cw.s    845 | Comment     | 11 |         |    0 | 00/1840               | *<sym>
 1455 |  1         cw.s    846 | Data        | 11 |         |  256 | 00/1840 : 00 00 00 00 | path            ds      256            ; storage for path
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
 1456 |  1         cw.s    847 | Comment     | 11 |         |    0 | 00/1940               | *
 1457 |  1         cw.s    848 | Comment     | 11 |         |    0 | 00/1940               | *<sym>
 1458 |  1         cw.s    849 | Empty       | 11 |         |    0 | 00/1940               | c4_param                               ; GET_FILE_INFO
 1459 |  1         cw.s    850 | Data        | 11 |         |    1 | 00/1940 : 0A          |                 hex     0A             
 1460 |  1         cw.s    851 | Data        | 11 |         |    2 | 00/1941 : 40 18       |                 da      path           
 1461 |  1         cw.s    852 | Comment     | 11 |         |    0 | 00/1943               | *<sym>
 1462 |  1         cw.s    853 | Data        | 11 |         |    1 | 00/1943 : 00          | access          hex     00             
 1463 |  1         cw.s    854 | Comment     | 11 |         |    0 | 00/1944               | *<sym>
 1464 |  1         cw.s    855 | Data        | 11 |         |    1 | 00/1944 : 00          | ftype           hex     00             
 1465 |  1         cw.s    856 | Comment     | 11 |         |    0 | 00/1945               | *<sym>
 1466 |  1         cw.s    857 | Data        | 11 |         |    2 | 00/1945 : 00 00       | auxtype         hex     0000           
 1467 |  1         cw.s    858 | Comment     | 11 |         |    0 | 00/1947               | *<sym>
 1468 |  1         cw.s    859 | Data        | 11 |         |    1 | 00/1947 : 00          | stotype         hex     00             
 1469 |  1         cw.s    860 | Comment     | 11 |         |    0 | 00/1948               | *<sym>
 1470 |  1         cw.s    861 | Data        | 11 |         |    2 | 00/1948 : 00 00       | blocks          hex     0000           
 1471 |  1         cw.s    862 | Comment     | 11 |         |    0 | 00/194A               | *<sym>
 1472 |  1         cw.s    863 | Data        | 11 |         |    2 | 00/194A : 00 00       | date            hex     0000           
 1473 |  1         cw.s    864 | Comment     | 11 |         |    0 | 00/194C               | *<sym>
 1474 |  1         cw.s    865 | Data        | 11 |         |    2 | 00/194C : 00 00       | time            hex     0000           
 1475 |  1         cw.s    866 | Data        | 11 |         |    2 | 00/194E : 00 00       | cdate           hex     0000           
 1476 |  1         cw.s    867 | Comment     | 11 |         |    0 | 00/1950               | *<sym>
 1477 |  1         cw.s    868 | Data        | 11 |         |    2 | 00/1950 : 00 00       | ctime           hex     0000           
 1478 |  1         cw.s    869 | Comment     | 11 |         |    0 | 00/1952               | *
 1479 |  1         cw.s    870 | Comment     | 11 |         |    0 | 00/1952               | *<sym>
 1480 |  1         cw.s    871 | Empty       | 11 |         |    0 | 00/1952               | d1_param                               ; GET_EOF
 1481 |  1         cw.s    872 | Data        | 11 |         |    1 | 00/1952 : 02          |                 hex     02             
 1482 |  1         cw.s    873 | Comment     | 11 |         |    0 | 00/1953               | *<sym>
 1483 |  1         cw.s    874 | Data        | 11 |         |    1 | 00/1953 : 00          | refd1           hex     00             
 1484 |  1         cw.s    875 | Comment     | 11 |         |    0 | 00/1954               | *<sym>
 1485 |  1         cw.s    876 | Data        | 11 |         |    3 | 00/1954 : 00 00 00    | filelength      ds      3              
 1486 |  1         cw.s    877 | Comment     | 11 |         |    0 | 00/1957               | *<sym>
 1487 |  1         cw.s    878 | Data        | 11 |         |    2 | 00/1957 : 00 00       | max             ds      2              ; adress of last byte to analyse (+1) = $2000 + filelength
 1488 |  1         cw.s    879 | Empty       | 11 |         |    0 | 00/1959               |                                        
 1489 |  1         cw.s    880 | Comment     | 11 |         |    0 | 00/1959               | *********************** vars ***********************
 1490 |  1         cw.s    881 | Comment     | 11 |         |    0 | 00/1959               | *<sym>
 1491 |  1         cw.s    882 | Data        | 11 |         |    6 | 00/1959 : 00 00 00 00 | myfac           ds      6              ; to store tempo FAC
      |                        |             |    |         |      |           00 00       |
 1492 |  1         cw.s    883 | Comment     | 11 |         |    0 | 00/195F               | *<sym>
 1493 |  1         cw.s    884 | Data        | 11 |         |    3 | 00/195F : 00 00 00    | counter         hex     000000         ; store any counter here
 1494 |  1         cw.s    885 | Comment     | 11 |         |    0 | 00/1962               | *<sym>
 1495 |  1         cw.s    886 | Data        | 11 |         |    3 | 00/1962 : 00 00 00    | wordscnt        hex     000000         
 1496 |  1         cw.s    887 | Empty       | 11 |         |    0 | 00/1965               |                                        
 1497 |  1         cw.s    888 | Comment     | 11 |         |    0 | 00/1965               | *<sym>
 1498 |  1         cw.s    889 | Data        | 11 |         |    3 | 00/1965 : 00 00 00    | recnum          hex     000000         
 1499 |  1         cw.s    890 | Comment     | 11 |         |    0 | 00/1968               | *<sym>
 1500 |  1         cw.s    891 | Data        | 11 |         |    2 | 00/1968 : 00 00       | tempo           hex     0000           
 1501 |  1         cw.s    892 | Comment     | 11 |         |    0 | 00/196A               | *<sym>
 1502 |  1         cw.s    893 | Empty       | 11 |         |    0 | 00/196A               |                                        
 1503 |  1         cw.s    894 | Data        | 11 |         |    1 | 00/196A : 00          | draft           hex     00             
 1504 |  1         cw.s    895 | Comment     | 11 |         |    0 | 00/196B               | *<sym>
 1505 |  1         cw.s    896 | Data        | 11 |         |    1 | 00/196B : 00          | progdiv         hex     00             
 1506 |  1         cw.s    897 | Comment     | 11 |         |    0 | 00/196C               | *<sym>
 1507 |  1         cw.s    898 | Empty       | 11 |         |    0 | 00/196C               |                                        
 1508 |  1         cw.s    899 | Empty       | 11 |         |    0 | 00/196C               |                                        
 1509 |  1         cw.s    900 | Comment     | 11 |         |    0 | 00/196C               | *<sym>
 1510 |  1         cw.s    901 | Data        | 11 |         |   16 | 00/196C : 30 31 32 33 | tohex           asc     '0123456789ABCDEF'
      |                        |             |    |         |      |           34 35 36 37 |
      |                        |             |    |         |      |           38 39 41 42 |
      |                        |             |    |         |      |           43 44 45 46 |
 1511 |  1         cw.s    902 | Empty       | 11 |         |    0 | 00/197C               |                                        
 1512 |  1         cw.s    903 | Comment     | 11 |         |    0 | 00/197C               | *<sym>
 1513 |  1         cw.s    904 | Data        | 11 |         |    1 | 00/197C : 00          | letter          ds      1              ; letter
 1514 |  1         cw.s    905 | Comment     | 11 |         |    0 | 00/197D               | *<sym>
 1515 |  1         cw.s    906 | Data        | 11 |         |    1 | 00/197D : 00          | pos             ds      1              ; position of letter in pattern
 1516 |  1         cw.s    907 | Empty       | 11 |         |    0 | 00/197E               |                                        
 1517 |  1         cw.s    908 | Comment     | 11 |         |    0 | 00/197E               | *<sym>
 1518 |  1         cw.s    909 | Data        | 11 |         |    1 | 00/197E : 00          | savech          ds      1              
 1519 |  1         cw.s    910 | Comment     | 11 |         |    0 | 00/197F               | *<sym>
 1520 |  1         cw.s    911 | Data        | 11 |         |    2 | 00/197F : 01 00       | quitflag        da      1              
 1521 |  1         cw.s    912 | Comment     | 11 |         |    0 | 00/1981               | *<sym>
 1522 |  1         cw.s    913 | Data        | 11 |         |    1 | 00/1981 : 00          | savebit         ds      1              
 1523 |  1         cw.s    914 | Comment     | 11 |         |    0 | 00/1982               | *<sym>
 1524 |  1         cw.s    915 | Data        | 11 |         |    1 | 00/1982 : 00          | col             ds      1              
 1525 |  1         cw.s    916 | Comment     | 11 |         |    0 | 00/1983               | *<sym>
 1526 |  1         cw.s    917 | Data        | 11 |         |    1 | 00/1983 : 00          | pbpos           ds      1              
 1527 |  1         cw.s    918 | Comment     | 11 |         |    0 | 00/1984               | *<sym>
 1528 |  1         cw.s    919 | Data        | 11 |         |    1 | 00/1984 : 00          | displayed       ds      1              
 1529 |  1         cw.s    920 | Comment     | 11 |         |    0 | 00/1985               | *<sym>
 1530 |  1         cw.s    921 | Empty       | 11 |         |    0 | 00/1985               |                                        
 1531 |  1         cw.s    922 | Comment     | 11 |         |    0 | 00/1985               | **** strings ****
 1532 |  1         cw.s    923 | Comment     | 11 |         |    0 | 00/1985               | *<sym>
 1533 |  1         cw.s    924 | Data        | 11 |         |    9 | 00/1985 : 08 C5 F2 F2 | kolib           str     "Error : "     
      |                        |             |    |         |      |           EF F2 A0 BA |
      |                        |             |    |         |      |           A0          |
 1534 |  1         cw.s    925 | Comment     | 11 |         |    0 | 00/198E               | *<sym>
 1535 |  1         cw.s    926 | Data        | 11 |         |   13 | 00/198E : 0C EF F0 E5 | oklib           str     "operation ok" 
      |                        |             |    |         |      |           F2 E1 F4 E9 |
      |                        |             |    |         |      |           EF EE A0 EF |
      |                        |             |    |         |      |           EB          |
 1536 |  1         cw.s    927 | Comment     | 11 |         |    0 | 00/199B               | *<sym>
 1537 |  1         cw.s    928 | Data        | 11 |         |   14 | 00/199B : 0D 69 6E 64 | filelib         str     'index file : '
      |                        |             |    |         |      |           65 78 20 66 |
      |                        |             |    |         |      |           69 6C 65 20 |
      |                        |             |    |         |      |           3A 20       |
 1538 |  1         cw.s    929 | Comment     | 11 |         |    0 | 00/19A9               | *<sym>
 1539 |  1         cw.s    930 | Data        | 11 |         |   15 | 00/19A9 : 0E 46 6F 75 | totallib        str     'Found words : '
      |                        |             |    |         |      |           6E 64 20 77 |
      |                        |             |    |         |      |           6F 72 64 73 |
      |                        |             |    |         |      |           20 3A 20    |
 1540 |  1         cw.s    931 | Comment     | 11 |         |    0 | 00/19B8               | *<sym>
 1541 |  1         cw.s    932 | Data        | 11 |         |   33 | 00/19B8 : 20 45 6E 74 | patternlib      str     'Enter pattern (A-Z a-z and ?) : '
      |                        |             |    |         |      |           65 72 20 70 |
      |                        |             |    |         |      |           61 74 74 65 |
      |                        |             |    |         |      |           72 6E 20 28 |
      |                        |             |    |         |      |           41 2D 5A 20 |
      |                        |             |    |         |      |           61 2D 7A 20 |
      |                        |             |    |         |      |           61 6E 64 20 |
      |                        |             |    |         |      |           3F 29 20 3A |
      |                        |             |    |         |      |           20          |
 1542 |  1         cw.s    933 | Comment     | 11 |         |    0 | 00/19D9               | *<sym>
 1543 |  1         cw.s    934 | Data        | 11 |         |   19 | 00/19D9 : 12 45 72 72 | kopatlib        str     'Error in pattern !'
      |                        |             |    |         |      |           6F 72 20 69 |
      |                        |             |    |         |      |           6E 20 70 61 |
      |                        |             |    |         |      |           74 74 65 72 |
      |                        |             |    |         |      |           6E 20 21    |
 1544 |  1         cw.s    935 | Comment     | 11 |         |    0 | 00/19EC               | *<sym>
 1545 |  1         cw.s    936 | Data        | 11 |         |   11 | 00/19EC : 0A 50 61 74 | patlib          str     'Pattern : '   
      |                        |             |    |         |      |           74 65 72 6E |
      |                        |             |    |         |      |           20 3A 20    |
 1546 |  1         cw.s    937 | Comment     | 11 |         |    0 | 00/19F7               | *<sym>
 1547 |  1         cw.s    938 | Data        | 11 |         |    4 | 00/19F7 : 03 20 3A 20 | seplib          str     ' : '          
 1548 |  1         cw.s    939 | Comment     | 11 |         |    0 | 00/19FB               | *<sym>
 1549 |  1         cw.s    940 | Data        | 11 |         |   61 | 00/19FB : 20 43 20 52 | titlelib        asc     ' C R O S S W ? R D   S O L V E R (v. 2.1.1 - French - ODS9++)'
      |                        |             |    |         |      |           20 4F 20 53 |
      |                        |             |    |         |      |           20 53 20 57 |
      |                        |             |    |         |      |           20 3F 20 52 |
      |                        |             |    |         |      |           20 44 20 20 |
      |                        |             |    |         |      |           20 53 20 4F |
      |                        |             |    |         |      |           20 4C 20 56 |
      |                        |             |    |         |      |           20 45 20 52 |
      |                        |             |    |         |      |           20 28 76 2E |
      |                        |             |    |         |      |           20 32 2E 31 |
      |                        |             |    |         |      |           2E 31 20 2D |
      |                        |             |    |         |      |           20 46 72 65 |
      |                        |             |    |         |      |           6E 63 68 20 |
      |                        |             |    |         |      |           2D 20 4F 44 |
      |                        |             |    |         |      |           53 39 2B 2B |
      |                        |             |    |         |      |           29          |
 1550 |  1         cw.s    941 | Data        | 11 |         |    1 | 00/1A38 : 00          |                 hex     00             
 1551 |  1         cw.s    942 | Empty       | 11 |         |    0 | 00/1A39               |                                        
 1552 |  1         cw.s    943 | Comment     | 11 |         |    0 | 00/1A39               | *<sym>
 1553 |  1         cw.s    944 | Data        | 11 |         |    6 | 00/1A39 : 05 57 4F 52 | words           str     'WORDS'        
      |                        |             |    |         |      |           44 53       |
 1554 |  1         cw.s    945 | Comment     | 11 |         |    0 | 00/1A3F               | *<sym>
 1555 |  1         cw.s    946 | Data        | 11 |         |   38 | 00/1A3F : 25 50 72 65 | presskeylib     str     'Press a any key... (or esc. to abort)'
      |                        |             |    |         |      |           73 73 20 61 |
      |                        |             |    |         |      |           20 61 6E 79 |
      |                        |             |    |         |      |           20 6B 65 79 |
      |                        |             |    |         |      |           2E 2E 2E 20 |
      |                        |             |    |         |      |           28 6F 72 20 |
      |                        |             |    |         |      |           65 73 63 2E |
      |                        |             |    |         |      |           20 74 6F 20 |
      |                        |             |    |         |      |           61 62 6F 72 |
      |                        |             |    |         |      |           74 29       |
 1556 |  1         cw.s    947 | Empty       | 11 |         |    0 | 00/1A65               |                                        
 1557 |  1         cw.s    948 | Comment     | 11 |         |    0 | 00/1A65               | *<sym>
 1558 |  1         cw.s    949 | Data        | 11 |         |   16 | 00/1A65 : 00 00 00 00 | pattern         ds      16             
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
      |                        |             |    |         |      |           00 00 00 00 |
 1559 |  1         cw.s    950 | Comment     | 11 |         |    0 | 00/1A75               | *<sym>
 1560 |  1         cw.s    951 | Data        | 11 |         |    1 | 00/1A75 : 00          | refword         ds      1              
 1561 |  1         cw.s    952 | Comment     | 11 |         |    0 | 00/1A76               | **************************************************
 1562 |  1         cw.s    953 | Comment     | 11 |         |    0 | 00/1A76               | *<sym>
 1563 |  1         cw.s    954 | Empty       | 11 |         |    0 | 00/1A76               | ozunid_2                               
 1564 |  1         cw.s    954 | Equivalence | 11 |         |    0 | 00/1A76               | prgend          equ     ozunid_2       
------+------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
